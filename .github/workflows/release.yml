name: Release

on:
  workflow_dispatch:

# Sets permissions for GitHub Pages deployment and NPM publishing
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "release"
  cancel-in-progress: false

jobs:
  build-and-test:
    uses: ./.github/workflows/build-and-test.yml

  release:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    outputs:
      released: ${{ steps.release_outputs.outputs.released }}
      version: ${{ steps.release_outputs.outputs.version }}
      tag: ${{ steps.release_outputs.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org/'

      - name: Install dependencies
        run: npm ci

      - name: Run build
        run: npm run build

      - name: Git configuration
        run: |
          git config --global user.email "patrick.deklein@cito.nl"
          git config --global user.name "patrickdeklein"

      - uses: googleapis/release-please-action@v4
        id: release
        with:
          release-type: node
      # The logic below handles the npm publication:
      - uses: actions/checkout@v4
        # these if statements ensure that a publication only occurs when
        # a new release is created:
        if: ${{ steps.release.outputs.release_created }}
      - uses: actions/setup-node@v4
        with:
          node-version: 12
          registry-url: 'https://registry.npmjs.org'
        if: ${{ steps.release.outputs.release_created }}
      - run: npm ci
        if: ${{ steps.release.outputs.release_created }}
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
        if: ${{ steps.release.outputs.release_created }}

      - name: Create GitHub Release
        if: steps.release.outputs.release_created
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.release.outputs.tag_name }}
          name: Release ${{ steps.release.outputs.tag_name }}
          body: |
            # Release ${{ steps.release.outputs.tag_name }}
            
            ## ðŸ“¦ Installation
            
            ```bash
            npm install @citolab/qti-components@${{ steps.release.outputs.tag_name }}
            ```
            
            ## ðŸ”— Links
            - [NPM Package](https://www.npmjs.com/package/@citolab/qti-components/v/${{ steps.release.outputs.tag_name }})
            - [Documentation](https://citolab.github.io/qti-components/)
            - [Changelog](https://github.com/Citolab/qti-components/releases)
          draft: false
          prerelease: false
          generate_release_notes: true

      - name: Publish to NPM
        if: steps.release.outputs.release_created
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish

  deploy-storybook:
    needs: release
    runs-on: ubuntu-latest
    if: needs.release.outputs.released == 'true'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.release.outputs.tag }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Build Storybook
        run: npm run build-storybook

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './storybook-static'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
