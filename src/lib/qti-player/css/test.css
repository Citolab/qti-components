test-scoring-buttons {
  &[view].show {
    @apply flex gap-4;
  }

  form {
    @apply flex gap-0.5;
  }
  input {
    @apply appearance-none;
  }
  input:checked + label {
    @apply bg-primary;
  }
  label {
    @apply flex h-9 w-9 cursor-pointer select-none flex-col items-center justify-center whitespace-nowrap rounded-full border-[3px] border-gray-300 bg-white p-1 text-sm font-semibold text-gray-900 shadow-none hover:bg-gray-50;
  }

  input:checked + label {
    @apply border-green-400 bg-green-100 text-green-500;
  }

  input:checked + label:first-of-type {
    @apply border-red-400 bg-red-100 text-red-500;
  }

  &[disabled='true'] label {
    @apply cursor-default border-slate-200 text-slate-200;
  }
}

test-view-toggle {
  @apply ms-3 text-sm font-medium text-gray-900 flex items-center gap-2;
  input {
    @apply sr-only;
  }
  label {
    @apply inline-flex items-center cursor-pointer;
  }
  div {
    @apply relative w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600;
  }
}

qti-assessment-item-ref:not(:has(qti-assessment-item)) {
  display: none;
}

/* qti-assessment-test,
qti-test-part,
qti-assessment-section,
qti-assessment-item-ref,
qti-assessment-item {
  width: 100vw;
  height: 100%;
  display: block;
}
qti-assessment-section {
  display: flex;
  scroll-snap-type: x mandatory;
  scroll-padding-left: 1rem;
  scroll-padding-right: 1rem;
  overflow-x: scroll;
}
qti-assessment-item-ref {
  scroll-snap-align: start;
  scroll-snap-stop: always;
} */

test-item-indicator {
  border-color: var(--qti-border-color-gray);
  &:state(info) {
    border-radius: 0px !important;
  }
  &:state(completed) {
    transform: translateY(-4px);
    background-color: var(--qti-bg-gray-100);
  }
  &:state(correct) {
    background-color: var(--qti-correct-light);
    border-color: var(--qti-correct);
  }
  &:state(incorrect) {
    background-color: var(--qti-incorrect-light);
    border-color: var(--qti-incorrect);
  }
  &:state(active) {
    /* border-color: var(--qti-active); */

    &:before {
      content: '';
      display: block;
      border-bottom: 2px solid var(--qti-active);
      width: 100%;
      transform: translateY(16px);
    }
  }
}
