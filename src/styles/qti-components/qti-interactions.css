@layer qti-components {
  qti-choice-interaction {
    &.qti-input-control-hidden {
      & qti-simple-choice {
        @apply button hov foc;
        &::part(ch) {
          display: none;
        }
        &[aria-checked='true'] {
          @apply act;
        }
        &[aria-readonly='true'] {
          @apply rdo;
        }
        &[aria-disabled='true'] {
          @apply dis;
        }
      }
    }
    &:not(.qti-input-control-hidden) {
      & qti-simple-choice {
        @apply check hov foc;
        &[aria-checked='true'] {
          @apply act;
        }
        &[aria-readonly='true'] {
          @apply rdo;
        }
        &[aria-disabled='true'] {
          @apply dis;
        }

        &::part(cha) {
          @apply check-size;
        }
        &[role='radio']::part(ch) {
          @apply check-radio;
        }
        &[role='radio'][aria-checked='true']::part(cha) {
          @apply check-radio-checked;
        }
        &[role='checkbox']::part(ch) {
          @apply check-checkbox;
        }
        &[role='checkbox'][aria-checked='true']::part(cha) {
          @apply check-checkbox-checked;
        }
      }
    }
    & qti-simple-choice {
      &[data-correct-response='true'] {
        &::after {
          content: '\02714';
          color: #16a34a; /* text-green-600 */
        }
      }
    }

    & qti-simple-choice > p {
      margin: 0;
      padding: 0;
    }
  }

  qti-text-entry-interaction {
    &::part(input) {
      @apply text hov foc;
    }
  }

  qti-extended-text-interaction {
    &::part(textarea) {
      @apply text hov foc;
    }
  }

  qti-gap-match-interaction {
    & qti-gap-text {
      @apply drag hov foc;
    }
    & qti-gap {
      @apply drop hov foc;
      display: inline-flex;
      width: 8rem; /* w-32 */
      &:empty:after {
        content: '\0000a0'; /* when empty, put a space in it */
      }
      &:not(:empty) {
        display: inline-flex;
        padding: 0;
        width: auto;
      }
      &:not(:empty) > * {
        flex: 1;
        transform: rotate(0); /* rotate-0 */
        box-shadow: 0 0 0 1px #e5e7eb; /* ring-gray-200 */
      }
    }
  }

  qti-hotspot-interaction {
    & qti-hotspot-choice {
      &[shape='circle'] {
        @apply spot hov foc rounded-full;
        &[aria-checked='true'] {
          @apply act;
        }
        &[aria-readonly='true'] {
          @apply rdo;
        }
        &[aria-disabled='true'] {
          @apply dis;
        }
      }
      &[shape='rect'] {
        @apply spot hov foc;
        &[aria-checked='true'] {
          @apply act;
        }
        &[aria-readonly='true'] {
          @apply rdo;
        }
        &[aria-disabled='true'] {
          @apply dis;
        }
      }
      &[shape='poly'] {
        &:hover::after {
          @apply act;
          content: '';
          width: 100%;
          height: 100%;
          background: repeating-linear-gradient(
            45deg,
            var(--qti-primary-color),
            var(--qti-primary-color) 5px,
            transparent 5px,
            transparent 10px
          );
          display: block;
        }

        &[aria-checked='true']:after {
          @apply act;
          content: '';
          width: 100%;
          height: 100%;
          background: repeating-linear-gradient(
            45deg,
            transparent,
            transparent 5px,
            var(--qti-primary-color) 5px,
            var(--qti-primary-color) 10px
          );
          display: block;
        }

        &[aria-checked='true'] {
          @apply act;
        }
        &[aria-readonly='true'] {
          @apply rdo;
        }
        &[aria-disabled='true'] {
          @apply dis;
        }
      }
    }
  }

  qti-hottext-interaction {
    qti-hottext {
      display: inline-flex;
    }
    /* &:not(.qti-input-control-hidden),
    &:not(.qti-unselected-hidden) { */
    qti-hottext {
      @apply check hov foc;
      &::part(cha) {
        @apply check-size;
      }
      &[role='radio']::part(ch) {
        @apply check-radio;
      }
      &[role='radio'][aria-checked='true']::part(cha) {
        @apply check-radio-checked;
      }
      &[role='checkbox']::part(ch) {
        @apply check-checkbox;
      }
      &[role='checkbox'][aria-checked='true']::part(cha) {
        @apply check-checkbox-checked;
      }
    }
    /* } */

    &.qti-input-control-hidden {
      qti-hottext {
        @apply button hov foc;
        /* @layer qti-variants { */
        &::part(ch) {
          display: none;
        }
        &[aria-checked='true'] {
          @apply act;
        }
        &[aria-readonly='true'] {
          @apply rdo;
        }
        &[aria-disabled='true'] {
          @apply dis;
        }
      }
      /* } */
    }

    &.qti-unselected-hidden {
      qti-hottext {
        @apply hov foc;
        cursor: pointer;
        &::part(ch) {
          display: none;
        }
        &[aria-checked='true'] {
          background-color: var(--qti-primary-light); /* bg-blue-200 */
        }
        &[aria-readonly='true'] {
          @apply rdo;
        }
        &[aria-disabled='true'] {
          @apply dis;
        }
      }
    }
  }

  qti-inline-choice-interaction {
    &::part(select) {
      @apply select hov foc;
    }
  }

  qti-match-interaction:not(.qti-match-tabular) {
    & qti-simple-match-set:first-of-type {
      display: flex;
      flex-wrap: wrap;
      gap: 0.5rem; /* gap-2 */
      padding-bottom: 1rem; /* pb-4 */

      & qti-simple-associable-choice {
        @apply drag hov foc;
      }
    }

    & qti-simple-match-set:last-of-type {
      display: grid;
      grid-auto-columns: 1fr; /* auto-cols-fr */
      grid-auto-flow: column; /* grid-flow-col */
      gap: 0.5rem; /* gap-2 */
      width: 100%; /* w-full */

      & qti-simple-associable-choice {
        @apply drop hov foc;
        display: flex;
        flex-direction: column;
        min-height: 4rem;
      }

      & qti-simple-associable-choice[enabled] {
        @apply foc;
      }

      & qti-simple-associable-choice[active] {
        @apply act;
      }

      & qti-simple-associable-choice > *:not(qti-simple-associable-choice) {
        pointer-events: none;
      }

      & qti-simple-associable-choice > qti-simple-associable-choice {
        @apply drag hov foc;
        flex-basis: fit-content;
      }
    }
  }

  qti-order-interaction {
    &::part(qti-simple-choice),
    & qti-simple-choice {
      @apply drag hov foc;
    }
    &::part(qti-simple-choice) {
      display: flex;
      overflow: hidden;
      align-items: center;
      width: 100%;
      text-overflow: ellipsis;
    }
    &::part(drops) {
      gap: 0.5rem; /* gap-2 */
    }
    &::part(drags) {
      gap: 0.5rem; /* gap-2 */
    }
    &::part(drop-list) {
      @apply drop hov foc;
      display: flex;
      min-height: 4rem;
    }
    &::part(active) {
      @apply act;
    }
  }

  qti-associate-interaction {
    &::part(qti-simple-associable-choice),
    & qti-simple-associable-choice {
      @apply drag;
      display: flex;
      overflow: hidden;
      align-items: center;
      text-overflow: ellipsis;
    }
    &::part(associables-container) {
      margin: 0.5rem 0; /* my-2 */
      display: flex;
      width: 100%;
      justify-content: space-between;
      background: linear-gradient(
        180deg,
        rgb(0 0 0 / 0%) calc(50% - 1px),
        #000000 calc(50%),
        rgb(0 0 0 / 0%) calc(50% + 1px)
      );
    }
    &::part(active) {
      @apply act;
    }
    &::part(drop-list) {
      @apply drop;
      display: grid;
      height: 3rem;
      width: 33.33%; /* w-1/3 */
    }
  }

  qti-graphic-order-interaction {
    & qti-hotspot-choice {
      @apply spot hov foc;
      &[aria-checked='true'] {
        @apply act;
      }
      &[aria-readonly='true'] {
        @apply rdo;
      }
      &[aria-disabled='true'] {
        @apply dis;
      }
      &[aria-ordervalue] {
        @apply order;
        display: flex;
        justify-content: center;
        align-items: center;
      }
      &[aria-ordervalue]::after {
        content: attr(aria-ordervalue) !important;
      }
    }
  }

  qti-graphic-associate-interaction {
    position: relative;
    display: block;

    & qti-associable-hotspot {
      &[shape='circle'] {
        @apply spot hov foc;
        &[aria-checked='true'] {
          @apply act;
        }
        &[aria-readonly='true'] {
          @apply rdo;
        }
        &[aria-disabled='true'] {
          @apply dis;
        }
      }

      &[shape='square'] {
        @apply spot hov foc;
        &[aria-checked='true'] {
          @apply act;
        }
        &[aria-readonly='true'] {
          @apply rdo;
        }
        &[aria-disabled='true'] {
          @apply dis;
        }
      }
    }
  }

  qti-graphic-gap-match-interaction {
    position: relative;
    & img {
      margin: 0;
      padding: 0;
    }
  }

  qti-slider-interaction {
    display: block;

    --qti-tick-color: rgb(229 231 235 / 1);
    --qti-tick-width: 1px;

    &::part(slider) {
      margin-left: 2rem; /* mx-8 */
      margin-right: 2rem;
      padding-bottom: 1rem; /* pb-4 */
      padding-top: 1.25rem; /* pt-5 */
    }

    --show-bounds: true;
    &::part(bounds) {
      display: flex;
      width: 100%;
      justify-content: space-between;
      margin-bottom: 0.5rem; /* mb-2 */
    }

    --show-ticks: true;
    &::part(ticks) {
      margin-left: 0.125rem; /* mx-0.5 */
      margin-right: 0.125rem;
      margin-bottom: 0.25rem; /* mb-1 */
      height: 0.5rem; /* h-2 */
      background-position: 0 center;
      background: linear-gradient(to right, var(--qti-tick-color) var(--qti-tick-width), transparent 1px) repeat-x;
      background-size: calc(calc(100% - var(--qti-tick-width)) / ((var(--max) - var(--min)) / var(--step))) 100%;
    }

    &::part(rail) {
      display: flex;
      align-items: center;
      box-sizing: border-box;
      height: 0.375rem; /* h-1.5 */
      width: 100%;
      cursor: pointer;
      border-radius: 9999px; /* rounded-full */
      border: 1px solid #d1d5db; /* border-gray-300 */
      background-color: #e5e7eb; /* bg-gray-200 */
    }

    &::part(knob) {
      background-color: var(--qti-primary-color);
      position: relative;
      height: 1rem; /* h-4 */
      width: 1rem; /* w-4 */
      transform-origin: center;
      transform: translateX(-50%);
      cursor: pointer;
      border-radius: 9999px; /* rounded-full */
      left: var(--value-percentage);
    }

    --show-value: true;
    &::part(value) {
      position: absolute;
      bottom: 2rem; /* bottom-8 */
      left: 0.5rem; /* left-2 */
      transform: translateX(-50%);
      cursor: pointer;
      border-radius: 0.25rem; /* rounded */
      background-color: #f3f4f6; /* bg-gray-100 */
      padding: 0.25rem 0.5rem; /* px-2 py-1 */
      text-align: center;
      color: #6b7280; /* text-gray-500 */
    }
  }

  qti-select-point-interaction {
    &::part(point) {
      @apply hover:bg-blue-100 hover:bg-opacity-30;
      @apply point hov foc rounded-full;
    }
  }

  qti-position-object-stage {
    & qti-position-object-interaction {
      /* no styles necessary, only layout styles, defined in the component */
    }
  }

  qti-prompt {
    margin: 0.5rem 0; /* my-2 */
    display: block;
    width: 100%;
  }
}
