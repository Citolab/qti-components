{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-assessment-item/qti-assessment-item"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-assessment-stimulus-ref/qti-assessment-stimulus-ref"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-companion-materials-info/qti-companion-materials-info"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-custom-operator/qti-custom-operator"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-feedback/qti-feedback-block/qti-feedback-block"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-feedback/qti-feedback-inline/qti-feedback-inline"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-feedback/qti-modal-feedback/qti-modal-feedback"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-interaction/qti-associable-hotspot"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-interaction/qti-associate-interaction/qti-associate-interaction"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-interaction/qti-choice-interaction/qti-choice-interaction"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-interaction/qti-custom-interaction/qti-custom-interaction"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-interaction/qti-end-attempt-interaction/qti-end-attempt-interaction"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-interaction/qti-extended-text-interaction/qti-extended-text-interaction"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-interaction/qti-gap-img"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-interaction/qti-gap-match-interaction/qti-gap-match-interaction"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-interaction/qti-gap-text"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-interaction/qti-gap"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-interaction/qti-graphic-associate-interaction/qti-graphic-associate-interaction"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-interaction/qti-graphic-gap-match-interaction/qti-graphic-gap-match-interaction"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-interaction/qti-graphic-order-interaction/qti-graphic-order-interaction"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-interaction/qti-hotspot-choice"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-interaction/qti-hotspot-interaction/qti-hotspot-interaction"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-interaction/qti-hottext-interaction/qti-hottext-interaction"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-interaction/qti-hottext"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-interaction/qti-inline-choice-interaction/qti-inline-choice-interaction"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-interaction/qti-inline-choice"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-interaction/qti-match-interaction/qti-match-interaction"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-interaction/qti-media-interaction/qti-media-interaction"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-interaction/qti-order-interaction/qti-order-interaction"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-interaction/qti-position-object-interaction/qti-position-object-interaction"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-interaction/qti-position-object-interaction/qti-position-object-stage"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-interaction/qti-select-point-interaction/qti-select-point-interaction"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-interaction/qti-simple-associable-choice"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-interaction/qti-simple-choice"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-interaction/qti-slider-interaction/qti-slider-interaction"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-interaction/qti-text-entry-interaction/qti-text-entry-interaction"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-interaction/qti-upload-interaction/qti-upload-interaction"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-item-body/qti-item-body"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-outcome-processing/qti-outcome-processing"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-prompt/qti-prompt"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-response-processing"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-rubric-block/qti-content-body"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-rubric-block/qti-rubric-block"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-stylesheet/qti-stylesheet"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-variable-declaration/qti-outcome-declaration/qti-outcome-declaration"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-variable-declaration/qti-response-declaration/qti-response-declaration"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/internal/event-types.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/internal/events/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-interaction-changed"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-outcome-changed"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/internal/events/qti-assessment-item-log.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "QtiAssessmentItemLogEvent",
            "module": "src/lib/qti-components/internal/events/qti-assessment-item-log.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/internal/events/qti-choice-element-selected.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "QtiChoiceElementSelected",
            "module": "src/lib/qti-components/internal/events/qti-choice-element-selected.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/internal/events/qti-interaction-changed.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "QtiInteractionChanged",
            "module": "src/lib/qti-components/internal/events/qti-interaction-changed.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/internal/events/qti-interaction-response.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "QtiInteractionResponse",
            "module": "src/lib/qti-components/internal/events/qti-interaction-response.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/internal/events/qti-loose-choice.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "QtiLooseChoice",
            "module": "src/lib/qti-components/internal/events/qti-loose-choice.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/internal/events/qti-outcome-changed.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "QtiOutcomeChanged",
            "module": "src/lib/qti-components/internal/events/qti-outcome-changed.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/internal/events/qti-register-choice.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "QtiRegisterChoice",
            "module": "src/lib/qti-components/internal/events/qti-register-choice.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/internal/events/qti-register-hotspot.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "QtiRegisterHotspot",
            "module": "src/lib/qti-components/internal/events/qti-register-hotspot.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/internal/events/qti-register-interaction.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "QtiRegisterInteraction",
            "module": "src/lib/qti-components/internal/events/qti-register-interaction.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/internal/events/qti-register-variable.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "QtiRegisterVariable",
            "module": "src/lib/qti-components/internal/events/qti-register-variable.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/internal/template-strings.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "mapResponse",
          "default": "`<qti-response-processing> <qti-response-condition> <qti-response-if> <qti-is-null> <qti-variable identifier=\"RESPONSE\"></qti-variable> </qti-is-null> <qti-set-outcome-value identifier=\"SCORE\"> <qti-base-value base-type=\"float\">0.0</qti-base-value> </qti-set-outcome-value> </qti-response-if> <qti-response-else> <qti-set-outcome-value identifier=\"SCORE\"> <qti-map-response identifier=\"RESPONSE\"> </qti-map-response> </qti-set-outcome-value> </qti-response-else> </qti-response-condition> </qti-response-processing>`"
        },
        {
          "kind": "variable",
          "name": "mapResponsePoint",
          "default": "`<qti-response-processing> <qti-response-condition> <qti-response-if> <qti-is-null> <qti-variable identifier=\"RESPONSE\"></qti-variable> </qti-is-null> <qti-set-outcome-value identifier=\"SCORE\"> <qti-base-value base-type=\"float\">0</qti-base-value> </qti-set-outcome-value> </qti-response-if> <qti-response-else> <qti-set-outcome-value identifier=\"SCORE\"> <qti-map-response-point identifier=\"RESPONSE\"></qti-map-response-point> </qti-set-outcome-value> </qti-response-else> </qti-response-condition> </qti-response-processing>`"
        },
        {
          "kind": "variable",
          "name": "matchCorrect",
          "default": "`<qti-response-processing> <qti-response-condition> <qti-response-if> <qti-match> <qti-variable identifier=\"RESPONSE\"></qti-variable> <qti-correct identifier=\"RESPONSE\"></qti-correct> </qti-match> <qti-set-outcome-value identifier=\"SCORE\"> <qti-base-value base-type=\"float\">1</qti-base-value> </qti-set-outcome-value> </qti-response-if> <qti-response-else> <qti-set-outcome-value identifier=\"SCORE\"> <qti-base-value base-type=\"float\">0</qti-base-value> </qti-set-outcome-value> </qti-response-else> </qti-response-condition> </qti-response-processing>`"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "mapResponse",
          "declaration": {
            "name": "mapResponse",
            "module": "src/lib/qti-components/internal/template-strings.ts"
          }
        },
        {
          "kind": "js",
          "name": "mapResponsePoint",
          "declaration": {
            "name": "mapResponsePoint",
            "module": "src/lib/qti-components/internal/template-strings.ts"
          }
        },
        {
          "kind": "js",
          "name": "matchCorrect",
          "declaration": {
            "name": "matchCorrect",
            "module": "src/lib/qti-components/internal/template-strings.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/internal/utils.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "convertNumberToUniversalFormat",
          "parameters": [
            {
              "name": "number",
              "type": {
                "text": "number | string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "decimalSeparator"
        },
        {
          "kind": "function",
          "name": "IsNullOrUndefined",
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "unknown"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "removeDoubleSlashes",
          "parameters": [
            {
              "name": "str",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "convertNumberToUniversalFormat",
          "declaration": {
            "name": "convertNumberToUniversalFormat",
            "module": "src/lib/qti-components/internal/utils.ts"
          }
        },
        {
          "kind": "js",
          "name": "decimalSeparator",
          "declaration": {
            "name": "decimalSeparator",
            "module": "src/lib/qti-components/internal/utils.ts"
          }
        },
        {
          "kind": "js",
          "name": "IsNullOrUndefined",
          "declaration": {
            "name": "IsNullOrUndefined",
            "module": "src/lib/qti-components/internal/utils.ts"
          }
        },
        {
          "kind": "js",
          "name": "removeDoubleSlashes",
          "declaration": {
            "name": "removeDoubleSlashes",
            "module": "src/lib/qti-components/internal/utils.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-assessment-item/qti-assessment-item.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiAssessmentItem",
          "members": [
            {
              "kind": "method",
              "name": "_attachEventListeners",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_context",
              "type": {
                "text": "ItemContext"
              },
              "privacy": "private",
              "default": "{ variables: itemContextVariables }"
            },
            {
              "kind": "field",
              "name": "_feedbackElements",
              "type": {
                "text": "QtiFeedback[]"
              },
              "privacy": "private",
              "default": "[]"
            },
            {
              "kind": "method",
              "name": "_getCompletionStatus",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "'completed' | 'incomplete' | 'not_attempted' | 'unknown'"
                }
              }
            },
            {
              "kind": "field",
              "name": "_handleDisabledChange",
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_handleEndAttempt",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_handleReadonlyChange",
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_handleRegisterFeedback",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_handleRegisterInteraction",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_handleRegisterVariable",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_handleSetOutcomeValue",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_handleUpdateResponseVariable",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_initialContext",
              "type": {
                "text": "Readonly<ItemContext>"
              },
              "privacy": "private",
              "default": "{ ...this._context, variables: this._context.variables }"
            },
            {
              "kind": "field",
              "name": "_interactionElements",
              "type": {
                "text": "Interaction[]"
              },
              "privacy": "private",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "_itemTitle",
              "type": {
                "text": "string"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_processTemplates",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_removeEventListeners",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_templateProcessing",
              "type": {
                "text": "QtiTemplateProcessing | null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "adaptive",
              "type": {
                "text": "'true' | 'false'"
              },
              "default": "'false'",
              "attribute": "adaptive"
            },
            {
              "kind": "field",
              "name": "assessmentItemRefId",
              "privacy": "public",
              "description": "Sets the identifier for the assessment item reference if this item is in a test.",
              "parameters": [
                {
                  "description": "The identifier for the assessment item reference.",
                  "name": "identifier"
                }
              ],
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "attribute": "disabled"
            },
            {
              "kind": "method",
              "name": "getOutcome",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Readonly<OutcomeVariable>"
                }
              },
              "parameters": [
                {
                  "name": "identifier",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getResponse",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Readonly<ResponseVariable>"
                }
              },
              "parameters": [
                {
                  "name": "identifier",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getVariable",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Readonly<VariableDeclaration<string | string[] | null>>"
                }
              },
              "parameters": [
                {
                  "name": "identifier",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "identifier"
            },
            {
              "kind": "method",
              "name": "processResponse",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "countNumAttempts",
                  "default": "true"
                },
                {
                  "name": "reportValidityAfterScoring",
                  "default": "true"
                }
              ],
              "type": {
                "text": "processResponse(countNumAttempts = true, reportValidityAfterScoring = true) => boolean"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "attribute": "readonly"
            },
            {
              "kind": "method",
              "name": "reportValidity",
              "privacy": "public",
              "type": {
                "text": "reportValidity() => void"
              }
            },
            {
              "kind": "method",
              "name": "resetResponses",
              "privacy": "public",
              "type": {
                "text": "resetResponses() => void"
              }
            },
            {
              "kind": "method",
              "name": "setOutcomeVariable",
              "privacy": "public",
              "parameters": [
                {
                  "name": "identifier",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "value",
                  "type": {
                    "text": "string | string[] | undefined"
                  }
                }
              ],
              "type": {
                "text": "setOutcomeVariable(identifier: string, value: string | string[] | undefined) => void"
              }
            },
            {
              "kind": "method",
              "name": "showCandidateCorrection",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "show",
                  "type": {
                    "text": "boolean"
                  },
                  "description": "A boolean indicating whether to show or hide candidate correction."
                }
              ],
              "description": "Toggles the display of the candidate correction for all interactions.",
              "type": {
                "text": "showCandidateCorrection(show: boolean) => void"
              }
            },
            {
              "kind": "method",
              "name": "showCorrectResponse",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "show",
                  "type": {
                    "text": "boolean"
                  },
                  "description": "A boolean indicating whether to show or hide correct responses."
                }
              ],
              "description": "Toggles the display of correct responses for all interactions.",
              "type": {
                "text": "showCorrectResponse(show: boolean) => void"
              }
            },
            {
              "kind": "field",
              "name": "timeDependent",
              "type": {
                "text": "'true' | 'false' | null"
              },
              "default": "null",
              "attribute": "timeDependent"
            },
            {
              "kind": "field",
              "name": "title",
              "type": {
                "text": "string"
              },
              "attribute": "title"
            },
            {
              "kind": "method",
              "name": "updateOutcomeVariable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "identifier",
                  "type": {
                    "text": "string"
                  },
                  "description": "The identifier of the response variable to update."
                },
                {
                  "name": "value",
                  "type": {
                    "text": "string | string[] | undefined"
                  },
                  "description": "The new value for the response variable."
                }
              ],
              "description": "Updates the outcome variable with the specified identifier to the given value."
            },
            {
              "kind": "method",
              "name": "updateResponseVariable",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "identifier",
                  "type": {
                    "text": "string"
                  },
                  "description": "The identifier of the response variable to update."
                },
                {
                  "name": "value",
                  "type": {
                    "text": "string | string[] | undefined"
                  },
                  "description": "The new value for the response variable."
                }
              ],
              "description": "Updates the response variable with the specified identifier to the given value."
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "reportValidity",
                  "default": "true"
                }
              ],
              "type": {
                "text": "validate(reportValidity = true) => boolean"
              }
            },
            {
              "kind": "field",
              "name": "variables",
              "type": {
                "text": "VariableValue<string | string[] | null>[]"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "responses",
              "deprecated": "use variables property instead"
            }
          ],
          "events": [
            {
              "name": "qti-assessment-item-connected",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "qti-interaction-changed",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "qti-item-context-updated",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Emitted when through a user action the itemContext is updated, typically on interaction with the interactions, or calling response processing."
            },
            {
              "name": "qti-outcome-changed",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "adaptive",
              "type": {
                "text": "'true' | 'false'"
              },
              "default": "'false'",
              "fieldName": "adaptive"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "fieldName": "disabled"
            },
            {
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "identifier"
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "fieldName": "readonly"
            },
            {
              "name": "timeDependent",
              "type": {
                "text": "'true' | 'false' | null"
              },
              "default": "null",
              "fieldName": "timeDependent"
            },
            {
              "name": "title",
              "type": {
                "text": "string"
              },
              "fieldName": "title"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "summary": "The qti-assessment-item element contains all the other QTI 3 item structures.",
          "tagName": "qti-assessment-item",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-assessment-item/qti-assessment-item.ts",
          "definitionPath": "src/lib/qti-components/qti-assessment-item/qti-assessment-item.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-assessment-item",
          "declaration": {
            "name": "QtiAssessmentItem",
            "module": "src/lib/qti-components/qti-assessment-item/qti-assessment-item.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiAssessmentItem",
          "declaration": {
            "name": "QtiAssessmentItem",
            "module": "src/lib/qti-components/qti-assessment-item/qti-assessment-item.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-assessment-stimulus-ref/qti-assessment-stimulus-ref.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Represents a custom element for referencing an assessment stimulus.",
          "name": "QtiAssessmentStimulusRef",
          "members": [
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "href"
            },
            {
              "kind": "field",
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "identifier"
            },
            {
              "kind": "method",
              "name": "updateStimulusRef",
              "privacy": "public",
              "parameters": [
                {
                  "name": "stimulusRef",
                  "type": {
                    "text": "Element"
                  },
                  "description": "The element to which the stimulus will be appended."
                }
              ],
              "description": "Loads and appends the stimulus to the specified element.",
              "type": {
                "text": "updateStimulusRef(stimulusRef: Element) => void"
              }
            }
          ],
          "attributes": [
            {
              "name": "href",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "href"
            },
            {
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "identifier"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "qti-assessment-stimulus-ref",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-assessment-stimulus-ref/qti-assessment-stimulus-ref.ts",
          "definitionPath": "src/lib/qti-components/qti-assessment-stimulus-ref/qti-assessment-stimulus-ref.ts"
        },
        {
          "kind": "class",
          "description": "",
          "name": "QtiAssessmentStimulusRefConnectedEvent",
          "members": [
            {
              "kind": "field",
              "name": "eventName",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "static": true,
              "default": "'qti-assessment-stimulus-ref-connected'"
            }
          ],
          "superclass": {
            "name": "Event",
            "module": "src/lib/qti-components/qti-assessment-stimulus-ref/qti-assessment-stimulus-ref.ts"
          }
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-assessment-stimulus-ref",
          "declaration": {
            "name": "QtiAssessmentStimulusRef",
            "module": "src/lib/qti-components/qti-assessment-stimulus-ref/qti-assessment-stimulus-ref.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiAssessmentStimulusRef",
          "declaration": {
            "name": "QtiAssessmentStimulusRef",
            "module": "src/lib/qti-components/qti-assessment-stimulus-ref/qti-assessment-stimulus-ref.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiAssessmentStimulusRefConnectedEvent",
          "declaration": {
            "name": "QtiAssessmentStimulusRefConnectedEvent",
            "module": "src/lib/qti-components/qti-assessment-stimulus-ref/qti-assessment-stimulus-ref.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-companion-materials-info/qti-companion-materials-info.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiCompanionMaterialsInfo",
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "qti-companion-materials-info",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-companion-materials-info/qti-companion-materials-info.ts",
          "definitionPath": "src/lib/qti-components/qti-companion-materials-info/qti-companion-materials-info.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-companion-materials-info",
          "declaration": {
            "name": "QtiCompanionMaterialsInfo",
            "module": "src/lib/qti-components/qti-companion-materials-info/qti-companion-materials-info.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiCompanionMaterialsInfo",
          "declaration": {
            "name": "QtiCompanionMaterialsInfo",
            "module": "src/lib/qti-components/qti-companion-materials-info/qti-companion-materials-info.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-custom-operator/qti-custom-operator.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "https://www.imsglobal.org/spec/qti/v3p0/impl#h.fi29q8dubjgw\n<qti-custom-operator class=\"js.org\">\n     <qti-base-value base-type=\"string\"><![CDATA[\n       console.log(context.variables);\n       return 'B'\n       document.querySelector('qti-end-attempt-interaction').disabled = true;\n       ]]></qti-base-value>\n   </qti-custom-operator>\n </qti-set-outcome-value>",
          "name": "QtiCustomOperator",
          "members": [
            {
              "kind": "field",
              "name": "_context",
              "type": {
                "text": "ItemContext | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "calculate",
              "privacy": "public",
              "type": {
                "text": "calculate() => void"
              }
            },
            {
              "kind": "method",
              "name": "handleSlotChange",
              "type": {
                "text": "handleSlotChange() => void"
              }
            },
            {
              "kind": "field",
              "name": "operatorFunction",
              "type": {
                "text": "Function"
              },
              "privacy": "private"
            }
          ],
          "events": [
            {
              "name": "qti-interaction-response",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "qti-set-outcome-value",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "qti-custom-operator",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-custom-operator/qti-custom-operator.ts",
          "definitionPath": "src/lib/qti-components/qti-custom-operator/qti-custom-operator.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-custom-operator",
          "declaration": {
            "name": "QtiCustomOperator",
            "module": "src/lib/qti-components/qti-custom-operator/qti-custom-operator.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiCustomOperator",
          "declaration": {
            "name": "QtiCustomOperator",
            "module": "src/lib/qti-components/qti-custom-operator/qti-custom-operator.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-feedback/qti-feedback-block/qti-feedback-block.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiFeedbackBlock",
          "members": [
            {
              "kind": "field",
              "name": "_context",
              "type": {
                "text": "ItemContext | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              }
            },
            {
              "kind": "method",
              "name": "checkShowFeedback",
              "privacy": "public",
              "parameters": [
                {
                  "name": "outcomeIdentifier",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              },
              "type": {
                "text": "checkShowFeedback(outcomeIdentifier: string) => void"
              }
            },
            {
              "kind": "field",
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "attribute": "identifier",
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              }
            },
            {
              "kind": "field",
              "name": "outcomeIdentifier",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "outcome-identifier",
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              }
            },
            {
              "kind": "method",
              "name": "showFeedback",
              "privacy": "private",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              }
            },
            {
              "kind": "field",
              "name": "showHide",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "attribute": "show-hide",
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              }
            },
            {
              "kind": "field",
              "name": "showStatus",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              }
            }
          ],
          "superclass": {
            "name": "QtiFeedback",
            "module": "/src/lib/qti-components/qti-feedback/qti-feedback"
          },
          "tagName": "qti-feedback-block",
          "customElement": true,
          "attributes": [
            {
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "fieldName": "identifier",
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              }
            },
            {
              "name": "outcome-identifier",
              "type": {
                "text": "string"
              },
              "fieldName": "outcomeIdentifier",
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              }
            },
            {
              "name": "show-hide",
              "type": {
                "text": "string"
              },
              "fieldName": "showHide",
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              }
            }
          ],
          "events": [
            {
              "name": "qti-register-feedback",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              }
            }
          ],
          "modulePath": "src/lib/qti-components/qti-feedback/qti-feedback-block/qti-feedback-block.ts",
          "definitionPath": "src/lib/qti-components/qti-feedback/qti-feedback-block/qti-feedback-block.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-feedback-block",
          "declaration": {
            "name": "QtiFeedbackBlock",
            "module": "src/lib/qti-components/qti-feedback/qti-feedback-block/qti-feedback-block.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiFeedbackBlock",
          "declaration": {
            "name": "QtiFeedbackBlock",
            "module": "src/lib/qti-components/qti-feedback/qti-feedback-block/qti-feedback-block.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-feedback/qti-feedback-inline/qti-feedback-inline.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiFeedbackInline",
          "members": [
            {
              "kind": "field",
              "name": "_context",
              "type": {
                "text": "ItemContext | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              }
            },
            {
              "kind": "method",
              "name": "checkShowFeedback",
              "privacy": "public",
              "parameters": [
                {
                  "name": "outcomeIdentifier",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              },
              "type": {
                "text": "checkShowFeedback(outcomeIdentifier: string) => void"
              }
            },
            {
              "kind": "field",
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "attribute": "identifier",
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              }
            },
            {
              "kind": "field",
              "name": "outcomeIdentifier",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "outcome-identifier",
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              }
            },
            {
              "kind": "method",
              "name": "showFeedback",
              "privacy": "private",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              }
            },
            {
              "kind": "field",
              "name": "showHide",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "attribute": "show-hide",
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              }
            },
            {
              "kind": "field",
              "name": "showStatus",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              }
            }
          ],
          "superclass": {
            "name": "QtiFeedback",
            "module": "/src/lib/qti-components/qti-feedback/qti-feedback"
          },
          "tagName": "qti-feedback-inline",
          "customElement": true,
          "attributes": [
            {
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "fieldName": "identifier",
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              }
            },
            {
              "name": "outcome-identifier",
              "type": {
                "text": "string"
              },
              "fieldName": "outcomeIdentifier",
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              }
            },
            {
              "name": "show-hide",
              "type": {
                "text": "string"
              },
              "fieldName": "showHide",
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              }
            }
          ],
          "events": [
            {
              "name": "qti-register-feedback",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              }
            }
          ],
          "modulePath": "src/lib/qti-components/qti-feedback/qti-feedback-inline/qti-feedback-inline.ts",
          "definitionPath": "src/lib/qti-components/qti-feedback/qti-feedback-inline/qti-feedback-inline.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-feedback-inline",
          "declaration": {
            "name": "QtiFeedbackInline",
            "module": "src/lib/qti-components/qti-feedback/qti-feedback-inline/qti-feedback-inline.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiFeedbackInline",
          "declaration": {
            "name": "QtiFeedbackInline",
            "module": "src/lib/qti-components/qti-feedback/qti-feedback-inline/qti-feedback-inline.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-feedback/qti-feedback.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiFeedback",
          "members": [
            {
              "kind": "field",
              "name": "_context",
              "type": {
                "text": "ItemContext | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "checkShowFeedback",
              "privacy": "public",
              "parameters": [
                {
                  "name": "outcomeIdentifier",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "attribute": "identifier"
            },
            {
              "kind": "field",
              "name": "outcomeIdentifier",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "outcome-identifier"
            },
            {
              "kind": "method",
              "name": "showFeedback",
              "privacy": "private",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "showHide",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "attribute": "show-hide"
            },
            {
              "kind": "field",
              "name": "showStatus",
              "type": {
                "text": "string"
              },
              "privacy": "public"
            }
          ],
          "events": [
            {
              "name": "qti-register-feedback",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "fieldName": "identifier"
            },
            {
              "name": "outcome-identifier",
              "type": {
                "text": "string"
              },
              "fieldName": "outcomeIdentifier"
            },
            {
              "name": "show-hide",
              "type": {
                "text": "string"
              },
              "fieldName": "showHide"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "QtiFeedback",
          "declaration": {
            "name": "QtiFeedback",
            "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-feedback/qti-modal-feedback/qti-modal-feedback.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiModalFeedback",
          "members": [
            {
              "kind": "field",
              "name": "_context",
              "type": {
                "text": "ItemContext | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              }
            },
            {
              "kind": "method",
              "name": "checkShowFeedback",
              "privacy": "public",
              "parameters": [
                {
                  "name": "outcomeIdentifier",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              },
              "type": {
                "text": "checkShowFeedback(outcomeIdentifier: string) => void"
              }
            },
            {
              "kind": "method",
              "name": "closeFeedback",
              "type": {
                "text": "closeFeedback() => void"
              }
            },
            {
              "kind": "field",
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "attribute": "identifier",
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              }
            },
            {
              "kind": "method",
              "name": "openFeedback",
              "type": {
                "text": "openFeedback() => void"
              }
            },
            {
              "kind": "field",
              "name": "outcomeIdentifier",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "outcome-identifier",
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              }
            },
            {
              "kind": "method",
              "name": "showFeedback",
              "privacy": "private",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              }
            },
            {
              "kind": "field",
              "name": "showHide",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "attribute": "show-hide",
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              }
            },
            {
              "kind": "field",
              "name": "showStatus",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              }
            }
          ],
          "superclass": {
            "name": "QtiFeedback",
            "module": "/src/lib/qti-components/qti-feedback/qti-feedback"
          },
          "tagName": "qti-modal-feedback",
          "customElement": true,
          "attributes": [
            {
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "fieldName": "identifier",
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              }
            },
            {
              "name": "outcome-identifier",
              "type": {
                "text": "string"
              },
              "fieldName": "outcomeIdentifier",
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              }
            },
            {
              "name": "show-hide",
              "type": {
                "text": "string"
              },
              "fieldName": "showHide",
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              }
            }
          ],
          "events": [
            {
              "name": "qti-register-feedback",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              }
            }
          ],
          "modulePath": "src/lib/qti-components/qti-feedback/qti-modal-feedback/qti-modal-feedback.ts",
          "definitionPath": "src/lib/qti-components/qti-feedback/qti-modal-feedback/qti-modal-feedback.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-modal-feedback",
          "declaration": {
            "name": "QtiModalFeedback",
            "module": "src/lib/qti-components/qti-feedback/qti-modal-feedback/qti-modal-feedback.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiModalFeedback",
          "declaration": {
            "name": "QtiModalFeedback",
            "module": "src/lib/qti-components/qti-feedback/qti-modal-feedback/qti-modal-feedback.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts",
      "declarations": [
        {
          "kind": "mixin",
          "description": "",
          "name": "ActiveElementMixin",
          "members": [
            {
              "kind": "method",
              "name": "_activate",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_onClick",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_onKeyUp",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "aria-disabled",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "handleDisabledChange",
              "parameters": [
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "disabled",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "identifier"
            },
            {
              "kind": "field",
              "name": "internals",
              "type": {
                "text": "ElementInternals"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "aria-readonly",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "tabIndex",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "0",
              "attribute": "tabindex",
              "reflects": true
            }
          ],
          "events": [
            {
              "type": {
                "text": "CustomEvent"
              },
              "name": ""
            }
          ],
          "attributes": [
            {
              "name": "aria-disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "aria-readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "readonly"
            },
            {
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "identifier"
            },
            {
              "name": "tabindex",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "tabIndex"
            }
          ],
          "parameters": [
            {
              "name": "Base",
              "type": {
                "text": "T"
              }
            },
            {
              "name": "type",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ActiveElementMixin",
          "declaration": {
            "name": "ActiveElementMixin",
            "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts",
      "declarations": [
        {
          "kind": "mixin",
          "description": "",
          "name": "ChoicesMixin",
          "members": [
            {
              "kind": "field",
              "name": "_choiceElements",
              "type": {
                "text": "Choice[]"
              },
              "privacy": "protected",
              "default": "[]"
            },
            {
              "kind": "method",
              "name": "_choiceElementSelectedHandler",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent<{ identifier: string }>"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_configContext",
              "type": {
                "text": "ConfigContext"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_determineInputType",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_getChoiceChecked",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "choice",
                  "type": {
                    "text": "Choice"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleChoiceSelection",
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_handleDisabledChange",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_handleMaxChoicesChange",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "_newValue",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_handleReadonlyChange",
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_handleValueChange",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_registerChoiceElement",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_setChoiceChecked",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "choice",
                  "type": {
                    "text": "Choice"
                  }
                },
                {
                  "name": "checked",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_setInputType",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "choiceElement",
                  "type": {
                    "text": "Choice"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_toggleChoiceChecked",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "choice",
                  "type": {
                    "text": "Choice"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_unregisterChoiceElement",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_updateChoiceSelection",
              "privacy": "protected",
              "description": "Updates the selection state of each choice element based on the current response."
            },
            {
              "kind": "field",
              "name": "_validationMessageElement",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "maxChoices",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "1",
              "attribute": "max-choices"
            },
            {
              "kind": "field",
              "name": "minChoices",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "0",
              "attribute": "min-choices"
            },
            {
              "kind": "method",
              "name": "reportValidity"
            },
            {
              "kind": "field",
              "name": "response",
              "type": {
                "text": "string | string[] | null"
              },
              "default": "''"
            },
            {
              "kind": "method",
              "name": "toggleCandidateCorrection",
              "privacy": "public",
              "parameters": [
                {
                  "name": "show",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "toggleInternalCorrectResponse",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "show",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | null"
              }
            }
          ],
          "attributes": [
            {
              "name": "max-choices",
              "type": {
                "text": "number"
              },
              "default": "1",
              "fieldName": "maxChoices"
            },
            {
              "name": "min-choices",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "minChoices"
            }
          ],
          "parameters": [
            {
              "name": "superClass",
              "type": {
                "text": "T"
              }
            },
            {
              "name": "selector",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ChoicesMixin",
          "declaration": {
            "name": "ChoicesMixin",
            "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/internal/choices/choices.spec.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "TestElement",
          "members": [
            {
              "kind": "method",
              "name": "_addLabels",
              "privacy": "private",
              "inheritedFrom": {
                "name": "VocabularyMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/vocabulary/vocabulary-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "_allLabels",
              "type": {
                "text": "array"
              },
              "privacy": "private",
              "default": "['qti-labels-decimal', 'qti-labels-lower-alpha', 'qti-labels-upper-alpha']",
              "inheritedFrom": {
                "name": "VocabularyMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/vocabulary/vocabulary-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "_allLabelSuffixes",
              "privacy": "private",
              "default": "['qti-labels-suffix-period', 'qti-labels-suffix-parenthesis']",
              "inheritedFrom": {
                "name": "VocabularyMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/vocabulary/vocabulary-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "_classes",
              "type": {
                "text": "string[]"
              },
              "privacy": "private",
              "default": "[]",
              "inheritedFrom": {
                "name": "VocabularyMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/vocabulary/vocabulary-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_getLabel",
              "privacy": "private",
              "parameters": [
                {
                  "name": "index",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "VocabularyMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/vocabulary/vocabulary-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "class",
              "type": {
                "text": "string"
              },
              "attribute": "class",
              "reflects": true,
              "inheritedFrom": {
                "name": "VocabularyMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/vocabulary/vocabulary-mixin.ts"
              }
            }
          ],
          "mixins": [
            {
              "name": "ChoicesMixin",
              "module": "/src/lib/qti-components/qti-interaction/internal/choices/choices.mixin"
            }
          ],
          "superclass": {
            "name": "Interaction",
            "module": "/src/lib/exports/interaction"
          },
          "tagName": "test-element",
          "customElement": true,
          "attributes": [
            {
              "name": "class",
              "type": {
                "text": "string"
              },
              "fieldName": "class",
              "inheritedFrom": {
                "name": "VocabularyMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/vocabulary/vocabulary-mixin.ts"
              }
            }
          ],
          "modulePath": "src/lib/qti-components/qti-interaction/internal/choices/choices.spec.ts",
          "definitionPath": "src/lib/qti-components/qti-interaction/internal/vocabulary/vocabulary-mixin.spec.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "test-element",
          "declaration": {
            "name": "TestElement",
            "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.spec.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-api.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "TouchDragAndDrop",
          "members": [
            {
              "kind": "field",
              "name": "allDropzones",
              "type": {
                "text": "HTMLElement[]"
              },
              "privacy": "private",
              "default": "[]"
            },
            {
              "kind": "method",
              "name": "applyBoundaries",
              "privacy": "private",
              "parameters": [
                {
                  "name": "newLeft",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "newTop",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "element",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "calculateDragDistance",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "touch"
                }
              ]
            },
            {
              "kind": "method",
              "name": "calculateOverlapArea",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "rect1",
                  "type": {
                    "text": "DOMRect"
                  }
                },
                {
                  "name": "rect2",
                  "type": {
                    "text": "DOMRect"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "cloneOffset",
              "type": {
                "text": "object"
              },
              "privacy": "private",
              "default": "{ x: 0, y: 0 }"
            },
            {
              "kind": "field",
              "name": "currentDropTarget",
              "type": {
                "text": "null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "dataTransfer",
              "type": {
                "text": "object"
              },
              "privacy": "private",
              "default": "{ data: {}, setData(type, val) { this.data[type] = val; }, getData(type) { return this.data[type]; }, effectAllowed: 'move' }"
            },
            {
              "kind": "method",
              "name": "dispatchCustomEvent",
              "privacy": "private",
              "parameters": [
                {
                  "name": "element"
                },
                {
                  "name": "eventType"
                },
                {
                  "name": "bubble",
                  "default": "true"
                }
              ]
            },
            {
              "kind": "field",
              "name": "DRAG_CLONE_OPACITY",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "readonly": true,
              "default": "1"
            },
            {
              "kind": "field",
              "name": "dragClone",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "public",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "dragContainers",
              "type": {
                "text": "HTMLElement[]"
              },
              "privacy": "public",
              "default": "[]"
            },
            {
              "kind": "method",
              "name": "dragContainersModified",
              "parameters": [
                {
                  "name": "addedDragContainers",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                },
                {
                  "name": "removedDragContainers",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "draggables",
              "type": {
                "text": "HTMLElement[]"
              },
              "privacy": "public",
              "default": "[]"
            },
            {
              "kind": "method",
              "name": "draggablesModified",
              "parameters": [
                {
                  "name": "addedDraggables",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                },
                {
                  "name": "removedDraggables",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "dragSource",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "public",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "droppables",
              "type": {
                "text": "HTMLElement[]"
              },
              "privacy": "public",
              "default": "[]"
            },
            {
              "kind": "method",
              "name": "droppablesModified",
              "parameters": [
                {
                  "name": "addedDroppables",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                },
                {
                  "name": "removedDroppables",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "findClosestDropzone",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "HTMLElement | null"
                }
              }
            },
            {
              "kind": "method",
              "name": "getDropzoneRect",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "DOMRect"
                }
              },
              "parameters": [
                {
                  "name": "el",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getEventCoordinates",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event"
                },
                {
                  "name": "page",
                  "default": "false"
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleTouchCancel",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleTouchEnd",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleTouchMove",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleTouchStart",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "field",
              "name": "isDraggable",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "isDragging",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "lastTarget",
              "type": {
                "text": "null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "MIN_DRAG_DISTANCE",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "readonly": true,
              "default": "5"
            },
            {
              "kind": "method",
              "name": "resetDragState",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "rootNode",
              "type": {
                "text": "Node"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "method",
              "name": "setDragCloneStyles",
              "privacy": "private",
              "parameters": [
                {
                  "name": "rect",
                  "type": {
                    "text": "DOMRect"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "touchStartPoint",
              "type": {
                "text": "null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "method",
              "name": "updateDragClonePosition",
              "privacy": "private",
              "parameters": [
                {
                  "name": "touch"
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TouchDragAndDrop",
          "declaration": {
            "name": "TouchDragAndDrop",
            "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-api.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts",
      "declarations": [
        {
          "kind": "mixin",
          "description": "",
          "name": "DragDropInteractionMixin",
          "members": [
            {
              "kind": "method",
              "name": "activateDragLocation",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "activateDroppable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "droppable",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "activateDroppables",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "target",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "allDropzones",
              "type": {
                "text": "HTMLElement[]"
              },
              "privacy": "private",
              "default": "[]"
            },
            {
              "kind": "method",
              "name": "appendClone",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "applyInteractionBoundaries",
              "privacy": "private",
              "parameters": [
                {
                  "name": "newLeft",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "newTop",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "element",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "calculateDragDistance",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "touch"
                }
              ]
            },
            {
              "kind": "method",
              "name": "calculateOverlapArea",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "rect1",
                  "type": {
                    "text": "DOMRect"
                  }
                },
                {
                  "name": "rect2",
                  "type": {
                    "text": "DOMRect"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "checkAllMaxAssociations",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "checkMaxAssociations",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "droppable",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "cloneOffset",
              "type": {
                "text": "object"
              },
              "privacy": "private",
              "default": "{ x: 0, y: 0 }"
            },
            {
              "kind": "method",
              "name": "collectResponseData",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              }
            },
            {
              "kind": "field",
              "name": "configuration",
              "type": {
                "text": "InteractionConfiguration"
              },
              "privacy": "protected",
              "default": "{ copyStylesDragClone: true, dragCanBePlacedBack: true, dragOnClick: false }"
            },
            {
              "kind": "field",
              "name": "currentDropTarget",
              "type": {
                "text": "null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "dataTransfer",
              "type": {
                "text": "object"
              },
              "privacy": "private",
              "default": "{ data: {}, setData(type, val) { this.data[type] = val; }, getData(type) { return this.data[type]; }, effectAllowed: 'move' }"
            },
            {
              "kind": "method",
              "name": "deactivateDragLocation",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "deactivateDroppable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "droppable",
                  "type": {
                    "text": "HTMLElement"
                  }
                },
                {
                  "name": "makeDragzoneActive",
                  "default": "true"
                }
              ]
            },
            {
              "kind": "method",
              "name": "deactivateDroppables",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "disableDroppable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "droppable",
                  "type": {
                    "text": "Element"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "dispatchCustomEvent",
              "privacy": "private",
              "parameters": [
                {
                  "name": "element"
                },
                {
                  "name": "eventType"
                },
                {
                  "name": "bubble",
                  "default": "true"
                }
              ]
            },
            {
              "kind": "field",
              "name": "DRAG_CLONE_OPACITY",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "readonly": true,
              "default": "1"
            },
            {
              "kind": "field",
              "name": "dragClone",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "dragContainers",
              "type": {
                "text": "HTMLElement[]"
              },
              "privacy": "private",
              "default": "[]"
            },
            {
              "kind": "method",
              "name": "dragContainersModified",
              "parameters": [
                {
                  "name": "addedDragContainers",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                },
                {
                  "name": "removedDragContainers",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "draggables",
              "type": {
                "text": "HTMLElement[]"
              },
              "privacy": "private",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "draggablesModified",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "dragSource",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "method",
              "name": "dropDraggableInDroppable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "draggable",
                  "type": {
                    "text": "HTMLElement"
                  }
                },
                {
                  "name": "droppable",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "droppableObsever",
              "type": {
                "text": "MutationObserver | null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "droppables",
              "type": {
                "text": "HTMLElement[]"
              },
              "privacy": "private",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "droppablesModified",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "enableDroppable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "droppable",
                  "type": {
                    "text": "Element"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "findClosestDropzone",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "HTMLElement | null"
                }
              }
            },
            {
              "kind": "method",
              "name": "findDraggableInDraggableContainer",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "HTMLElement | undefined"
                }
              },
              "parameters": [
                {
                  "name": "identifier",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getDraggablesFromDroppable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "HTMLElement[]"
                }
              },
              "parameters": [
                {
                  "name": "droppable",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getDropzoneRect",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "DOMRect"
                }
              },
              "parameters": [
                {
                  "name": "el",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getEventCoordinates",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event"
                },
                {
                  "name": "page",
                  "default": "false"
                }
              ]
            },
            {
              "kind": "method",
              "name": "getMatchMaxValue",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "el",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getValidAssociations",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              }
            },
            {
              "kind": "method",
              "name": "handleDraggableContainerChange",
              "parameters": [
                {
                  "name": "dragContainersAdded",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                },
                {
                  "name": "dragContainersRemoved",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleDraggablesChange",
              "parameters": [
                {
                  "name": "dragsAdded",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                },
                {
                  "name": "dragsRemoved",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleDroppablesChange",
              "parameters": [
                {
                  "name": "dropsAdded",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                },
                {
                  "name": "dropsRemoved",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleTouchCancel",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleTouchEnd",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleTouchMove",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "handleTouchStart",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "field",
              "name": "isDraggable",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "isDragging",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "method",
              "name": "isMatchTabular",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "field",
              "name": "lastTarget",
              "type": {
                "text": "null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "maxAssociations",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "max-associations",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "MIN_DRAG_DISTANCE",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "readonly": true,
              "default": "5"
            },
            {
              "kind": "field",
              "name": "minAssociations",
              "type": {
                "text": "number"
              },
              "default": "1",
              "attribute": "min-associations",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "moveDraggableToDroppable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "draggable",
                  "type": {
                    "text": "HTMLElement"
                  }
                },
                {
                  "name": "droppable",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "observer",
              "type": {
                "text": "MutationObserver | null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "onCancel",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "onEnd",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "onMove",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "placeResponse",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "response",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "reportValidity",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "reset",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "save",
                  "default": "true"
                }
              ]
            },
            {
              "kind": "method",
              "name": "resetDragState",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "resizeObserver",
              "type": {
                "text": "ResizeObserver | null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "response",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "method",
              "name": "saveResponse",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "setDragCloneStyles",
              "privacy": "private",
              "parameters": [
                {
                  "name": "rect",
                  "type": {
                    "text": "DOMRect"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "touchStartPoint",
              "type": {
                "text": "null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "method",
              "name": "updateDragClonePosition",
              "privacy": "private",
              "parameters": [
                {
                  "name": "touch"
                }
              ]
            },
            {
              "kind": "method",
              "name": "updateMinDimensionsForDropZones",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "validate",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            }
          ],
          "events": [
            {
              "name": "qti-interaction-response",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "max-associations",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "maxAssociations"
            },
            {
              "name": "min-associations",
              "type": {
                "text": "number"
              },
              "default": "1",
              "fieldName": "minAssociations"
            }
          ],
          "mixins": [
            {
              "name": "FlippablesMixin",
              "module": "/src/lib/qti-components/qti-interaction/internal/drag-drop/flippables-mixin"
            }
          ],
          "parameters": [
            {
              "name": "superClass",
              "type": {
                "text": "T"
              }
            },
            {
              "name": "draggablesSelector",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "droppablesSelector",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "dragContainersSelector",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DragDropInteractionMixin",
          "declaration": {
            "name": "DragDropInteractionMixin",
            "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/internal/drag-drop/flippables-mixin.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "FlippablesInterface"
        },
        {
          "kind": "mixin",
          "description": "",
          "name": "FlippablesMixin",
          "parameters": [
            {
              "name": "superClass",
              "type": {
                "text": "T"
              }
            },
            {
              "name": "_droppablesSel",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "_draggablesSel",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FlippablesInterface",
          "declaration": {
            "name": "FlippablesInterface",
            "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/flippables-mixin.ts"
          }
        },
        {
          "kind": "js",
          "name": "FlippablesMixin",
          "declaration": {
            "name": "FlippablesMixin",
            "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/flippables-mixin.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/internal/drag-drop/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./drag-drop-api"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./drag-drop-interaction-mixin"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./flippables-mixin"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/internal/hotspots/hotspot.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "positionShapes",
          "parameters": [
            {
              "name": "shape",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "coordsNumber",
              "type": {
                "text": "number[]"
              }
            },
            {
              "name": "img",
              "type": {
                "text": "HTMLImageElement"
              }
            },
            {
              "name": "hotspot",
              "type": {
                "text": "HTMLElement"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "positionShapes",
          "declaration": {
            "name": "positionShapes",
            "module": "src/lib/qti-components/qti-interaction/internal/hotspots/hotspot.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/internal/shuffle/shuffle.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "AssociateInteraction",
          "type": {
            "text": "StoryObj"
          },
          "default": "{ render: () => { const shuffledQti = qtiTransformItem() .parse( xml`<qti-assessment-item> <qti-item-body> <qti-associate-interaction response-identifier=\"RESPONSE\" shuffle=\"true\" max-associations=\"3\"> <qti-prompt> Hidden in this list of characters from famous Shakespeare plays are three pairs of rivals. Can you match each character to his adversary? </qti-prompt> <qti-simple-associable-choice data-testid=\"associable-choice\" identifier=\"A\" match-max=\"1\"> Antonio </qti-simple-associable-choice> <qti-simple-associable-choice data-testid=\"associable-choice\" identifier=\"C\" match-max=\"1\"> Capulet </qti-simple-associable-choice> <qti-simple-associable-choice data-testid=\"associable-choice\" identifier=\"D\" match-max=\"1\"> Demetrius </qti-simple-associable-choice> <qti-simple-associable-choice data-testid=\"associable-choice\" identifier=\"L\" match-max=\"1\"> Lysander </qti-simple-associable-choice> <qti-simple-associable-choice data-testid=\"associable-choice\" identifier=\"M\" match-max=\"1\"> Montague </qti-simple-associable-choice> <qti-simple-associable-choice data-testid=\"associable-choice\" identifier=\"P\" match-max=\"1\"> Prospero </qti-simple-associable-choice> </qti-associate-interaction> </qti-item-body> </qti-assessment-item>` ) .shuffleInteractions() .html(); return shuffledQti; }, play: async ({ canvasElement, step }) => { await step('Verify options are shuffled', async () => { const canvas = within(canvasElement); const gapTexts = await canvas.findAllByShadowTestId('associable-choice'); const gapTextIds = Array.from(gapTexts) .map(gapText => gapText.getAttribute('identifier')) .join('#'); expect(gapTextIds).not.toBe('A#C#D#L#M#P'); }); } }"
        },
        {
          "kind": "variable",
          "name": "Choice",
          "type": {
            "text": "StoryObj"
          },
          "default": "{ render: () => { const shuffledQti = qtiTransformItem() .parse( xml` <qti-assessment-item> <qti-item-body> <qti-choice-interaction shuffle=\"true\"> <qti-simple-choice identifier=\"A\">Optie A</qti-simple-choice> <qti-simple-choice identifier=\"B\">Optie B</qti-simple-choice> <qti-simple-choice identifier=\"C\">Optie C</qti-simple-choice> </qti-choice-interaction> </qti-item-body> </qti-assessment-item>` ) .shuffleInteractions() .html(); return shuffledQti; }, play: async ({ canvasElement, step }) => { await step('Verify options are shuffled', async () => { const canvas = within(canvasElement); const ChoiceA = canvas.getByText<QtiSimpleChoice>('Optie A'); const ChoiceB = canvas.getByText<QtiSimpleChoice>('Optie B'); const ChoiceC = canvas.getByText<QtiSimpleChoice>('Optie C'); const bUnderA = toBePositionedRelativeTo(ChoiceB, ChoiceA, 'below'); const cUnderb = toBePositionedRelativeTo(ChoiceC, ChoiceB, 'below'); const result = bUnderA.pass && cUnderb.pass; expect(result).toBe(false); }); } }"
        },
        {
          "kind": "variable",
          "name": "GapMatchInteraction",
          "type": {
            "text": "StoryObj"
          },
          "default": "{ render: () => { const shuffledQti = qtiTransformItem() .parse( xml`<qti-assessment-item> <qti-item-body> <qti-gap-match-interaction response-identifier=\"RESPONSE\" shuffle=\"true\"> <qti-gap-text data-testid=\"gap-text\" identifier=\"W1\" match-max=\"1\" match-min=\"1\" show-hide=\"show\"> plank </qti-gap-text> <qti-gap-text data-testid=\"gap-text\" identifier=\"W2\" match-max=\"1\" match-min=\"1\" show-hide=\"show\"> haring </qti-gap-text> <qti-gap-text data-testid=\"gap-text\" identifier=\"W3\" match-max=\"1\" match-min=\"1\" show-hide=\"show\"> knaagt </qti-gap-text> <qti-gap-text data-testid=\"gap-text\" identifier=\"W4\" match-max=\"1\" match-min=\"1\" show-hide=\"show\"> vlecht </qti-gap-text> <qti-gap-text data-testid=\"gap-text\" identifier=\"W5\" match-max=\"1\" match-min=\"1\" show-hide=\"show\"> eiland </qti-gap-text> <p> Mijn vader zaagt de&#xa0; <qti-gap identifier=\"G1\" /> &#xa0;in vier gelijke stukken. </p> <p> De visboer verkoopt heerlijke&#xa0; <qti-gap identifier=\"G2\" /> . </p> <p> De hamster&#xa0; <qti-gap identifier=\"G3\" /> &#xa0;op een pinda. </p> <p> Moeder maakt een&#xa0; <qti-gap identifier=\"G4\" /> &#xa0;in mijn haar. </p> <p> De piraat heeft ergens op een&#xa0; <qti-gap identifier=\"G5\" /> &#xa0;zijn schat begraven. </p> </qti-gap-match-interaction> </qti-item-body> </qti-assessment-item>` ) .shuffleInteractions() .html(); return shuffledQti; }, play: async ({ canvasElement, step }) => { await step('Verify options are shuffled', async () => { const canvas = within(canvasElement); const gapTexts = await canvas.findAllByShadowTestId('gap-text'); const gapTextIds = Array.from(gapTexts) .map(gapText => gapText.getAttribute('identifier')) .join('#'); expect(gapTextIds).not.toBe('W1#W2#W3#W4#W5'); }); } }"
        },
        {
          "kind": "variable",
          "name": "InlineChoice",
          "type": {
            "text": "StoryObj"
          },
          "default": "{ render: () => { const shuffledQti = qtiTransformItem() .parse( xml` <qti-assessment-item> <qti-item-body> <qti-inline-choice-interaction data-testid=\"inline-choice\" shuffle=\"true\"> <qti-inline-choice identifier=\"G\">Gloucester</qti-inline-choice> <qti-inline-choice identifier=\"L\">Lancaster</qti-inline-choice> <qti-inline-choice identifier=\"Y\">York</qti-inline-choice> </qti-inline-choice-interaction> </qti-item-body> </qti-assessment-item>` ) .shuffleInteractions() .html(); return shuffledQti; }, play: async ({ canvasElement, step }) => { const interaction = await waitFor( () => { const interaction = canvasElement.querySelector('qti-inline-choice-interaction'); if (!interaction) { throw new Error('interaction not loaded yet'); } return interaction; }, { timeout: 5000 } ); await step('Verify options are shuffled', async () => { const originalOrder = ['Gloucester', 'Lancaster', 'York']; const renderedOptions = (Array.from(interaction.shadowRoot.querySelectorAll('option')) as HTMLOptionElement[]) .filter(option => option.textContent !== 'select') .map(option => option.textContent); expect(renderedOptions.join('&')).not.toBe(originalOrder.join('&')); }); } }"
        },
        {
          "kind": "variable",
          "name": "MatchInteraction",
          "type": {
            "text": "StoryObj"
          },
          "default": "{ render: () => { const shuffledQti = qtiTransformItem() .parse( xml` <qti-assessment-item> <qti-item-body> <qti-match-interaction shuffle=\"true\" response-identifier=\"RESPONSE\" max-associations=\"4\"> <qti-prompt>Match the following characters to the Shakespeare play they appeared in:</qti-prompt> <qti-simple-match-set> <qti-simple-associable-choice identifier=\"C\" match-max=\"1\">Capulet</qti-simple-associable-choice> <qti-simple-associable-choice identifier=\"D\" match-max=\"1\">Demetrius</qti-simple-associable-choice> <qti-simple-associable-choice identifier=\"L\" match-max=\"1\">Lysander</qti-simple-associable-choice> <qti-simple-associable-choice identifier=\"P\" match-max=\"1\">Prospero</qti-simple-associable-choice> </qti-simple-match-set> <qti-simple-match-set> <qti-simple-associable-choice identifier=\"M\" match-max=\"4\" >A Midsummer-Night's Dream</qti-simple-associable-choice > <qti-simple-associable-choice identifier=\"R\" match-max=\"4\">Romeo and Juliet</qti-simple-associable-choice> <qti-simple-associable-choice identifier=\"T\" match-max=\"4\">The Tempest</qti-simple-associable-choice> </qti-simple-match-set> </qti-match-interaction> </qti-item-body> </qti-assessment-item>` ) .shuffleInteractions() .html(); return shuffledQti; }, play: async ({ canvasElement, step }) => { const interaction = await waitFor( () => { const interaction = canvasElement.querySelector('qti-match-interaction'); if (!interaction) { throw new Error('interaction not loaded yet'); } return interaction; }, { timeout: 5000 } ); await step('Verify options are shuffled', async () => { const capulet = interaction.querySelector('qti-simple-associable-choice[identifier=\"C\"]'); const demetrius = interaction.querySelector('qti-simple-associable-choice[identifier=\"D\"]'); const lysander = interaction.querySelector('qti-simple-associable-choice[identifier=\"L\"]'); const prospero = interaction.querySelector('qti-simple-associable-choice[identifier=\"P\"]'); const capuletLeftToDemetrius = toBePositionedRelativeTo(capulet, demetrius, 'left'); const demetriusLeftToLysander = toBePositionedRelativeTo(demetrius, lysander, 'left'); const lysanderLeftToProspero = toBePositionedRelativeTo(lysander, prospero, 'left'); const prosperoLeftToLysander = toBePositionedRelativeTo(prospero, lysander, 'left'); const result = capuletLeftToDemetrius.pass && demetriusLeftToLysander.pass && lysanderLeftToProspero.pass && prosperoLeftToLysander.pass; expect(result).toBe(false); const tempest = interaction.querySelector('qti-simple-associable-choice[identifier=\"T\"]'); const midsummer = interaction.querySelector('qti-simple-associable-choice[identifier=\"M\"]'); const romeo = interaction.querySelector('qti-simple-associable-choice[identifier=\"R\"]'); const midsummerLeftToRomeo = toBePositionedRelativeTo(midsummer, romeo, 'left'); const romeoLeftToTempest = toBePositionedRelativeTo(romeo, tempest, 'left'); const result2 = midsummerLeftToRomeo.pass && romeoLeftToTempest.pass; expect(result2).toBe(false); }); } }"
        },
        {
          "kind": "variable",
          "name": "MatchInteractionTabular",
          "type": {
            "text": "StoryObj"
          },
          "default": "{ render: () => { const shuffledQti = qtiTransformItem() .parse( xml` <qti-assessment-item> <qti-item-body> <qti-match-interaction shuffle=\"true\" class=\"qti-match-tabular\" response-identifier=\"RESPONSE\" max-associations=\"4\"> <qti-prompt>Match the following characters to the Shakespeare play they appeared in:</qti-prompt> <qti-simple-match-set> <qti-simple-associable-choice identifier=\"C\" match-max=\"1\">Capulet</qti-simple-associable-choice> <qti-simple-associable-choice identifier=\"D\" match-max=\"1\">Demetrius</qti-simple-associable-choice> <qti-simple-associable-choice identifier=\"L\" match-max=\"1\">Lysander</qti-simple-associable-choice> <qti-simple-associable-choice identifier=\"P\" match-max=\"1\">Prospero</qti-simple-associable-choice> </qti-simple-match-set> <qti-simple-match-set> <qti-simple-associable-choice identifier=\"M\" match-max=\"4\" >A Midsummer-Night's Dream</qti-simple-associable-choice > <qti-simple-associable-choice identifier=\"R\" match-max=\"4\">Romeo and Juliet</qti-simple-associable-choice> <qti-simple-associable-choice identifier=\"T\" match-max=\"4\">The Tempest</qti-simple-associable-choice> </qti-simple-match-set> </qti-match-interaction> </qti-item-body> </qti-assessment-item>` ) .shuffleInteractions() .html(); return shuffledQti; }, play: async ({ canvasElement, step }) => { await step('Verify options are shuffled', async () => { const canvas = within(canvasElement); const rows = canvas.getAllByShadowRole('row'); const columnHeaders = canvas.getAllByShadowRole('columnheader'); const columnHeadersTextValues = columnHeaders.map(header => header.textContent); expect(columnHeadersTextValues).not.toBe(['Capulet', 'Demetrius', 'Lysander', 'Prospero']); const firstColumnCells = rows.slice(1).map(row => row.querySelector('td:first-child')); const firstColumnTextValues = firstColumnCells.map(cell => cell.textContent); expect(firstColumnTextValues.includes(\"A Midsummer-Night's Dream\")); expect(firstColumnTextValues).not.toBe([\"A Midsummer-Night's Dream\", 'Romeo and Juliet', 'The Tempest']); }); } }"
        },
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta"
          },
          "default": "{ component: 'shuffle', title: 'Stories/shuffle', tags: ['!dev'] }"
        },
        {
          "kind": "variable",
          "name": "OrderInteraction",
          "type": {
            "text": "StoryObj"
          },
          "default": "{ render: () => { const shuffledQti = qtiTransformItem() .parse( xml` <qti-assessment-item> <qti-item-body> <qti-order-interaction response-identifier=\"RESPONSE\" shuffle=\"true\"> <qti-prompt>The following F1 drivers finished on the podium in the first ever Grand Prix of Bahrain. Can you rearrange them into the correct finishing order?</qti-prompt> <qti-simple-choice identifier=\"DriverA\">Rubens Barrichello</qti-simple-choice> <qti-simple-choice identifier=\"DriverB\">Jenson Button</qti-simple-choice> <qti-simple-choice identifier=\"DriverC\" fixed=\"true\">Michael Schumacher</qti-simple-choice> </qti-order-interaction> </qti-item-body> </qti-assessment-item>` ) .shuffleInteractions() .html(); return shuffledQti; }, play: async ({ canvasElement, step }) => { await step('Verify options are shuffled', async () => { const canvas = within(canvasElement); const jenson = canvas.getByText<QtiSimpleChoice>('Jenson Button'); const rubens = canvas.getByText<QtiSimpleChoice>('Rubens Barrichello'); const schumacher = canvas.getByText<QtiSimpleChoice>('Michael Schumacher'); const rubensUnderOrRightToJenson = toBePositionedRelativeTo(rubens, jenson, 'below').pass || toBePositionedRelativeTo(rubens, jenson, 'right').pass; const jensonUnderOfRightToSchumacher = toBePositionedRelativeTo(jenson, schumacher, 'below').pass || toBePositionedRelativeTo(jenson, schumacher, 'right').pass; const schumacherUnderOrRightToRubens = toBePositionedRelativeTo(schumacher, rubens, 'below').pass || toBePositionedRelativeTo(schumacher, rubens, 'right').pass; expect( rubensUnderOrRightToJenson && jensonUnderOfRightToSchumacher, 'expect the sequence is different from orginal' ).toBe(false); // we know what sequence it will be because there's a fixed alternative and only 2 non-fixed alternatives, so only 2 possible sequences where 1 is the orginal one that we don't present. expect(rubensUnderOrRightToJenson, 'expect rubens under or right to jenson').toBe(true); expect(schumacherUnderOrRightToRubens, 'expect schumacher under or right to rubens').toBe(true); }); } }"
        },
        {
          "kind": "variable",
          "name": "OrderInteraction2",
          "type": {
            "text": "StoryObj"
          },
          "default": "{ render: () => { const shuffledQti = qtiTransformItem() .parse( xml` <qti-assessment-item> <qti-item-body> <qti-order-interaction response-identifier=\"RESPONSE\" shuffle=\"true\"> <qti-prompt> Zet de volgende dagelijkse activiteiten in de juiste volgorde: </qti-prompt> <qti-simple-choice data-testid=\"simple\" identifier=\"_7277e44510f33087d07f4066d0ce308b\"> Opstaan </qti-simple-choice> <qti-simple-choice data-testid=\"simple\" identifier=\"_1295359046aa972a407e41a1350316e7\"> Aankleden </qti-simple-choice> <qti-simple-choice data-testid=\"simple\" identifier=\"_97094d4eb5162950ed0f771abed47e4d\"> Ontbijten </qti-simple-choice> <qti-simple-choice data-testid=\"simple\" identifier=\"_1815d0886d3fddd35b602bc0054b868d\"> Naar school gaan </qti-simple-choice> <qti-simple-choice data-testid=\"simple\" identifier=\"_ec46da4638d1a6bc9c7d601efcb88bd2\"> Naar bed gaan </qti-simple-choice> </qti-order-interaction> </qti-item-body> </qti-assessment-item>` ) .shuffleInteractions() .html(); return shuffledQti; }, play: async ({ canvasElement, step }) => { await step('Verify options are shuffled', async () => { const canvas = within(canvasElement); const simples = await canvas.findAllByShadowTestId('simple'); const simpleTexts = Array.from(simples) .map(simple => simple.textContent) .join('#'); const originalOrder = 'Opstaan#Aankleden#Ontbijten#Naar school gaan#Naar bed gaan'; expect(simpleTexts).not.toBe(originalOrder); }); } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AssociateInteraction",
          "declaration": {
            "name": "AssociateInteraction",
            "module": "src/lib/qti-components/qti-interaction/internal/shuffle/shuffle.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Choice",
          "declaration": {
            "name": "Choice",
            "module": "src/lib/qti-components/qti-interaction/internal/shuffle/shuffle.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/lib/qti-components/qti-interaction/internal/shuffle/shuffle.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "GapMatchInteraction",
          "declaration": {
            "name": "GapMatchInteraction",
            "module": "src/lib/qti-components/qti-interaction/internal/shuffle/shuffle.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "InlineChoice",
          "declaration": {
            "name": "InlineChoice",
            "module": "src/lib/qti-components/qti-interaction/internal/shuffle/shuffle.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "MatchInteraction",
          "declaration": {
            "name": "MatchInteraction",
            "module": "src/lib/qti-components/qti-interaction/internal/shuffle/shuffle.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "MatchInteractionTabular",
          "declaration": {
            "name": "MatchInteractionTabular",
            "module": "src/lib/qti-components/qti-interaction/internal/shuffle/shuffle.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrderInteraction",
          "declaration": {
            "name": "OrderInteraction",
            "module": "src/lib/qti-components/qti-interaction/internal/shuffle/shuffle.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "OrderInteraction2",
          "declaration": {
            "name": "OrderInteraction2",
            "module": "src/lib/qti-components/qti-interaction/internal/shuffle/shuffle.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/internal/vocabulary/vocabulary-mixin.spec.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "TestElement",
          "members": [
            {
              "kind": "method",
              "name": "_addLabels",
              "privacy": "private",
              "inheritedFrom": {
                "name": "VocabularyMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/vocabulary/vocabulary-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "_allLabels",
              "type": {
                "text": "array"
              },
              "privacy": "private",
              "default": "['qti-labels-decimal', 'qti-labels-lower-alpha', 'qti-labels-upper-alpha']",
              "inheritedFrom": {
                "name": "VocabularyMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/vocabulary/vocabulary-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "_allLabelSuffixes",
              "privacy": "private",
              "default": "['qti-labels-suffix-period', 'qti-labels-suffix-parenthesis']",
              "inheritedFrom": {
                "name": "VocabularyMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/vocabulary/vocabulary-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "_classes",
              "type": {
                "text": "string[]"
              },
              "privacy": "private",
              "default": "[]",
              "inheritedFrom": {
                "name": "VocabularyMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/vocabulary/vocabulary-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_getLabel",
              "privacy": "private",
              "parameters": [
                {
                  "name": "index",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "VocabularyMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/vocabulary/vocabulary-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "class",
              "type": {
                "text": "string"
              },
              "attribute": "class",
              "reflects": true,
              "inheritedFrom": {
                "name": "VocabularyMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/vocabulary/vocabulary-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "shuffle",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "type": {
                "text": "validate() => boolean"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "readonly": true
            }
          ],
          "mixins": [
            {
              "name": "VocabularyMixin",
              "module": "/src/lib/qti-components/qti-interaction/internal/vocabulary/vocabulary-mixin"
            }
          ],
          "superclass": {
            "name": "Interaction",
            "module": "/src/lib/exports/interaction"
          },
          "tagName": "test-element",
          "customElement": true,
          "attributes": [
            {
              "name": "class",
              "type": {
                "text": "string"
              },
              "fieldName": "class",
              "inheritedFrom": {
                "name": "VocabularyMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/vocabulary/vocabulary-mixin.ts"
              }
            }
          ],
          "modulePath": "src/lib/qti-components/qti-interaction/internal/vocabulary/vocabulary-mixin.spec.ts",
          "definitionPath": "src/lib/qti-components/qti-interaction/internal/vocabulary/vocabulary-mixin.spec.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "test-element",
          "declaration": {
            "name": "TestElement",
            "module": "src/lib/qti-components/qti-interaction/internal/vocabulary/vocabulary-mixin.spec.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/internal/vocabulary/vocabulary-mixin.ts",
      "declarations": [
        {
          "kind": "mixin",
          "description": "",
          "name": "VocabularyMixin",
          "members": [
            {
              "kind": "method",
              "name": "_addLabels",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_allLabels",
              "type": {
                "text": "array"
              },
              "privacy": "private",
              "default": "['qti-labels-decimal', 'qti-labels-lower-alpha', 'qti-labels-upper-alpha']"
            },
            {
              "kind": "field",
              "name": "_allLabelSuffixes",
              "privacy": "private",
              "default": "['qti-labels-suffix-period', 'qti-labels-suffix-parenthesis']"
            },
            {
              "kind": "field",
              "name": "_classes",
              "type": {
                "text": "string[]"
              },
              "privacy": "private",
              "default": "[]"
            },
            {
              "kind": "method",
              "name": "_getLabel",
              "privacy": "private",
              "parameters": [
                {
                  "name": "index",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "class",
              "type": {
                "text": "string"
              },
              "attribute": "class",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "class",
              "type": {
                "text": "string"
              },
              "fieldName": "class"
            }
          ],
          "parameters": [
            {
              "name": "superClass",
              "type": {
                "text": "T"
              }
            },
            {
              "name": "_selector",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VocabularyMixin",
          "declaration": {
            "name": "VocabularyMixin",
            "module": "src/lib/qti-components/qti-interaction/internal/vocabulary/vocabulary-mixin.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/qti-associable-hotspot.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiAssociableHotspot",
          "members": [],
          "events": [
            {
              "name": "qti-register-hotspot",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "qti-associable-hotspot",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-interaction/qti-associable-hotspot.ts",
          "definitionPath": "src/lib/qti-components/qti-interaction/qti-associable-hotspot.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-associable-hotspot",
          "declaration": {
            "name": "QtiAssociableHotspot",
            "module": "src/lib/qti-components/qti-interaction/qti-associable-hotspot.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiAssociableHotspot",
          "declaration": {
            "name": "QtiAssociableHotspot",
            "module": "src/lib/qti-components/qti-interaction/qti-associable-hotspot.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/qti-associate-interaction/qti-associate-interaction.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiAssociateInteraction",
          "members": [
            {
              "kind": "field",
              "name": "_childrenMap",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected",
              "default": "[]"
            },
            {
              "kind": "method",
              "name": "_registerChoice",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_registerChoiceHandler",
              "type": {
                "text": "(event: CustomEvent) => void"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "activateDragLocation",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "activateDroppable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "droppable",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "activateDroppables",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "target",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "allDropzones",
              "type": {
                "text": "HTMLElement[]"
              },
              "privacy": "private",
              "default": "[]",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "appendClone",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "applyInteractionBoundaries",
              "privacy": "private",
              "parameters": [
                {
                  "name": "newLeft",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "newTop",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "element",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "calculateDragDistance",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "touch"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "calculateOverlapArea",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "rect1",
                  "type": {
                    "text": "DOMRect"
                  }
                },
                {
                  "name": "rect2",
                  "type": {
                    "text": "DOMRect"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "checkAllMaxAssociations",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "checkMaxAssociations",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "droppable",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "cloneOffset",
              "type": {
                "text": "object"
              },
              "privacy": "private",
              "default": "{ x: 0, y: 0 }",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "collectResponseData",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "configuration",
              "type": {
                "text": "InteractionConfiguration"
              },
              "privacy": "protected",
              "default": "{ copyStylesDragClone: true, dragCanBePlacedBack: true, dragOnClick: false }",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "currentDropTarget",
              "type": {
                "text": "null"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataTransfer",
              "type": {
                "text": "object"
              },
              "privacy": "private",
              "default": "{ data: {}, setData(type, val) { this.data[type] = val; }, getData(type) { return this.data[type]; }, effectAllowed: 'move' }",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "deactivateDragLocation",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "deactivateDroppable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "droppable",
                  "type": {
                    "text": "HTMLElement"
                  }
                },
                {
                  "name": "makeDragzoneActive",
                  "default": "true"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "deactivateDroppables",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "disableDroppable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "droppable",
                  "type": {
                    "text": "Element"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchCustomEvent",
              "privacy": "private",
              "parameters": [
                {
                  "name": "element"
                },
                {
                  "name": "eventType"
                },
                {
                  "name": "bubble",
                  "default": "true"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "DRAG_CLONE_OPACITY",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "readonly": true,
              "default": "1",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "dragClone",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "dragContainers",
              "type": {
                "text": "HTMLElement[]"
              },
              "privacy": "private",
              "default": "[]",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "dragContainersModified",
              "parameters": [
                {
                  "name": "addedDragContainers",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                },
                {
                  "name": "removedDragContainers",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              },
              "type": {
                "text": "dragContainersModified(addedDragContainers: HTMLElement[], removedDragContainers: HTMLElement[]) => void"
              }
            },
            {
              "kind": "field",
              "name": "draggables",
              "type": {
                "text": "HTMLElement[]"
              },
              "privacy": "private",
              "default": "[]",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "draggablesModified",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "dragSource",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "dropDraggableInDroppable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "draggable",
                  "type": {
                    "text": "HTMLElement"
                  }
                },
                {
                  "name": "droppable",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "droppableObsever",
              "type": {
                "text": "MutationObserver | null"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "droppables",
              "type": {
                "text": "HTMLElement[]"
              },
              "privacy": "private",
              "default": "[]",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "droppablesModified",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "enableDroppable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "droppable",
                  "type": {
                    "text": "Element"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "findClosestDropzone",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "HTMLElement | null"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "findDraggableInDraggableContainer",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "HTMLElement | undefined"
                }
              },
              "parameters": [
                {
                  "name": "identifier",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDraggablesFromDroppable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "HTMLElement[]"
                }
              },
              "parameters": [
                {
                  "name": "droppable",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDropzoneRect",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "DOMRect"
                }
              },
              "parameters": [
                {
                  "name": "el",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "getEventCoordinates",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event"
                },
                {
                  "name": "page",
                  "default": "false"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "getMatchMaxValue",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "el",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "getValidAssociations",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleDraggableContainerChange",
              "parameters": [
                {
                  "name": "dragContainersAdded",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                },
                {
                  "name": "dragContainersRemoved",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              },
              "type": {
                "text": "handleDraggableContainerChange(dragContainersAdded: HTMLElement[], dragContainersRemoved: HTMLElement[]) => void"
              }
            },
            {
              "kind": "method",
              "name": "handleDraggablesChange",
              "parameters": [
                {
                  "name": "dragsAdded",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                },
                {
                  "name": "dragsRemoved",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              },
              "type": {
                "text": "handleDraggablesChange(dragsAdded: HTMLElement[], dragsRemoved: HTMLElement[]) => void"
              }
            },
            {
              "kind": "method",
              "name": "handleDroppablesChange",
              "parameters": [
                {
                  "name": "dropsAdded",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                },
                {
                  "name": "dropsRemoved",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              },
              "type": {
                "text": "handleDroppablesChange(dropsAdded: HTMLElement[], dropsRemoved: HTMLElement[]) => void"
              }
            },
            {
              "kind": "method",
              "name": "handleTouchCancel",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleTouchEnd",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleTouchMove",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleTouchStart",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "isDraggable",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "isDragging",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "isMatchTabular",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "lastTarget",
              "type": {
                "text": "null"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "maxAssociations",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "max-associations",
              "reflects": true,
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "MIN_DRAG_DISTANCE",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "readonly": true,
              "default": "5",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "minAssociations",
              "type": {
                "text": "number"
              },
              "default": "1",
              "attribute": "min-associations",
              "reflects": true,
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "moveDraggableToDroppable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "draggable",
                  "type": {
                    "text": "HTMLElement"
                  }
                },
                {
                  "name": "droppable",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "observer",
              "type": {
                "text": "MutationObserver | null"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "onCancel",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "onEnd",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "onMove",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "placeResponse",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "response",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "reportValidity",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              },
              "type": {
                "text": "reportValidity() => boolean"
              }
            },
            {
              "kind": "method",
              "name": "reset",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "save",
                  "default": "true"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              },
              "type": {
                "text": "reset(save = true) => void"
              }
            },
            {
              "kind": "method",
              "name": "resetDragState",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "resizeObserver",
              "type": {
                "text": "ResizeObserver | null"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "response",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "saveResponse",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              },
              "type": {
                "text": "saveResponse() => void"
              }
            },
            {
              "kind": "method",
              "name": "setDragCloneStyles",
              "privacy": "private",
              "parameters": [
                {
                  "name": "rect",
                  "type": {
                    "text": "DOMRect"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "touchStartPoint",
              "type": {
                "text": "null"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "updateDragClonePosition",
              "privacy": "private",
              "parameters": [
                {
                  "name": "touch"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "updateMinDimensionsForDropZones",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              },
              "type": {
                "text": "validate() => boolean"
              }
            }
          ],
          "mixins": [
            {
              "name": "DragDropInteractionMixin",
              "module": "/src/lib/qti-components/qti-interaction/internal/drag-drop"
            }
          ],
          "superclass": {
            "name": "Interaction",
            "module": "/src/lib/exports/interaction"
          },
          "tagName": "qti-associate-interaction",
          "customElement": true,
          "attributes": [
            {
              "name": "max-associations",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "maxAssociations",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "name": "min-associations",
              "type": {
                "text": "number"
              },
              "default": "1",
              "fieldName": "minAssociations",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            }
          ],
          "events": [
            {
              "name": "qti-interaction-response",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            }
          ],
          "modulePath": "src/lib/qti-components/qti-interaction/qti-associate-interaction/qti-associate-interaction.ts",
          "definitionPath": "src/lib/qti-components/qti-interaction/qti-associate-interaction/qti-associate-interaction.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-associate-interaction",
          "declaration": {
            "name": "QtiAssociateInteraction",
            "module": "src/lib/qti-components/qti-interaction/qti-associate-interaction/qti-associate-interaction.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiAssociateInteraction",
          "declaration": {
            "name": "QtiAssociateInteraction",
            "module": "src/lib/qti-components/qti-interaction/qti-associate-interaction/qti-associate-interaction.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/qti-choice-interaction/qti-choice-interaction.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiChoiceInteraction",
          "members": [
            {
              "kind": "method",
              "name": "_addLabels",
              "privacy": "private",
              "inheritedFrom": {
                "name": "VocabularyMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/vocabulary/vocabulary-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "_allLabels",
              "type": {
                "text": "array"
              },
              "privacy": "private",
              "default": "['qti-labels-decimal', 'qti-labels-lower-alpha', 'qti-labels-upper-alpha']",
              "inheritedFrom": {
                "name": "VocabularyMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/vocabulary/vocabulary-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "_allLabelSuffixes",
              "privacy": "private",
              "default": "['qti-labels-suffix-period', 'qti-labels-suffix-parenthesis']",
              "inheritedFrom": {
                "name": "VocabularyMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/vocabulary/vocabulary-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "_choiceElements",
              "type": {
                "text": "Choice[]"
              },
              "privacy": "protected",
              "default": "[]",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_choiceElementSelectedHandler",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent<{ identifier: string }>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "_classes",
              "type": {
                "text": "string[]"
              },
              "privacy": "private",
              "default": "[]",
              "inheritedFrom": {
                "name": "VocabularyMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/vocabulary/vocabulary-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "_configContext",
              "type": {
                "text": "ConfigContext"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_determineInputType",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_getChoiceChecked",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "choice",
                  "type": {
                    "text": "Choice"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_getLabel",
              "privacy": "private",
              "parameters": [
                {
                  "name": "index",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "VocabularyMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/vocabulary/vocabulary-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_handleChoiceSelection",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "_handleDisabledChange",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_handleMaxChoicesChange",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "_newValue",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "_handleReadonlyChange",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_handleSlotChange",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_handleValueChange",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_registerChoiceElement",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_setChoiceChecked",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "choice",
                  "type": {
                    "text": "Choice"
                  }
                },
                {
                  "name": "checked",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_setInputType",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "choiceElement",
                  "type": {
                    "text": "Choice"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_toggleChoiceChecked",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "choice",
                  "type": {
                    "text": "Choice"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_unregisterChoiceElement",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_updateChoiceSelection",
              "privacy": "protected",
              "description": "Updates the selection state of each choice element based on the current response.",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "_validationMessageElement",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "class",
              "type": {
                "text": "string"
              },
              "attribute": "class",
              "reflects": true,
              "inheritedFrom": {
                "name": "VocabularyMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/vocabulary/vocabulary-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "maxChoices",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "1",
              "attribute": "max-choices",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "minChoices",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "0",
              "attribute": "min-choices",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "reportValidity",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              },
              "type": {
                "text": "reportValidity() => void"
              }
            },
            {
              "kind": "field",
              "name": "response",
              "type": {
                "text": "string | string[] | null"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "toggleCandidateCorrection",
              "privacy": "public",
              "parameters": [
                {
                  "name": "show",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              },
              "type": {
                "text": "toggleCandidateCorrection(show: boolean) => void"
              }
            },
            {
              "kind": "method",
              "name": "toggleInternalCorrectResponse",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "show",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              },
              "type": {
                "text": "validate() => boolean"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | null"
              },
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "orientation",
              "type": {
                "text": "Orientation"
              },
              "privacy": "public",
              "default": "'vertical'",
              "deprecated": ", use 'qti-orientation-horizontal' or 'qti-orientation-vertical' instead",
              "attribute": "orientation",
              "parsedType": {
                "text": "'horizontal' | 'vertical'"
              }
            }
          ],
          "attributes": [
            {
              "name": "class",
              "type": {
                "text": "string"
              },
              "fieldName": "class",
              "inheritedFrom": {
                "name": "VocabularyMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/vocabulary/vocabulary-mixin.ts"
              }
            },
            {
              "name": "max-choices",
              "type": {
                "text": "number"
              },
              "default": "1",
              "fieldName": "maxChoices",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "name": "min-choices",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "minChoices",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "name": "orientation",
              "type": {
                "text": "Orientation"
              },
              "default": "'vertical'",
              "deprecated": ", use 'qti-orientation-horizontal' or 'qti-orientation-vertical' instead",
              "fieldName": "orientation",
              "parsedType": {
                "text": "'horizontal' | 'vertical'"
              }
            }
          ],
          "mixins": [
            {
              "name": "VocabularyMixin",
              "module": "/src/lib/qti-components/qti-interaction/internal/vocabulary/vocabulary-mixin"
            },
            {
              "name": "ChoicesMixin",
              "module": "/src/lib/qti-components/qti-interaction/internal/choices/choices.mixin"
            }
          ],
          "superclass": {
            "name": "Interaction",
            "module": "/src/lib/exports/interaction"
          },
          "tagName": "qti-choice-interaction",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-interaction/qti-choice-interaction/qti-choice-interaction.ts",
          "definitionPath": "src/lib/qti-components/qti-interaction/qti-choice-interaction/qti-choice-interaction.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-choice-interaction",
          "declaration": {
            "name": "QtiChoiceInteraction",
            "module": "src/lib/qti-components/qti-interaction/qti-choice-interaction/qti-choice-interaction.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiChoiceInteraction",
          "declaration": {
            "name": "QtiChoiceInteraction",
            "module": "src/lib/qti-components/qti-interaction/qti-choice-interaction/qti-choice-interaction.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/qti-custom-interaction/interface.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/qti-custom-interaction/qti-custom-interaction.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiCustomInteraction",
          "members": [
            {
              "kind": "field",
              "name": "_errorMessage",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "baseItemUrl",
              "type": {
                "text": "string"
              },
              "attribute": "data-base-item"
            },
            {
              "kind": "field",
              "name": "baseRefUrl",
              "type": {
                "text": "string"
              },
              "attribute": "data-base-ref"
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "string"
              },
              "attribute": "data"
            },
            {
              "kind": "method",
              "name": "getIFrames",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "getInnerIFrames",
              "privacy": "private",
              "parameters": [
                {
                  "name": "iframeDocument",
                  "type": {
                    "text": "Document"
                  }
                },
                {
                  "name": "iframes",
                  "default": "[]"
                }
              ]
            },
            {
              "kind": "method",
              "name": "handlePostMessage",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MessageEvent"
                  }
                }
              ],
              "type": {
                "text": "handlePostMessage(event: MessageEvent) => void"
              }
            },
            {
              "kind": "field",
              "name": "id",
              "type": {
                "text": "string"
              },
              "attribute": "id"
            },
            {
              "kind": "field",
              "name": "manifest",
              "type": {
                "text": "{\n    script: string[];\n    style: string[];\n    media: string[];\n  }"
              }
            },
            {
              "kind": "method",
              "name": "postToWindowAndIframes",
              "privacy": "private",
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "rawResponse",
              "type": {
                "text": "string | string[]"
              },
              "privacy": "private",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "response",
              "type": {
                "text": "string | string[] | null"
              }
            },
            {
              "kind": "method",
              "name": "setupCES",
              "type": {
                "text": "setupCES() => void"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "type": {
                "text": "validate() => boolean"
              }
            }
          ],
          "attributes": [
            {
              "name": "data",
              "type": {
                "text": "string"
              },
              "fieldName": "data"
            },
            {
              "name": "data-base-item",
              "type": {
                "text": "string"
              },
              "fieldName": "baseItemUrl"
            },
            {
              "name": "data-base-ref",
              "type": {
                "text": "string"
              },
              "fieldName": "baseRefUrl"
            },
            {
              "name": "id",
              "type": {
                "text": "string"
              },
              "fieldName": "id"
            }
          ],
          "superclass": {
            "name": "Interaction",
            "module": "/src/lib/exports/interaction"
          },
          "tagName": "qti-custom-interaction",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-interaction/qti-custom-interaction/qti-custom-interaction.ts",
          "definitionPath": "src/lib/qti-components/qti-interaction/qti-custom-interaction/qti-custom-interaction.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-custom-interaction",
          "declaration": {
            "name": "QtiCustomInteraction",
            "module": "src/lib/qti-components/qti-interaction/qti-custom-interaction/qti-custom-interaction.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiCustomInteraction",
          "declaration": {
            "name": "QtiCustomInteraction",
            "module": "src/lib/qti-components/qti-interaction/qti-custom-interaction/qti-custom-interaction.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/qti-end-attempt-interaction/qti-end-attempt-interaction.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiEndAttemptInteraction",
          "members": [
            {
              "kind": "field",
              "name": "countAttempt",
              "type": {
                "text": "'true' | 'false' | null"
              },
              "privacy": "public",
              "default": "null",
              "description": "Defines the number of attempts that a user can make using the 'endAttemptInteraction' mechanism (this can be used to limit the number of hints, etc.). [More information](https://www.imsglobal.org/sites/default/files/spec/qti/v3/info/index.html#DataCharacteristic_EndAttemptInteraction.Attr_count-attempt)",
              "attribute": "count-attempt"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "endAttempt",
              "privacy": "public",
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "type": {
                "text": "endAttempt(_: Event) => void"
              }
            },
            {
              "kind": "field",
              "name": "responseIdentifier",
              "attribute": "response-identifier"
            },
            {
              "kind": "field",
              "name": "title",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'end attempt'",
              "attribute": "title"
            }
          ],
          "events": [
            {
              "name": "end-attempt",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "count-attempt",
              "type": {
                "text": "'true' | 'false' | null"
              },
              "default": "null",
              "description": "Defines the number of attempts that a user can make using the 'endAttemptInteraction' mechanism (this can be used to limit the number of hints, etc.). [More information](https://www.imsglobal.org/sites/default/files/spec/qti/v3/info/index.html#DataCharacteristic_EndAttemptInteraction.Attr_count-attempt)",
              "fieldName": "countAttempt"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "response-identifier",
              "fieldName": "responseIdentifier"
            },
            {
              "name": "title",
              "type": {
                "text": "string"
              },
              "default": "'end attempt'",
              "fieldName": "title"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "qti-end-attempt-interaction",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-interaction/qti-end-attempt-interaction/qti-end-attempt-interaction.ts",
          "definitionPath": "src/lib/qti-components/qti-interaction/qti-end-attempt-interaction/qti-end-attempt-interaction.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-end-attempt-interaction",
          "declaration": {
            "name": "QtiEndAttemptInteraction",
            "module": "src/lib/qti-components/qti-interaction/qti-end-attempt-interaction/qti-end-attempt-interaction.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiEndAttemptInteraction",
          "declaration": {
            "name": "QtiEndAttemptInteraction",
            "module": "src/lib/qti-components/qti-interaction/qti-end-attempt-interaction/qti-end-attempt-interaction.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/qti-extended-text-interaction/qti-extended-text-interaction.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiExtendedTextInteraction",
          "members": [
            {
              "kind": "field",
              "name": "_handleResponseChange",
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_rows",
              "type": {
                "text": "number"
              },
              "privacy": "protected",
              "default": "5"
            },
            {
              "kind": "field",
              "name": "classNames",
              "attribute": "class"
            },
            {
              "kind": "field",
              "name": "dataPatternmaskMessage",
              "type": {
                "text": "string"
              },
              "attribute": "data-patternmask-message"
            },
            {
              "kind": "field",
              "name": "expectedLength",
              "type": {
                "text": "number"
              },
              "description": "expected length is mapped to the property maxlength on the textarea",
              "attribute": "expected-length"
            },
            {
              "kind": "method",
              "name": "handleclassNamesChange",
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "classes",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "type": {
                "text": "handleclassNamesChange(_: any, classes: string) => void"
              }
            },
            {
              "kind": "field",
              "name": "patternMask",
              "type": {
                "text": "string"
              },
              "attribute": "pattern-mask"
            },
            {
              "kind": "field",
              "name": "placeholderText",
              "type": {
                "text": "string"
              },
              "description": "text appearing in the extended-text-interaction if it is empty",
              "attribute": "placeholder-text"
            },
            {
              "kind": "method",
              "name": "reportValidity",
              "type": {
                "text": "reportValidity() => void"
              }
            },
            {
              "kind": "field",
              "name": "response",
              "type": {
                "text": "string | null"
              },
              "default": "null"
            },
            {
              "kind": "method",
              "name": "setEmptyAttribute",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "text",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "textChanged",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "toggleCorrectResponse",
              "privacy": "public",
              "type": {
                "text": "toggleCorrectResponse() => void"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "type": {
                "text": "validate() => void"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | null"
              }
            }
          ],
          "attributes": [
            {
              "name": "class",
              "fieldName": "classNames"
            },
            {
              "name": "data-patternmask-message",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPatternmaskMessage"
            },
            {
              "name": "expected-length",
              "type": {
                "text": "number"
              },
              "description": "expected length is mapped to the property maxlength on the textarea",
              "fieldName": "expectedLength"
            },
            {
              "name": "pattern-mask",
              "type": {
                "text": "string"
              },
              "fieldName": "patternMask"
            },
            {
              "name": "placeholder-text",
              "type": {
                "text": "string"
              },
              "description": "text appearing in the extended-text-interaction if it is empty",
              "fieldName": "placeholderText"
            }
          ],
          "superclass": {
            "name": "Interaction",
            "module": "/src/lib/exports/interaction"
          },
          "tagName": "qti-extended-text-interaction",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-interaction/qti-extended-text-interaction/qti-extended-text-interaction.ts",
          "definitionPath": "src/lib/qti-components/qti-interaction/qti-extended-text-interaction/qti-extended-text-interaction.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-extended-text-interaction",
          "declaration": {
            "name": "QtiExtendedTextInteraction",
            "module": "src/lib/qti-components/qti-interaction/qti-extended-text-interaction/qti-extended-text-interaction.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiExtendedTextInteraction",
          "declaration": {
            "name": "QtiExtendedTextInteraction",
            "module": "src/lib/qti-components/qti-interaction/qti-extended-text-interaction/qti-extended-text-interaction.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/qti-gap-img.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiGapImg",
          "members": [
            {
              "kind": "field",
              "name": "tabindex",
              "type": {
                "text": "number | undefined"
              },
              "default": "0",
              "attribute": "tabindex",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "tabindex",
              "type": {
                "text": "number | undefined"
              },
              "default": "0",
              "fieldName": "tabindex"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "qti-gap-img",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-interaction/qti-gap-img.ts",
          "definitionPath": "src/lib/qti-components/qti-interaction/qti-gap-img.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-gap-img",
          "declaration": {
            "name": "QtiGapImg",
            "module": "src/lib/qti-components/qti-interaction/qti-gap-img.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiGapImg",
          "declaration": {
            "name": "QtiGapImg",
            "module": "src/lib/qti-components/qti-interaction/qti-gap-img.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/qti-gap-match-interaction/qti-gap-match-interaction.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiGapMatchInteraction",
          "members": [
            {
              "kind": "method",
              "name": "activateDragLocation",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "activateDroppable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "droppable",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "activateDroppables",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "target",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "allDropzones",
              "type": {
                "text": "HTMLElement[]"
              },
              "privacy": "private",
              "default": "[]",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "appendClone",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "applyInteractionBoundaries",
              "privacy": "private",
              "parameters": [
                {
                  "name": "newLeft",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "newTop",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "element",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "calculateDragDistance",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "touch"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "calculateOverlapArea",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "rect1",
                  "type": {
                    "text": "DOMRect"
                  }
                },
                {
                  "name": "rect2",
                  "type": {
                    "text": "DOMRect"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "checkAllMaxAssociations",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "checkMaxAssociations",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "droppable",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "cloneOffset",
              "type": {
                "text": "object"
              },
              "privacy": "private",
              "default": "{ x: 0, y: 0 }",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "collectResponseData",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "configuration",
              "type": {
                "text": "InteractionConfiguration"
              },
              "privacy": "protected",
              "default": "{ copyStylesDragClone: true, dragCanBePlacedBack: true, dragOnClick: false }",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "currentDropTarget",
              "type": {
                "text": "null"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataTransfer",
              "type": {
                "text": "object"
              },
              "privacy": "private",
              "default": "{ data: {}, setData(type, val) { this.data[type] = val; }, getData(type) { return this.data[type]; }, effectAllowed: 'move' }",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "deactivateDragLocation",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "deactivateDroppable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "droppable",
                  "type": {
                    "text": "HTMLElement"
                  }
                },
                {
                  "name": "makeDragzoneActive",
                  "default": "true"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "deactivateDroppables",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "disableDroppable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "droppable",
                  "type": {
                    "text": "Element"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchCustomEvent",
              "privacy": "private",
              "parameters": [
                {
                  "name": "element"
                },
                {
                  "name": "eventType"
                },
                {
                  "name": "bubble",
                  "default": "true"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "DRAG_CLONE_OPACITY",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "readonly": true,
              "default": "1",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "dragClone",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "dragContainers",
              "type": {
                "text": "HTMLElement[]"
              },
              "privacy": "private",
              "default": "[]",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "dragContainersModified",
              "parameters": [
                {
                  "name": "addedDragContainers",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                },
                {
                  "name": "removedDragContainers",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              },
              "type": {
                "text": "dragContainersModified(addedDragContainers: HTMLElement[], removedDragContainers: HTMLElement[]) => void"
              }
            },
            {
              "kind": "field",
              "name": "draggables",
              "type": {
                "text": "HTMLElement[]"
              },
              "privacy": "private",
              "default": "[]",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "draggablesModified",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "dragSource",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "dropDraggableInDroppable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "draggable",
                  "type": {
                    "text": "HTMLElement"
                  }
                },
                {
                  "name": "droppable",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "droppableObsever",
              "type": {
                "text": "MutationObserver | null"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "droppables",
              "type": {
                "text": "HTMLElement[]"
              },
              "privacy": "private",
              "default": "[]",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "droppablesModified",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "enableDroppable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "droppable",
                  "type": {
                    "text": "Element"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "findClosestDropzone",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "HTMLElement | null"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "findDraggableInDraggableContainer",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "HTMLElement | undefined"
                }
              },
              "parameters": [
                {
                  "name": "identifier",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDraggablesFromDroppable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "HTMLElement[]"
                }
              },
              "parameters": [
                {
                  "name": "droppable",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDropzoneRect",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "DOMRect"
                }
              },
              "parameters": [
                {
                  "name": "el",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "getEventCoordinates",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event"
                },
                {
                  "name": "page",
                  "default": "false"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "getMatchMaxValue",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "el",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "getValidAssociations",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleDraggableContainerChange",
              "parameters": [
                {
                  "name": "dragContainersAdded",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                },
                {
                  "name": "dragContainersRemoved",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              },
              "type": {
                "text": "handleDraggableContainerChange(dragContainersAdded: HTMLElement[], dragContainersRemoved: HTMLElement[]) => void"
              }
            },
            {
              "kind": "method",
              "name": "handleDraggablesChange",
              "parameters": [
                {
                  "name": "dragsAdded",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                },
                {
                  "name": "dragsRemoved",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              },
              "type": {
                "text": "handleDraggablesChange(dragsAdded: HTMLElement[], dragsRemoved: HTMLElement[]) => void"
              }
            },
            {
              "kind": "method",
              "name": "handleDroppablesChange",
              "parameters": [
                {
                  "name": "dropsAdded",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                },
                {
                  "name": "dropsRemoved",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              },
              "type": {
                "text": "handleDroppablesChange(dropsAdded: HTMLElement[], dropsRemoved: HTMLElement[]) => void"
              }
            },
            {
              "kind": "method",
              "name": "handleTouchCancel",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleTouchEnd",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleTouchMove",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleTouchStart",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "isDraggable",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "isDragging",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "isMatchTabular",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "lastTarget",
              "type": {
                "text": "null"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "maxAssociations",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "max-associations",
              "reflects": true,
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "MIN_DRAG_DISTANCE",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "readonly": true,
              "default": "5",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "minAssociations",
              "type": {
                "text": "number"
              },
              "default": "1",
              "attribute": "min-associations",
              "reflects": true,
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "moveDraggableToDroppable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "draggable",
                  "type": {
                    "text": "HTMLElement"
                  }
                },
                {
                  "name": "droppable",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "observer",
              "type": {
                "text": "MutationObserver | null"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "onCancel",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "onEnd",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "onMove",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "placeResponse",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "response",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "reportValidity",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              },
              "type": {
                "text": "reportValidity() => boolean"
              }
            },
            {
              "kind": "method",
              "name": "reset",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "save",
                  "default": "true"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              },
              "type": {
                "text": "reset(save = true) => void"
              }
            },
            {
              "kind": "method",
              "name": "resetDragState",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "resizeObserver",
              "type": {
                "text": "ResizeObserver | null"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "response",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "saveResponse",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              },
              "type": {
                "text": "saveResponse() => void"
              }
            },
            {
              "kind": "method",
              "name": "setDragCloneStyles",
              "privacy": "private",
              "parameters": [
                {
                  "name": "rect",
                  "type": {
                    "text": "DOMRect"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "toggleCorrectResponse",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "show",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "type": {
                "text": "toggleCorrectResponse(show: boolean) => void"
              }
            },
            {
              "kind": "field",
              "name": "touchStartPoint",
              "type": {
                "text": "null"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "updateDragClonePosition",
              "privacy": "private",
              "parameters": [
                {
                  "name": "touch"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "updateMinDimensionsForDropZones",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              },
              "type": {
                "text": "validate() => boolean"
              }
            }
          ],
          "mixins": [
            {
              "name": "DragDropInteractionMixin",
              "module": "/src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin"
            }
          ],
          "superclass": {
            "name": "Interaction",
            "module": "/src/lib/exports/interaction"
          },
          "tagName": "qti-gap-match-interaction",
          "customElement": true,
          "attributes": [
            {
              "name": "max-associations",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "maxAssociations",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "name": "min-associations",
              "type": {
                "text": "number"
              },
              "default": "1",
              "fieldName": "minAssociations",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            }
          ],
          "events": [
            {
              "name": "qti-interaction-response",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            }
          ],
          "modulePath": "src/lib/qti-components/qti-interaction/qti-gap-match-interaction/qti-gap-match-interaction.ts",
          "definitionPath": "src/lib/qti-components/qti-interaction/qti-gap-match-interaction/qti-gap-match-interaction.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-gap-match-interaction",
          "declaration": {
            "name": "QtiGapMatchInteraction",
            "module": "src/lib/qti-components/qti-interaction/qti-gap-match-interaction/qti-gap-match-interaction.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiGapMatchInteraction",
          "declaration": {
            "name": "QtiGapMatchInteraction",
            "module": "src/lib/qti-components/qti-interaction/qti-gap-match-interaction/qti-gap-match-interaction.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/qti-gap-text.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiGapText",
          "members": [
            {
              "kind": "method",
              "name": "_activate",
              "privacy": "private",
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_onClick",
              "privacy": "private",
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_onKeyUp",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "aria-disabled",
              "reflects": true,
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleDisabledChange",
              "parameters": [
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "disabled",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              },
              "type": {
                "text": "handleDisabledChange(_oldValue: boolean, disabled: boolean) => void"
              }
            },
            {
              "kind": "field",
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "identifier",
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "internals",
              "type": {
                "text": "ElementInternals"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "aria-readonly",
              "reflects": true,
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "tabindex",
              "type": {
                "text": "number | undefined"
              },
              "default": "0",
              "attribute": "tabindex",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "tabIndex",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "0",
              "attribute": "tabindex",
              "reflects": true,
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "aria-disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled",
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "name": "aria-readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "readonly",
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "identifier",
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "name": "tabindex",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "tabindex",
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            }
          ],
          "mixins": [
            {
              "name": "ActiveElementMixin",
              "module": "/src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "qti-gap-text",
          "customElement": true,
          "events": [
            {
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              },
              "name": ""
            }
          ],
          "modulePath": "src/lib/qti-components/qti-interaction/qti-gap-text.ts",
          "definitionPath": "src/lib/qti-components/qti-interaction/qti-gap-text.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-gap-text",
          "declaration": {
            "name": "QtiGapText",
            "module": "src/lib/qti-components/qti-interaction/qti-gap-text.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiGapText",
          "declaration": {
            "name": "QtiGapText",
            "module": "src/lib/qti-components/qti-interaction/qti-gap-text.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/qti-gap.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiGap",
          "members": [
            {
              "kind": "field",
              "name": "tabindex",
              "type": {
                "text": "number | undefined"
              },
              "default": "0",
              "attribute": "tabindex",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "tabindex",
              "type": {
                "text": "number | undefined"
              },
              "default": "0",
              "fieldName": "tabindex"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "qti-gap",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-interaction/qti-gap.ts",
          "definitionPath": "src/lib/qti-components/qti-interaction/qti-gap.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-gap",
          "declaration": {
            "name": "QtiGap",
            "module": "src/lib/qti-components/qti-interaction/qti-gap.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiGap",
          "declaration": {
            "name": "QtiGap",
            "module": "src/lib/qti-components/qti-interaction/qti-gap.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/qti-graphic-associate-interaction/qti-graphic-associate-interaction.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiGraphicAssociateInteraction",
          "members": [
            {
              "kind": "field",
              "name": "_correctLines",
              "type": {
                "text": "array"
              },
              "privacy": "private",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "_response",
              "type": {
                "text": "string[] | null"
              },
              "privacy": "private",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "endPoint",
              "type": {
                "text": "null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "grImage",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "hotspots",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "mouseCoord",
              "type": {
                "text": "{ x: number; y: number }"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "positionHotspotOnRegister",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<QtiHotspotChoice>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "reset",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "type": {
                "text": "reset() => void"
              }
            },
            {
              "kind": "field",
              "name": "response"
            },
            {
              "kind": "field",
              "name": "startCoord",
              "type": {
                "text": "{ x: number; y: number }"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "startPoint",
              "type": {
                "text": "null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "method",
              "name": "toggleInternalCorrectResponse",
              "privacy": "public",
              "parameters": [
                {
                  "name": "show",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "type": {
                "text": "toggleInternalCorrectResponse(show: boolean) => void"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "type": {
                "text": "validate() => boolean"
              }
            }
          ],
          "superclass": {
            "name": "Interaction",
            "module": "/src/lib/exports/interaction"
          },
          "tagName": "qti-graphic-associate-interaction",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-interaction/qti-graphic-associate-interaction/qti-graphic-associate-interaction.ts",
          "definitionPath": "src/lib/qti-components/qti-interaction/qti-graphic-associate-interaction/qti-graphic-associate-interaction.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-graphic-associate-interaction",
          "declaration": {
            "name": "QtiGraphicAssociateInteraction",
            "module": "src/lib/qti-components/qti-interaction/qti-graphic-associate-interaction/qti-graphic-associate-interaction.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiGraphicAssociateInteraction",
          "declaration": {
            "name": "QtiGraphicAssociateInteraction",
            "module": "src/lib/qti-components/qti-interaction/qti-graphic-associate-interaction/qti-graphic-associate-interaction.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/qti-graphic-gap-match-interaction/qti-graphic-gap-match-interaction.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiGraphicGapMatchInteraction",
          "members": [
            {
              "kind": "method",
              "name": "activateDragLocation",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "activateDroppable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "droppable",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "activateDroppables",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "target",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "allDropzones",
              "type": {
                "text": "HTMLElement[]"
              },
              "privacy": "private",
              "default": "[]",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "appendClone",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "applyInteractionBoundaries",
              "privacy": "private",
              "parameters": [
                {
                  "name": "newLeft",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "newTop",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "element",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "calculateDragDistance",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "touch"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "calculateOverlapArea",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "rect1",
                  "type": {
                    "text": "DOMRect"
                  }
                },
                {
                  "name": "rect2",
                  "type": {
                    "text": "DOMRect"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "checkAllMaxAssociations",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "checkMaxAssociations",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "droppable",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "cloneOffset",
              "type": {
                "text": "object"
              },
              "privacy": "private",
              "default": "{ x: 0, y: 0 }",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "collectResponseData",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "configuration",
              "type": {
                "text": "InteractionConfiguration"
              },
              "privacy": "protected",
              "default": "{ copyStylesDragClone: true, dragCanBePlacedBack: true, dragOnClick: false }",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "currentDropTarget",
              "type": {
                "text": "null"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataTransfer",
              "type": {
                "text": "object"
              },
              "privacy": "private",
              "default": "{ data: {}, setData(type, val) { this.data[type] = val; }, getData(type) { return this.data[type]; }, effectAllowed: 'move' }",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "deactivateDragLocation",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "deactivateDroppable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "droppable",
                  "type": {
                    "text": "HTMLElement"
                  }
                },
                {
                  "name": "makeDragzoneActive",
                  "default": "true"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "deactivateDroppables",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "disableDroppable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "droppable",
                  "type": {
                    "text": "Element"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchCustomEvent",
              "privacy": "private",
              "parameters": [
                {
                  "name": "element"
                },
                {
                  "name": "eventType"
                },
                {
                  "name": "bubble",
                  "default": "true"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "DRAG_CLONE_OPACITY",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "readonly": true,
              "default": "1",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "dragClone",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "dragContainers",
              "type": {
                "text": "HTMLElement[]"
              },
              "privacy": "private",
              "default": "[]",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "dragContainersModified",
              "parameters": [
                {
                  "name": "addedDragContainers",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                },
                {
                  "name": "removedDragContainers",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              },
              "type": {
                "text": "dragContainersModified(addedDragContainers: HTMLElement[], removedDragContainers: HTMLElement[]) => void"
              }
            },
            {
              "kind": "field",
              "name": "draggables",
              "type": {
                "text": "HTMLElement[]"
              },
              "privacy": "private",
              "default": "[]",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "draggablesModified",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "dragSource",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "dropDraggableInDroppable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "draggable",
                  "type": {
                    "text": "HTMLElement"
                  }
                },
                {
                  "name": "droppable",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "droppableObsever",
              "type": {
                "text": "MutationObserver | null"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "droppables",
              "type": {
                "text": "HTMLElement[]"
              },
              "privacy": "private",
              "default": "[]",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "droppablesModified",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "enableDroppable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "droppable",
                  "type": {
                    "text": "Element"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "findClosestDropzone",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "HTMLElement | null"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "findDraggableInDraggableContainer",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "HTMLElement | undefined"
                }
              },
              "parameters": [
                {
                  "name": "identifier",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDraggablesFromDroppable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "HTMLElement[]"
                }
              },
              "parameters": [
                {
                  "name": "droppable",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDropzoneRect",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "DOMRect"
                }
              },
              "parameters": [
                {
                  "name": "el",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "getEventCoordinates",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event"
                },
                {
                  "name": "page",
                  "default": "false"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "getMatchMaxValue",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "el",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "getValidAssociations",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleDraggableContainerChange",
              "parameters": [
                {
                  "name": "dragContainersAdded",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                },
                {
                  "name": "dragContainersRemoved",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              },
              "type": {
                "text": "handleDraggableContainerChange(dragContainersAdded: HTMLElement[], dragContainersRemoved: HTMLElement[]) => void"
              }
            },
            {
              "kind": "method",
              "name": "handleDraggablesChange",
              "parameters": [
                {
                  "name": "dragsAdded",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                },
                {
                  "name": "dragsRemoved",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              },
              "type": {
                "text": "handleDraggablesChange(dragsAdded: HTMLElement[], dragsRemoved: HTMLElement[]) => void"
              }
            },
            {
              "kind": "method",
              "name": "handleDroppablesChange",
              "parameters": [
                {
                  "name": "dropsAdded",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                },
                {
                  "name": "dropsRemoved",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              },
              "type": {
                "text": "handleDroppablesChange(dropsAdded: HTMLElement[], dropsRemoved: HTMLElement[]) => void"
              }
            },
            {
              "kind": "method",
              "name": "handleTouchCancel",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleTouchEnd",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleTouchMove",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleTouchStart",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "isDraggable",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "isDragging",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "isMatchTabular",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "lastTarget",
              "type": {
                "text": "null"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "maxAssociations",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "max-associations",
              "reflects": true,
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "MIN_DRAG_DISTANCE",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "readonly": true,
              "default": "5",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "minAssociations",
              "type": {
                "text": "number"
              },
              "default": "1",
              "attribute": "min-associations",
              "reflects": true,
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "moveDraggableToDroppable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "draggable",
                  "type": {
                    "text": "HTMLElement"
                  }
                },
                {
                  "name": "droppable",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "observer",
              "type": {
                "text": "MutationObserver | null"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "onCancel",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "onEnd",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "onMove",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "placeResponse",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "response",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "positionHotspotOnRegister",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<null>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "reportValidity",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              },
              "type": {
                "text": "reportValidity() => boolean"
              }
            },
            {
              "kind": "method",
              "name": "reset",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "save",
                  "default": "true"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              },
              "type": {
                "text": "reset(save = true) => void"
              }
            },
            {
              "kind": "method",
              "name": "resetDragState",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "resizeObserver",
              "type": {
                "text": "ResizeObserver | null"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "response",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "saveResponse",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              },
              "type": {
                "text": "saveResponse() => void"
              }
            },
            {
              "kind": "method",
              "name": "setDragCloneStyles",
              "privacy": "private",
              "parameters": [
                {
                  "name": "rect",
                  "type": {
                    "text": "DOMRect"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "touchStartPoint",
              "type": {
                "text": "null"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "updateDragClonePosition",
              "privacy": "private",
              "parameters": [
                {
                  "name": "touch"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "updateMinDimensionsForDropZones",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              },
              "type": {
                "text": "validate() => boolean"
              }
            }
          ],
          "mixins": [
            {
              "name": "DragDropInteractionMixin",
              "module": "/src/lib/qti-components/qti-interaction/internal/drag-drop"
            }
          ],
          "superclass": {
            "name": "Interaction",
            "module": "/src/lib/exports/interaction"
          },
          "tagName": "qti-graphic-gap-match-interaction",
          "customElement": true,
          "attributes": [
            {
              "name": "max-associations",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "maxAssociations",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "name": "min-associations",
              "type": {
                "text": "number"
              },
              "default": "1",
              "fieldName": "minAssociations",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            }
          ],
          "events": [
            {
              "name": "qti-interaction-response",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            }
          ],
          "modulePath": "src/lib/qti-components/qti-interaction/qti-graphic-gap-match-interaction/qti-graphic-gap-match-interaction.ts",
          "definitionPath": "src/lib/qti-components/qti-interaction/qti-graphic-gap-match-interaction/qti-graphic-gap-match-interaction.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-graphic-gap-match-interaction",
          "declaration": {
            "name": "QtiGraphicGapMatchInteraction",
            "module": "src/lib/qti-components/qti-interaction/qti-graphic-gap-match-interaction/qti-graphic-gap-match-interaction.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiGraphicGapMatchInteraction",
          "declaration": {
            "name": "QtiGraphicGapMatchInteraction",
            "module": "src/lib/qti-components/qti-interaction/qti-graphic-gap-match-interaction/qti-graphic-gap-match-interaction.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/qti-graphic-order-interaction/qti-graphic-order-interaction.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiGraphicOrderInteraction",
          "members": [
            {
              "kind": "field",
              "name": "_choiceElements",
              "type": {
                "text": "Choice[]"
              },
              "privacy": "protected",
              "default": "[]",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_choiceElementSelectedHandler",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent<{ identifier: string }>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "_configContext",
              "type": {
                "text": "ConfigContext"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_determineInputType",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_getChoiceChecked",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "choice",
                  "type": {
                    "text": "Choice"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_handleChoiceSelection",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "_handleDisabledChange",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_handleMaxChoicesChange",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "_newValue",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "_handleReadonlyChange",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "_handleValueChange",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_registerChoiceElement",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_setChoiceChecked",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "choice",
                  "type": {
                    "text": "Choice"
                  }
                },
                {
                  "name": "checked",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_setInputType",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "choiceElement",
                  "type": {
                    "text": "Choice"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_toggleChoiceChecked",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "choice",
                  "type": {
                    "text": "Choice"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_unregisterChoiceElement",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_updateChoiceSelection",
              "privacy": "protected",
              "description": "Updates the selection state of each choice element based on the current response.",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "_validationMessageElement",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "choiceOrdering",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "maxChoices",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "1",
              "attribute": "max-choices",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "minChoices",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "0",
              "attribute": "min-choices",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "positionHotspotOnRegister",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<QtiHotspotChoice>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "reportValidity",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              },
              "type": {
                "text": "reportValidity() => void"
              }
            },
            {
              "kind": "field",
              "name": "response",
              "type": {
                "text": "string | string[] | null"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "setHotspotOrder",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<{ identifier: string }>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "toggleCandidateCorrection",
              "privacy": "public",
              "parameters": [
                {
                  "name": "show",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              },
              "type": {
                "text": "toggleCandidateCorrection(show: boolean) => void"
              }
            },
            {
              "kind": "method",
              "name": "toggleCorrectResponse",
              "privacy": "public",
              "parameters": [
                {
                  "name": "show",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "type": {
                "text": "toggleCorrectResponse(show: boolean) => void"
              }
            },
            {
              "kind": "method",
              "name": "toggleInternalCorrectResponse",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "show",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              },
              "type": {
                "text": "validate() => boolean"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | null"
              },
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            }
          ],
          "mixins": [
            {
              "name": "ChoicesMixin",
              "module": "/src/lib/qti-components/qti-interaction/internal/choices/choices.mixin"
            }
          ],
          "superclass": {
            "name": "Interaction",
            "module": "/src/lib/exports/interaction"
          },
          "tagName": "qti-graphic-order-interaction",
          "customElement": true,
          "attributes": [
            {
              "name": "max-choices",
              "type": {
                "text": "number"
              },
              "default": "1",
              "fieldName": "maxChoices",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "name": "min-choices",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "minChoices",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            }
          ],
          "modulePath": "src/lib/qti-components/qti-interaction/qti-graphic-order-interaction/qti-graphic-order-interaction.ts",
          "definitionPath": "src/lib/qti-components/qti-interaction/qti-graphic-order-interaction/qti-graphic-order-interaction.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-graphic-order-interaction",
          "declaration": {
            "name": "QtiGraphicOrderInteraction",
            "module": "src/lib/qti-components/qti-interaction/qti-graphic-order-interaction/qti-graphic-order-interaction.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiGraphicOrderInteraction",
          "declaration": {
            "name": "QtiGraphicOrderInteraction",
            "module": "src/lib/qti-components/qti-interaction/qti-graphic-order-interaction/qti-graphic-order-interaction.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/qti-hotspot-choice.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiHotspotChoice",
          "members": [
            {
              "kind": "method",
              "name": "_activate",
              "privacy": "private",
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_onClick",
              "privacy": "private",
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_onKeyUp",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "aria-disabled",
              "reflects": true,
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleDisabledChange",
              "parameters": [
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "disabled",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              },
              "type": {
                "text": "handleDisabledChange(_oldValue: boolean, disabled: boolean) => void"
              }
            },
            {
              "kind": "field",
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "identifier",
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "internals",
              "type": {
                "text": "ElementInternals"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "order",
              "type": {
                "text": "number"
              },
              "attribute": "aria-ordervalue",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "orderCorrect",
              "type": {
                "text": "number"
              },
              "attribute": "aria-ordercorrectvalue",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "aria-readonly",
              "reflects": true,
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "tabIndex",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "0",
              "attribute": "tabindex",
              "reflects": true,
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "aria-disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled",
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "name": "aria-ordercorrectvalue",
              "type": {
                "text": "number"
              },
              "fieldName": "orderCorrect"
            },
            {
              "name": "aria-ordervalue",
              "type": {
                "text": "number"
              },
              "fieldName": "order"
            },
            {
              "name": "aria-readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "readonly",
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "identifier",
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "name": "tabindex",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "tabIndex",
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            }
          ],
          "mixins": [
            {
              "name": "ActiveElementMixin",
              "module": "/src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "qti-hotspot-choice",
          "customElement": true,
          "events": [
            {
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              },
              "name": ""
            }
          ],
          "modulePath": "src/lib/qti-components/qti-interaction/qti-hotspot-choice.ts",
          "definitionPath": "src/lib/qti-components/qti-interaction/qti-hotspot-choice.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-hotspot-choice",
          "declaration": {
            "name": "QtiHotspotChoice",
            "module": "src/lib/qti-components/qti-interaction/qti-hotspot-choice.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiHotspotChoice",
          "declaration": {
            "name": "QtiHotspotChoice",
            "module": "src/lib/qti-components/qti-interaction/qti-hotspot-choice.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/qti-hotspot-interaction/qti-hotspot-interaction.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiHotspotInteraction",
          "members": [
            {
              "kind": "field",
              "name": "_choiceElements",
              "type": {
                "text": "Choice[]"
              },
              "privacy": "protected",
              "default": "[]",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_choiceElementSelectedHandler",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent<{ identifier: string }>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "_configContext",
              "type": {
                "text": "ConfigContext"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_determineInputType",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_getChoiceChecked",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "choice",
                  "type": {
                    "text": "Choice"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_handleChoiceSelection",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "_handleDisabledChange",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_handleMaxChoicesChange",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "_newValue",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "_handleReadonlyChange",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "_handleValueChange",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_registerChoiceElement",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_setChoiceChecked",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "choice",
                  "type": {
                    "text": "Choice"
                  }
                },
                {
                  "name": "checked",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_setInputType",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "choiceElement",
                  "type": {
                    "text": "Choice"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_toggleChoiceChecked",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "choice",
                  "type": {
                    "text": "Choice"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_unregisterChoiceElement",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_updateChoiceSelection",
              "privacy": "protected",
              "description": "Updates the selection state of each choice element based on the current response.",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "_validationMessageElement",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "getImageLoadPromise",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<HTMLImageElement>"
                }
              },
              "parameters": [
                {
                  "name": "img",
                  "type": {
                    "text": "HTMLImageElement"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "imageLoadPromise",
              "type": {
                "text": "Promise<HTMLImageElement> | null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "maxChoices",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "1",
              "attribute": "max-choices",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "minChoices",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "0",
              "attribute": "min-choices",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "positionHotspotOnRegister",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<QtiHotspotChoice>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "reportValidity",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              },
              "type": {
                "text": "reportValidity() => void"
              }
            },
            {
              "kind": "field",
              "name": "response",
              "type": {
                "text": "string | string[] | null"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "toggleCandidateCorrection",
              "privacy": "public",
              "parameters": [
                {
                  "name": "show",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              },
              "type": {
                "text": "toggleCandidateCorrection(show: boolean) => void"
              }
            },
            {
              "kind": "method",
              "name": "toggleInternalCorrectResponse",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "show",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              },
              "type": {
                "text": "validate() => boolean"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | null"
              },
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            }
          ],
          "mixins": [
            {
              "name": "ChoicesMixin",
              "module": "/src/lib/qti-components/qti-interaction/internal/choices/choices.mixin"
            }
          ],
          "superclass": {
            "name": "Interaction",
            "module": "/src/lib/exports/interaction"
          },
          "tagName": "qti-hotspot-interaction",
          "customElement": true,
          "attributes": [
            {
              "name": "max-choices",
              "type": {
                "text": "number"
              },
              "default": "1",
              "fieldName": "maxChoices",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "name": "min-choices",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "minChoices",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            }
          ],
          "modulePath": "src/lib/qti-components/qti-interaction/qti-hotspot-interaction/qti-hotspot-interaction.ts",
          "definitionPath": "src/lib/qti-components/qti-interaction/qti-hotspot-interaction/qti-hotspot-interaction.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-hotspot-interaction",
          "declaration": {
            "name": "QtiHotspotInteraction",
            "module": "src/lib/qti-components/qti-interaction/qti-hotspot-interaction/qti-hotspot-interaction.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiHotspotInteraction",
          "declaration": {
            "name": "QtiHotspotInteraction",
            "module": "src/lib/qti-components/qti-interaction/qti-hotspot-interaction/qti-hotspot-interaction.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/qti-hottext-interaction/qti-hottext-interaction.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiHottextInteraction",
          "members": [
            {
              "kind": "field",
              "name": "_choiceElements",
              "type": {
                "text": "Choice[]"
              },
              "privacy": "protected",
              "default": "[]",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_choiceElementSelectedHandler",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent<{ identifier: string }>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "_configContext",
              "type": {
                "text": "ConfigContext"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_determineInputType",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_getChoiceChecked",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "choice",
                  "type": {
                    "text": "Choice"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_handleChoiceSelection",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "_handleDisabledChange",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_handleMaxChoicesChange",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "_newValue",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "_handleReadonlyChange",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "_handleValueChange",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_registerChoiceElement",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_setChoiceChecked",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "choice",
                  "type": {
                    "text": "Choice"
                  }
                },
                {
                  "name": "checked",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_setInputType",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "choiceElement",
                  "type": {
                    "text": "Choice"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_toggleChoiceChecked",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "choice",
                  "type": {
                    "text": "Choice"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_unregisterChoiceElement",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_updateChoiceSelection",
              "privacy": "protected",
              "description": "Updates the selection state of each choice element based on the current response.",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "_validationMessageElement",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "class",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "class",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "classObject",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "maxChoices",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "1",
              "attribute": "max-choices",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "minChoices",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "0",
              "attribute": "min-choices",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "reportValidity",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              },
              "type": {
                "text": "reportValidity() => void"
              }
            },
            {
              "kind": "field",
              "name": "response",
              "type": {
                "text": "string | string[] | null"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "toggleCandidateCorrection",
              "privacy": "public",
              "parameters": [
                {
                  "name": "show",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              },
              "type": {
                "text": "toggleCandidateCorrection(show: boolean) => void"
              }
            },
            {
              "kind": "method",
              "name": "toggleInternalCorrectResponse",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "show",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "updateHostClasses",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              },
              "type": {
                "text": "validate() => boolean"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | null"
              },
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "class",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "class"
            },
            {
              "name": "max-choices",
              "type": {
                "text": "number"
              },
              "default": "1",
              "fieldName": "maxChoices",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            },
            {
              "name": "min-choices",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "minChoices",
              "inheritedFrom": {
                "name": "ChoicesMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/choices/choices.mixin.ts"
              }
            }
          ],
          "mixins": [
            {
              "name": "ChoicesMixin",
              "module": "/src/lib/qti-components/qti-interaction/internal/choices/choices.mixin"
            }
          ],
          "superclass": {
            "name": "Interaction",
            "module": "/src/lib/exports/interaction"
          },
          "tagName": "qti-hottext-interaction",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-interaction/qti-hottext-interaction/qti-hottext-interaction.ts",
          "definitionPath": "src/lib/qti-components/qti-interaction/qti-hottext-interaction/qti-hottext-interaction.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-hottext-interaction",
          "declaration": {
            "name": "QtiHottextInteraction",
            "module": "src/lib/qti-components/qti-interaction/qti-hottext-interaction/qti-hottext-interaction.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiHottextInteraction",
          "declaration": {
            "name": "QtiHottextInteraction",
            "module": "src/lib/qti-components/qti-interaction/qti-hottext-interaction/qti-hottext-interaction.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/qti-hottext.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiHottext",
          "members": [
            {
              "kind": "method",
              "name": "_activate",
              "privacy": "private",
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_onClick",
              "privacy": "private",
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_onKeyUp",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "aria-disabled",
              "reflects": true,
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleDisabledChange",
              "parameters": [
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "disabled",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              },
              "type": {
                "text": "handleDisabledChange(_oldValue: boolean, disabled: boolean) => void"
              }
            },
            {
              "kind": "field",
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "identifier",
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "internals",
              "type": {
                "text": "ElementInternals"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "aria-readonly",
              "reflects": true,
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "tabIndex",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "0",
              "attribute": "tabindex",
              "reflects": true,
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            }
          ],
          "mixins": [
            {
              "name": "ActiveElementMixin",
              "module": "/src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "qti-hottext",
          "customElement": true,
          "attributes": [
            {
              "name": "aria-disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled",
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "name": "aria-readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "readonly",
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "identifier",
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "name": "tabindex",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "tabIndex",
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            }
          ],
          "events": [
            {
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              },
              "name": ""
            }
          ],
          "modulePath": "src/lib/qti-components/qti-interaction/qti-hottext.ts",
          "definitionPath": "src/lib/qti-components/qti-interaction/qti-hottext.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-hottext",
          "declaration": {
            "name": "QtiHottext",
            "module": "src/lib/qti-components/qti-interaction/qti-hottext.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiHottext",
          "declaration": {
            "name": "QtiHottext",
            "module": "src/lib/qti-components/qti-interaction/qti-hottext.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/qti-inline-choice-interaction/qti-inline-choice-interaction.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiInlineChoiceInteraction",
          "members": [
            {
              "kind": "method",
              "name": "_updateOptions",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "choiceSelected",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "configContext",
              "type": {
                "text": "ConfigContext"
              }
            },
            {
              "kind": "field",
              "name": "correctOption",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "dataPrompt",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "data-prompt"
            },
            {
              "kind": "field",
              "name": "inputWidthClass",
              "type": {
                "text": "array"
              },
              "privacy": "public",
              "static": true,
              "default": "[ '', 'qti-input-width-2', 'qti-input-width-1', 'qti-input-width-3', 'qti-input-width-4', 'qti-input-width-6', 'qti-input-width-10', 'qti-input-width-15', 'qti-input-width-20', 'qti-input-width-72' ]"
            },
            {
              "kind": "field",
              "name": "isInline",
              "type": {
                "text": "boolean"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "options",
              "type": {
                "text": "OptionType[]"
              },
              "privacy": "protected",
              "default": "[]"
            },
            {
              "kind": "method",
              "name": "reset",
              "privacy": "public",
              "type": {
                "text": "reset() => void"
              }
            },
            {
              "kind": "field",
              "name": "response",
              "privacy": "public",
              "type": {
                "text": "string | null"
              }
            },
            {
              "kind": "method",
              "name": "toggleInternalCorrectResponse",
              "parameters": [
                {
                  "name": "show",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "type": {
                "text": "toggleInternalCorrectResponse(show: boolean) => void"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "type": {
                "text": "validate() => boolean"
              }
            }
          ],
          "attributes": [
            {
              "name": "data-prompt",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "dataPrompt"
            }
          ],
          "superclass": {
            "name": "Interaction",
            "module": "/src/lib/exports/interaction"
          },
          "tagName": "qti-inline-choice-interaction",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-interaction/qti-inline-choice-interaction/qti-inline-choice-interaction.ts",
          "definitionPath": "src/lib/qti-components/qti-interaction/qti-inline-choice-interaction/qti-inline-choice-interaction.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-inline-choice-interaction",
          "declaration": {
            "name": "QtiInlineChoiceInteraction",
            "module": "src/lib/qti-components/qti-interaction/qti-inline-choice-interaction/qti-inline-choice-interaction.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiInlineChoiceInteraction",
          "declaration": {
            "name": "QtiInlineChoiceInteraction",
            "module": "src/lib/qti-components/qti-interaction/qti-inline-choice-interaction/qti-inline-choice-interaction.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/qti-inline-choice.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiInlineChoice",
          "members": [
            {
              "kind": "method",
              "name": "_onSelectInlineChoice",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "attribute": "identifier"
            }
          ],
          "events": [
            {
              "name": "qti-inline-choice-register",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "qti-inline-choice-select",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "fieldName": "identifier"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "qti-inline-choice",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-interaction/qti-inline-choice.ts",
          "definitionPath": "src/lib/qti-components/qti-interaction/qti-inline-choice.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-inline-choice",
          "declaration": {
            "name": "QtiInlineChoice",
            "module": "src/lib/qti-components/qti-interaction/qti-inline-choice.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiInlineChoice",
          "declaration": {
            "name": "QtiInlineChoice",
            "module": "src/lib/qti-components/qti-interaction/qti-inline-choice.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/qti-match-interaction/qti-match-interaction.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiMatchInteraction",
          "members": [
            {
              "kind": "field",
              "name": "_response",
              "type": {
                "text": "string | string[]"
              },
              "privacy": "protected",
              "default": "[]"
            },
            {
              "kind": "method",
              "name": "activateDragLocation",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "activateDroppable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "droppable",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "activateDroppables",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "target",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "allDropzones",
              "type": {
                "text": "HTMLElement[]"
              },
              "privacy": "private",
              "default": "[]",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "appendClone",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "applyInteractionBoundaries",
              "privacy": "private",
              "parameters": [
                {
                  "name": "newLeft",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "newTop",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "element",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "calculateDragDistance",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "touch"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "calculateOverlapArea",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "rect1",
                  "type": {
                    "text": "DOMRect"
                  }
                },
                {
                  "name": "rect2",
                  "type": {
                    "text": "DOMRect"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "checkAllMaxAssociations",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "checkMaxAssociations",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "droppable",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "class",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "class"
            },
            {
              "kind": "field",
              "name": "cloneOffset",
              "type": {
                "text": "object"
              },
              "privacy": "private",
              "default": "{ x: 0, y: 0 }",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "collectResponseData",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "configuration",
              "type": {
                "text": "InteractionConfiguration"
              },
              "privacy": "protected",
              "default": "{ copyStylesDragClone: true, dragCanBePlacedBack: true, dragOnClick: false }",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "correctOptions",
              "type": {
                "text": "{ source: string; target: string }[]"
              },
              "privacy": "protected",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "currentDropTarget",
              "type": {
                "text": "null"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataTransfer",
              "type": {
                "text": "object"
              },
              "privacy": "private",
              "default": "{ data: {}, setData(type, val) { this.data[type] = val; }, getData(type) { return this.data[type]; }, effectAllowed: 'move' }",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "deactivateDragLocation",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "deactivateDroppable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "droppable",
                  "type": {
                    "text": "HTMLElement"
                  }
                },
                {
                  "name": "makeDragzoneActive",
                  "default": "true"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "deactivateDroppables",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "disableDroppable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "droppable",
                  "type": {
                    "text": "Element"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchCustomEvent",
              "privacy": "private",
              "parameters": [
                {
                  "name": "element"
                },
                {
                  "name": "eventType"
                },
                {
                  "name": "bubble",
                  "default": "true"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "DRAG_CLONE_OPACITY",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "readonly": true,
              "default": "1",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "dragClone",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "dragContainers",
              "type": {
                "text": "HTMLElement[]"
              },
              "privacy": "private",
              "default": "[]",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "dragContainersModified",
              "parameters": [
                {
                  "name": "addedDragContainers",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                },
                {
                  "name": "removedDragContainers",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              },
              "type": {
                "text": "dragContainersModified(addedDragContainers: HTMLElement[], removedDragContainers: HTMLElement[]) => void"
              }
            },
            {
              "kind": "field",
              "name": "draggables",
              "type": {
                "text": "HTMLElement[]"
              },
              "privacy": "private",
              "default": "[]",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "draggablesModified",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "dragSource",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "dropDraggableInDroppable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "draggable",
                  "type": {
                    "text": "HTMLElement"
                  }
                },
                {
                  "name": "droppable",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "droppableObsever",
              "type": {
                "text": "MutationObserver | null"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "droppables",
              "type": {
                "text": "HTMLElement[]"
              },
              "privacy": "private",
              "default": "[]",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "droppablesModified",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "enableDroppable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "droppable",
                  "type": {
                    "text": "Element"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "findClosestDropzone",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "HTMLElement | null"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "findDraggableInDraggableContainer",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "HTMLElement | undefined"
                }
              },
              "parameters": [
                {
                  "name": "identifier",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDraggablesFromDroppable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "HTMLElement[]"
                }
              },
              "parameters": [
                {
                  "name": "droppable",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDropzoneRect",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "DOMRect"
                }
              },
              "parameters": [
                {
                  "name": "el",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "getEventCoordinates",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event"
                },
                {
                  "name": "page",
                  "default": "false"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "getMatches",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "{ source: string; target: string }[]"
                }
              },
              "parameters": [
                {
                  "name": "responseVariable",
                  "type": {
                    "text": "ResponseVariable"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getMatchMaxValue",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "el",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "getValidAssociations",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleDraggableContainerChange",
              "parameters": [
                {
                  "name": "dragContainersAdded",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                },
                {
                  "name": "dragContainersRemoved",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              },
              "type": {
                "text": "handleDraggableContainerChange(dragContainersAdded: HTMLElement[], dragContainersRemoved: HTMLElement[]) => void"
              }
            },
            {
              "kind": "method",
              "name": "handleDraggablesChange",
              "parameters": [
                {
                  "name": "dragsAdded",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                },
                {
                  "name": "dragsRemoved",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              },
              "type": {
                "text": "handleDraggablesChange(dragsAdded: HTMLElement[], dragsRemoved: HTMLElement[]) => void"
              }
            },
            {
              "kind": "method",
              "name": "handleDroppablesChange",
              "parameters": [
                {
                  "name": "dropsAdded",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                },
                {
                  "name": "dropsRemoved",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              },
              "type": {
                "text": "handleDroppablesChange(dropsAdded: HTMLElement[], dropsRemoved: HTMLElement[]) => void"
              }
            },
            {
              "kind": "field",
              "name": "handleRadioChange",
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "handleRadioClick",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "handleTouchCancel",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleTouchEnd",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleTouchMove",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleTouchStart",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "isDraggable",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "isDragging",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "isMatchTabular",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "lastCheckedRadio",
              "type": {
                "text": "HTMLInputElement | null"
              },
              "privacy": "protected",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "lastTarget",
              "type": {
                "text": "null"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "maxAssociations",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "max-associations",
              "reflects": true,
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "MIN_DRAG_DISTANCE",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "readonly": true,
              "default": "5",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "minAssociations",
              "type": {
                "text": "number"
              },
              "default": "1",
              "attribute": "min-associations",
              "reflects": true,
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "moveDraggableToDroppable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "draggable",
                  "type": {
                    "text": "HTMLElement"
                  }
                },
                {
                  "name": "droppable",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "observer",
              "type": {
                "text": "MutationObserver | null"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "onCancel",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "onEnd",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "onMove",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "placeResponse",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "response",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "reportValidity",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              },
              "type": {
                "text": "reportValidity() => boolean"
              }
            },
            {
              "kind": "method",
              "name": "reset",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "save",
                  "default": "true"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              },
              "type": {
                "text": "reset(save = true) => void"
              }
            },
            {
              "kind": "method",
              "name": "resetDragState",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "resizeObserver",
              "type": {
                "text": "ResizeObserver | null"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "response",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "responseIdentifier",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "response-identifier"
            },
            {
              "kind": "method",
              "name": "saveResponse",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              },
              "type": {
                "text": "saveResponse() => void"
              }
            },
            {
              "kind": "method",
              "name": "setDragCloneStyles",
              "privacy": "private",
              "parameters": [
                {
                  "name": "rect",
                  "type": {
                    "text": "DOMRect"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "sourceChoices",
              "type": {
                "text": "QtiSimpleAssociableChoice[]"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "targetChoices",
              "type": {
                "text": "QtiSimpleAssociableChoice[]"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "toggleCandidateCorrection",
              "privacy": "public",
              "parameters": [
                {
                  "name": "show",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "type": {
                "text": "toggleCandidateCorrection(show: boolean) => void"
              }
            },
            {
              "kind": "method",
              "name": "toggleInternalCorrectResponse",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "show",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "type": {
                "text": "toggleInternalCorrectResponse(show: boolean) => void"
              }
            },
            {
              "kind": "field",
              "name": "touchStartPoint",
              "type": {
                "text": "null"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "updateDragClonePosition",
              "privacy": "private",
              "parameters": [
                {
                  "name": "touch"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "updateMinDimensionsForDropZones",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              },
              "type": {
                "text": "validate() => boolean"
              }
            }
          ],
          "attributes": [
            {
              "name": "class",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "class"
            },
            {
              "name": "max-associations",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "maxAssociations",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "name": "min-associations",
              "type": {
                "text": "number"
              },
              "default": "1",
              "fieldName": "minAssociations",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "name": "response-identifier",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "responseIdentifier"
            }
          ],
          "mixins": [
            {
              "name": "DragDropInteractionMixin",
              "module": "/src/lib/qti-components/qti-interaction/internal/drag-drop"
            }
          ],
          "superclass": {
            "name": "Interaction",
            "module": "/src/lib/exports/interaction"
          },
          "tagName": "qti-match-interaction",
          "customElement": true,
          "events": [
            {
              "name": "qti-interaction-response",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            }
          ],
          "modulePath": "src/lib/qti-components/qti-interaction/qti-match-interaction/qti-match-interaction.ts",
          "definitionPath": "src/lib/qti-components/qti-interaction/qti-match-interaction/qti-match-interaction.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-match-interaction",
          "declaration": {
            "name": "QtiMatchInteraction",
            "module": "src/lib/qti-components/qti-interaction/qti-match-interaction/qti-match-interaction.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiMatchInteraction",
          "declaration": {
            "name": "QtiMatchInteraction",
            "module": "src/lib/qti-components/qti-interaction/qti-match-interaction/qti-match-interaction.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/qti-media-interaction/qti-media-interaction.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiMediaInteraction",
          "members": [
            {
              "kind": "field",
              "name": "_value",
              "type": {
                "text": "null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "method",
              "name": "reset",
              "type": {
                "text": "reset() => void"
              }
            },
            {
              "kind": "field",
              "name": "response",
              "type": {
                "text": "string | null"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "type": {
                "text": "validate() => boolean"
              }
            }
          ],
          "superclass": {
            "name": "Interaction",
            "module": "/src/lib/exports/interaction"
          },
          "tagName": "qti-media-interaction",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-interaction/qti-media-interaction/qti-media-interaction.ts",
          "definitionPath": "src/lib/qti-components/qti-interaction/qti-media-interaction/qti-media-interaction.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-media-interaction",
          "declaration": {
            "name": "QtiMediaInteraction",
            "module": "src/lib/qti-components/qti-interaction/qti-media-interaction/qti-media-interaction.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiMediaInteraction",
          "declaration": {
            "name": "QtiMediaInteraction",
            "module": "src/lib/qti-components/qti-interaction/qti-media-interaction/qti-media-interaction.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/qti-order-interaction/qti-order-interaction.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiOrderInteraction",
          "members": [
            {
              "kind": "method",
              "name": "activateDragLocation",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "activateDroppable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "droppable",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "activateDroppables",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "target",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "allDropzones",
              "type": {
                "text": "HTMLElement[]"
              },
              "privacy": "private",
              "default": "[]",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "appendClone",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "applyInteractionBoundaries",
              "privacy": "private",
              "parameters": [
                {
                  "name": "newLeft",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "newTop",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "element",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "calculateDragDistance",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "touch"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "calculateOverlapArea",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "rect1",
                  "type": {
                    "text": "DOMRect"
                  }
                },
                {
                  "name": "rect2",
                  "type": {
                    "text": "DOMRect"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "checkAllMaxAssociations",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "checkMaxAssociations",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "droppable",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "childrenMap",
              "type": {
                "text": "Element[]"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "cloneOffset",
              "type": {
                "text": "object"
              },
              "privacy": "private",
              "default": "{ x: 0, y: 0 }",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "collectResponseData",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "configuration",
              "type": {
                "text": "InteractionConfiguration"
              },
              "privacy": "protected",
              "default": "{ copyStylesDragClone: true, dragCanBePlacedBack: true, dragOnClick: false }",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "correctResponses",
              "type": {
                "text": "string[]"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "currentDropTarget",
              "type": {
                "text": "null"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataTransfer",
              "type": {
                "text": "object"
              },
              "privacy": "private",
              "default": "{ data: {}, setData(type, val) { this.data[type] = val; }, getData(type) { return this.data[type]; }, effectAllowed: 'move' }",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "deactivateDragLocation",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "deactivateDroppable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "droppable",
                  "type": {
                    "text": "HTMLElement"
                  }
                },
                {
                  "name": "makeDragzoneActive",
                  "default": "true"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "deactivateDroppables",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "disableDroppable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "droppable",
                  "type": {
                    "text": "Element"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "dispatchCustomEvent",
              "privacy": "private",
              "parameters": [
                {
                  "name": "element"
                },
                {
                  "name": "eventType"
                },
                {
                  "name": "bubble",
                  "default": "true"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "DRAG_CLONE_OPACITY",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "readonly": true,
              "default": "1",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "dragClone",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "dragContainers",
              "type": {
                "text": "HTMLElement[]"
              },
              "privacy": "private",
              "default": "[]",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "dragContainersModified",
              "parameters": [
                {
                  "name": "addedDragContainers",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                },
                {
                  "name": "removedDragContainers",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              },
              "type": {
                "text": "dragContainersModified(addedDragContainers: HTMLElement[], removedDragContainers: HTMLElement[]) => void"
              }
            },
            {
              "kind": "field",
              "name": "draggables",
              "type": {
                "text": "HTMLElement[]"
              },
              "privacy": "private",
              "default": "[]",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "draggablesModified",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "dragSource",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "dropDraggableInDroppable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "draggable",
                  "type": {
                    "text": "HTMLElement"
                  }
                },
                {
                  "name": "droppable",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "droppableObsever",
              "type": {
                "text": "MutationObserver | null"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "droppables",
              "type": {
                "text": "HTMLElement[]"
              },
              "privacy": "private",
              "default": "[]",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "droppablesModified",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "enableDroppable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "droppable",
                  "type": {
                    "text": "Element"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "findClosestDropzone",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "HTMLElement | null"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "findDraggableInDraggableContainer",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "HTMLElement | undefined"
                }
              },
              "parameters": [
                {
                  "name": "identifier",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDraggablesFromDroppable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "HTMLElement[]"
                }
              },
              "parameters": [
                {
                  "name": "droppable",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDropzoneRect",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "DOMRect"
                }
              },
              "parameters": [
                {
                  "name": "el",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "getEventCoordinates",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event"
                },
                {
                  "name": "page",
                  "default": "false"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "getMatchMaxValue",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "el",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "getResponse",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "string[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "getValidAssociations",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "getValue",
              "parameters": [
                {
                  "name": "val",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "type": {
                "text": "getValue(val: string[]) => void"
              }
            },
            {
              "kind": "method",
              "name": "handleDraggableContainerChange",
              "parameters": [
                {
                  "name": "dragContainersAdded",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                },
                {
                  "name": "dragContainersRemoved",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              },
              "type": {
                "text": "handleDraggableContainerChange(dragContainersAdded: HTMLElement[], dragContainersRemoved: HTMLElement[]) => void"
              }
            },
            {
              "kind": "method",
              "name": "handleDraggablesChange",
              "parameters": [
                {
                  "name": "dragsAdded",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                },
                {
                  "name": "dragsRemoved",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              },
              "type": {
                "text": "handleDraggablesChange(dragsAdded: HTMLElement[], dragsRemoved: HTMLElement[]) => void"
              }
            },
            {
              "kind": "method",
              "name": "handleDroppablesChange",
              "parameters": [
                {
                  "name": "dropsAdded",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                },
                {
                  "name": "dropsRemoved",
                  "type": {
                    "text": "HTMLElement[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              },
              "type": {
                "text": "handleDroppablesChange(dropsAdded: HTMLElement[], dropsRemoved: HTMLElement[]) => void"
              }
            },
            {
              "kind": "method",
              "name": "handleTouchCancel",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_e"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleTouchEnd",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleTouchMove",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "handleTouchStart",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "isDraggable",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "isDragging",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "isMatchTabular",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "lastTarget",
              "type": {
                "text": "null"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "maxAssociations",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "max-associations",
              "reflects": true,
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "MIN_DRAG_DISTANCE",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "readonly": true,
              "default": "5",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "minAssociations",
              "type": {
                "text": "number"
              },
              "default": "1",
              "attribute": "min-associations",
              "reflects": true,
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "moveDraggableToDroppable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "draggable",
                  "type": {
                    "text": "HTMLElement"
                  }
                },
                {
                  "name": "droppable",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "nrChoices",
              "type": {
                "text": "number"
              },
              "privacy": "protected",
              "default": "0"
            },
            {
              "kind": "field",
              "name": "observer",
              "type": {
                "text": "MutationObserver | null"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "onCancel",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "onEnd",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "onMove",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "orientation",
              "type": {
                "text": "'horizontal' | 'vertical'"
              },
              "privacy": "public",
              "description": "orientation of choices",
              "attribute": "orientation"
            },
            {
              "kind": "method",
              "name": "placeResponse",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "response",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "reportValidity",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              },
              "type": {
                "text": "reportValidity() => boolean"
              }
            },
            {
              "kind": "method",
              "name": "reset",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "save",
                  "default": "true"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              },
              "type": {
                "text": "reset(save = true) => void"
              }
            },
            {
              "kind": "method",
              "name": "resetDragState",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "resizeObserver",
              "type": {
                "text": "ResizeObserver | null"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "response",
              "type": {
                "text": "string"
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "saveResponse",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              },
              "type": {
                "text": "saveResponse() => void"
              }
            },
            {
              "kind": "method",
              "name": "setDragCloneStyles",
              "privacy": "private",
              "parameters": [
                {
                  "name": "rect",
                  "type": {
                    "text": "DOMRect"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "showCorrectResponses",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "method",
              "name": "toggleCorrectResponse",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "show",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "type": {
                "text": "toggleCorrectResponse(show: boolean) => void"
              }
            },
            {
              "kind": "field",
              "name": "touchStartPoint",
              "type": {
                "text": "null"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "updateDragClonePosition",
              "privacy": "private",
              "parameters": [
                {
                  "name": "touch"
                }
              ],
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "updateMinDimensionsForDropZones",
              "privacy": "private",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              },
              "type": {
                "text": "validate() => boolean"
              }
            }
          ],
          "attributes": [
            {
              "name": "max-associations",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "maxAssociations",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "name": "min-associations",
              "type": {
                "text": "number"
              },
              "default": "1",
              "fieldName": "minAssociations",
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            },
            {
              "name": "orientation",
              "type": {
                "text": "'horizontal' | 'vertical'"
              },
              "description": "orientation of choices",
              "fieldName": "orientation"
            }
          ],
          "mixins": [
            {
              "name": "DragDropInteractionMixin",
              "module": "/src/lib/qti-components/qti-interaction/internal/drag-drop"
            }
          ],
          "superclass": {
            "name": "Interaction",
            "module": "/src/lib/exports/interaction"
          },
          "tagName": "qti-order-interaction",
          "customElement": true,
          "events": [
            {
              "name": "qti-interaction-response",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "DragDropInteractionMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/drag-drop/drag-drop-interaction-mixin.ts"
              }
            }
          ],
          "modulePath": "src/lib/qti-components/qti-interaction/qti-order-interaction/qti-order-interaction.ts",
          "definitionPath": "src/lib/qti-components/qti-interaction/qti-order-interaction/qti-order-interaction.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-order-interaction",
          "declaration": {
            "name": "QtiOrderInteraction",
            "module": "src/lib/qti-components/qti-interaction/qti-order-interaction/qti-order-interaction.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiOrderInteraction",
          "declaration": {
            "name": "QtiOrderInteraction",
            "module": "src/lib/qti-components/qti-interaction/qti-order-interaction/qti-order-interaction.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/interface.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction-iframe.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiPortableCustomInteraction",
          "members": [
            {
              "kind": "field",
              "name": "_errorMessage",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "_iframeLoaded",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_onInteractionChanged",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_parsedRequirePaths",
              "type": {
                "text": "Record<string, string | string[]>"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "_parsedRequireShim",
              "type": {
                "text": "Record<string, any>"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "_pendingMessages",
              "type": {
                "text": "Array<{ method: string; params: any }>"
              },
              "privacy": "protected",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "_previousState",
              "type": {
                "text": "{\n    pointerEvents?: string;\n    position?: string;\n  }"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "_responseCheckInterval",
              "type": {
                "text": "number | null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "_value",
              "type": {
                "text": "string | string[]"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "addHyphenatedKeys",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Record<string, any>"
                }
              },
              "parameters": [
                {
                  "name": "properties",
                  "type": {
                    "text": "Record<string, any>"
                  }
                }
              ],
              "description": "Adds hyphenated versions of camelCase keys to properties object"
            },
            {
              "kind": "method",
              "name": "addMarkupToIframe",
              "privacy": "private",
              "description": "IFRAME MODE: Add markup and properties to iframe"
            },
            {
              "kind": "field",
              "name": "baseUrl",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "data-base-url"
            },
            {
              "kind": "field",
              "name": "boundTo",
              "type": {
                "text": "Record<string, QtiVariableJSON>"
              }
            },
            {
              "kind": "method",
              "name": "buildRequireConfig",
              "description": "DIRECT MODE: Build RequireJS configuration",
              "type": {
                "text": "buildRequireConfig() => void"
              }
            },
            {
              "kind": "method",
              "name": "combineRequireResolvePaths",
              "privacy": "private",
              "parameters": [
                {
                  "name": "path1",
                  "type": {
                    "text": "string | string[]"
                  }
                },
                {
                  "name": "path2",
                  "type": {
                    "text": "string | string[]"
                  }
                }
              ],
              "description": "DIRECT MODE: Helper method to combine require paths"
            },
            {
              "kind": "field",
              "name": "context",
              "type": {
                "text": "ItemContext | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "convertQtiVariableJSON",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string | string[]"
                }
              },
              "parameters": [
                {
                  "name": "input",
                  "type": {
                    "text": "QtiVariableJSON"
                  }
                }
              ],
              "description": "Converts QtiVariableJSON to a string or string array"
            },
            {
              "kind": "method",
              "name": "createIframe",
              "privacy": "protected",
              "description": "IFRAME MODE: Create iframe element"
            },
            {
              "kind": "field",
              "name": "customInteractionTypeIdentifier",
              "type": {
                "text": "string"
              },
              "attribute": "custom-interaction-type-identifier"
            },
            {
              "kind": "method",
              "name": "disable",
              "privacy": "public",
              "description": "Method to disable the PCI for review mode\nThis can be used when showing the correct response",
              "type": {
                "text": "disable() => void"
              }
            },
            {
              "kind": "field",
              "name": "dom",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "enable",
              "privacy": "public",
              "description": "Method to enable the PCI for interactive mode",
              "type": {
                "text": "enable() => void"
              }
            },
            {
              "kind": "method",
              "name": "generateIframeContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "description": "IFRAME MODE: Generate iframe HTML content"
            },
            {
              "kind": "method",
              "name": "getDefaultRequirePaths",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Record<string, string | string[]>"
                }
              },
              "description": "Get the default require paths"
            },
            {
              "kind": "method",
              "name": "getDefaultRequireShim",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Record<string, any>"
                }
              },
              "description": "Get the default require shim"
            },
            {
              "kind": "method",
              "name": "getFinalRequirePaths",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Record<string, string | string[]>"
                }
              },
              "description": "Get the final require paths by combining defaults with user-provided paths"
            },
            {
              "kind": "method",
              "name": "getFinalRequireShim",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Record<string, any>"
                }
              },
              "description": "Get the final require shim by combining defaults with user-provided shim"
            },
            {
              "kind": "method",
              "name": "getInteractionModules",
              "privacy": "private",
              "description": "IFRAME MODE: Get interaction modules from DOM"
            },
            {
              "kind": "method",
              "name": "getRequirePaths",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Record<string, string | string[]>"
                }
              },
              "description": "Parse the require paths JSON string into an object"
            },
            {
              "kind": "method",
              "name": "getRequireShim",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Record<string, any>"
                }
              },
              "description": "Parse the require shim JSON string into an object"
            },
            {
              "kind": "field",
              "name": "getResolvablePath",
              "description": "DIRECT MODE: Helper method to get resolvable path"
            },
            {
              "kind": "field",
              "name": "getResolvablePathString",
              "description": "DIRECT MODE: Helper method to get resolvable path string"
            },
            {
              "kind": "field",
              "name": "handleIframeMessage",
              "privacy": "protected",
              "description": "IFRAME MODE: Handle iframe messages"
            },
            {
              "kind": "field",
              "name": "iframe",
              "type": {
                "text": "HTMLIFrameElement"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "initializeInteraction",
              "privacy": "private",
              "description": "IFRAME MODE: Initialize the interaction"
            },
            {
              "kind": "field",
              "name": "loadConfig",
              "description": "DIRECT MODE: Load config from URL"
            },
            {
              "kind": "field",
              "name": "module",
              "type": {
                "text": "string"
              },
              "attribute": "module"
            },
            {
              "kind": "field",
              "name": "pci",
              "type": {
                "text": "IMSpci<ConfigProperties<unknown>>"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "processPendingMessages",
              "privacy": "private",
              "description": "IFRAME MODE: Process pending messages"
            },
            {
              "kind": "method",
              "name": "register",
              "parameters": [
                {
                  "name": "pci",
                  "type": {
                    "text": "IMSpci<ConfigProperties<unknown>>"
                  }
                }
              ],
              "description": "DIRECT MODE: Register PCI instance",
              "type": {
                "text": "register(pci: IMSpci<ConfigProperties<unknown>>) => void"
              }
            },
            {
              "kind": "method",
              "name": "removeDoubleSlashes",
              "privacy": "private",
              "parameters": [
                {
                  "name": "str",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "description": "DIRECT MODE: Helper method to remove double slashes"
            },
            {
              "kind": "field",
              "name": "requireJsUrl",
              "type": {
                "text": "string"
              },
              "default": "'https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js'",
              "attribute": "data-require-js-url"
            },
            {
              "kind": "field",
              "name": "requirePathsJson",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "data-require-paths"
            },
            {
              "kind": "field",
              "name": "requireShimJson",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "data-require-shim"
            },
            {
              "kind": "field",
              "name": "response",
              "type": {
                "text": "string | string[]"
              },
              "default": "[]"
            },
            {
              "kind": "method",
              "name": "responseVariablesToQtiVariableJSON",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "QtiVariableJSON"
                }
              },
              "parameters": [
                {
                  "name": "input",
                  "type": {
                    "text": "string | string[]"
                  }
                },
                {
                  "name": "cardinality",
                  "type": {
                    "text": "Cardinality"
                  }
                },
                {
                  "name": "baseType",
                  "type": {
                    "text": "BaseType"
                  }
                }
              ],
              "description": "Converts response variables to QtiVariableJSON"
            },
            {
              "kind": "method",
              "name": "sendIframeInitData",
              "privacy": "private",
              "description": "IFRAME MODE: Send initialization data to iframe"
            },
            {
              "kind": "method",
              "name": "sendMessageToIframe",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "method",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "params",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "description": "IFRAME MODE: Send message to iframe"
            },
            {
              "kind": "method",
              "name": "stopResponseCheck",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Stop checking for response changes"
            },
            {
              "kind": "method",
              "name": "toggleInternalCorrectResponse",
              "privacy": "public",
              "parameters": [
                {
                  "name": "show",
                  "type": {
                    "text": "boolean"
                  },
                  "description": "Whether to show or hide the correct response"
                },
                {
                  "description": "The response variable containing the correct response",
                  "name": "responseVariable"
                }
              ],
              "description": "Toggle the display of the correct response",
              "type": {
                "text": "toggleInternalCorrectResponse(show: boolean, responseVariable) => void"
              }
            },
            {
              "kind": "method",
              "name": "unescapeDataAttributes",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Record<string, any>"
                }
              },
              "parameters": [
                {
                  "name": "obj",
                  "type": {
                    "text": "Record<string, any>"
                  }
                }
              ],
              "description": "Unescape HTML entities in all values of an object"
            },
            {
              "kind": "method",
              "name": "unescapeHtml",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "str",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "description": "Unescape HTML entities in a string"
            },
            {
              "kind": "field",
              "name": "useDefaultPaths",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "data-use-default-paths"
            },
            {
              "kind": "field",
              "name": "useDefaultShims",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "data-use-default-shims"
            },
            {
              "kind": "field",
              "name": "useIframe",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "data-use-iframe"
            },
            {
              "kind": "method",
              "name": "validate",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "type": {
                "text": "validate() => boolean"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | null"
              }
            }
          ],
          "attributes": [
            {
              "name": "custom-interaction-type-identifier",
              "type": {
                "text": "string"
              },
              "fieldName": "customInteractionTypeIdentifier"
            },
            {
              "name": "data-base-url",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "baseUrl"
            },
            {
              "name": "data-require-js-url",
              "type": {
                "text": "string"
              },
              "default": "'https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js'",
              "fieldName": "requireJsUrl"
            },
            {
              "name": "data-require-paths",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "requirePathsJson"
            },
            {
              "name": "data-require-shim",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "requireShimJson"
            },
            {
              "name": "data-use-default-paths",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "useDefaultPaths"
            },
            {
              "name": "data-use-default-shims",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "useDefaultShims"
            },
            {
              "name": "data-use-iframe",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "useIframe"
            },
            {
              "name": "module",
              "type": {
                "text": "string"
              },
              "fieldName": "module"
            }
          ],
          "superclass": {
            "name": "Interaction",
            "module": "/src/lib/exports/interaction"
          },
          "tagName": "qti-portable-custom-interaction",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts",
          "definitionPath": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-portable-custom-interaction",
          "declaration": {
            "name": "QtiPortableCustomInteraction",
            "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiPortableCustomInteraction",
          "declaration": {
            "name": "QtiPortableCustomInteraction",
            "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-test-interaction.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Test-specific extension of QtiPortableCustomInteraction that adds methods\nfor interacting with the iframe content in tests.",
          "name": "QtiPortableCustomInteractionTest",
          "members": [
            {
              "kind": "field",
              "name": "_errorMessage",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "field",
              "name": "_iframeLoaded",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "default": "false",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "field",
              "name": "_onInteractionChanged",
              "privacy": "private",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "field",
              "name": "_parsedRequirePaths",
              "type": {
                "text": "Record<string, string | string[]>"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "field",
              "name": "_parsedRequireShim",
              "type": {
                "text": "Record<string, any>"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "field",
              "name": "_pendingMessages",
              "type": {
                "text": "Array<{ method: string; params: any }>"
              },
              "privacy": "protected",
              "default": "[]",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "field",
              "name": "_previousState",
              "type": {
                "text": "{\n    pointerEvents?: string;\n    position?: string;\n  }"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "field",
              "name": "_recreatingIframe",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_responseCheckInterval",
              "type": {
                "text": "number | null"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "field",
              "name": "_value",
              "type": {
                "text": "string | string[]"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "method",
              "name": "addHyphenatedKeys",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Record<string, any>"
                }
              },
              "parameters": [
                {
                  "name": "properties",
                  "type": {
                    "text": "Record<string, any>"
                  }
                }
              ],
              "description": "Adds hyphenated versions of camelCase keys to properties object",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "method",
              "name": "addMarkupToIframe",
              "privacy": "private",
              "description": "IFRAME MODE: Add markup and properties to iframe",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "field",
              "name": "baseUrl",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "data-base-url",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "field",
              "name": "boundTo",
              "type": {
                "text": "Record<string, QtiVariableJSON>"
              },
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "method",
              "name": "buildRequireConfig",
              "description": "DIRECT MODE: Build RequireJS configuration",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              },
              "type": {
                "text": "buildRequireConfig() => void"
              }
            },
            {
              "kind": "method",
              "name": "combineRequireResolvePaths",
              "privacy": "private",
              "parameters": [
                {
                  "name": "path1",
                  "type": {
                    "text": "string | string[]"
                  }
                },
                {
                  "name": "path2",
                  "type": {
                    "text": "string | string[]"
                  }
                }
              ],
              "description": "DIRECT MODE: Helper method to combine require paths",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "field",
              "name": "context",
              "type": {
                "text": "ItemContext | undefined"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "method",
              "name": "convertQtiVariableJSON",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string | string[]"
                }
              },
              "parameters": [
                {
                  "name": "input",
                  "type": {
                    "text": "QtiVariableJSON"
                  }
                }
              ],
              "description": "Converts QtiVariableJSON to a string or string array",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "method",
              "name": "createIframe",
              "privacy": "protected",
              "description": "IFRAME MODE: Create iframe element",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "field",
              "name": "customInteractionTypeIdentifier",
              "type": {
                "text": "string"
              },
              "attribute": "custom-interaction-type-identifier",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "method",
              "name": "disable",
              "privacy": "public",
              "description": "Method to disable the PCI for review mode\nThis can be used when showing the correct response",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              },
              "type": {
                "text": "disable() => void"
              }
            },
            {
              "kind": "field",
              "name": "dom",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "method",
              "name": "enable",
              "privacy": "public",
              "description": "Method to enable the PCI for interactive mode",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              },
              "type": {
                "text": "enable() => void"
              }
            },
            {
              "kind": "method",
              "name": "generateIframeContent",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "description": "Override the original generateIframeContent method to include\nthe test message handlers in the iframe HTML",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDefaultRequirePaths",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Record<string, string | string[]>"
                }
              },
              "description": "Get the default require paths",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDefaultRequireShim",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Record<string, any>"
                }
              },
              "description": "Get the default require shim",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "method",
              "name": "getFinalRequirePaths",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Record<string, string | string[]>"
                }
              },
              "description": "Get the final require paths by combining defaults with user-provided paths",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "method",
              "name": "getFinalRequireShim",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Record<string, any>"
                }
              },
              "description": "Get the final require shim by combining defaults with user-provided shim",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "method",
              "name": "getIFrameContent",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "description": "Gets the HTML content of the iframe for testing purposes",
              "type": {
                "text": "getIFrameContent() => void"
              }
            },
            {
              "kind": "method",
              "name": "getInteractionModules",
              "privacy": "private",
              "description": "IFRAME MODE: Get interaction modules from DOM",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "method",
              "name": "getRequirePaths",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Record<string, string | string[]>"
                }
              },
              "description": "Parse the require paths JSON string into an object",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "method",
              "name": "getRequireShim",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Record<string, any>"
                }
              },
              "description": "Parse the require shim JSON string into an object",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "field",
              "name": "getResolvablePath",
              "description": "DIRECT MODE: Helper method to get resolvable path",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "field",
              "name": "getResolvablePathString",
              "description": "DIRECT MODE: Helper method to get resolvable path string",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "field",
              "name": "handleIframeMessage",
              "privacy": "protected",
              "description": "IFRAME MODE: Handle iframe messages",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "field",
              "name": "iframe",
              "type": {
                "text": "HTMLIFrameElement"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "method",
              "name": "iFrameClickOnElement",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "selector",
                  "type": {
                    "text": "string"
                  },
                  "description": "The CSS selector string"
                }
              ],
              "description": "Clicks on an element identified by a CSS selector",
              "type": {
                "text": "iFrameClickOnElement(selector: string) => void"
              }
            },
            {
              "kind": "method",
              "name": "iFrameClickOnElementByText",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "text",
                  "type": {
                    "text": "string"
                  },
                  "description": "The text to search for within elements"
                }
              ],
              "description": "Clicks on an element containing the specified text",
              "type": {
                "text": "iFrameClickOnElementByText(text: string) => void"
              }
            },
            {
              "kind": "method",
              "name": "iFrameMouseClick",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "x",
                  "type": {
                    "text": "number"
                  },
                  "description": "The x coordinate"
                },
                {
                  "name": "y",
                  "type": {
                    "text": "number"
                  },
                  "description": "The y coordinate"
                }
              ],
              "description": "Simulates a mouse click at specific coordinates within the iframe",
              "type": {
                "text": "iFrameMouseClick(x: number, y: number) => void"
              }
            },
            {
              "kind": "method",
              "name": "iFrameMousedownOnElement",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "selector",
                  "type": {
                    "text": "string"
                  },
                  "description": "The CSS selector string"
                }
              ],
              "description": "Performs a mousedown event on an element identified by a CSS selector",
              "type": {
                "text": "iFrameMousedownOnElement(selector: string) => void"
              }
            },
            {
              "kind": "method",
              "name": "iFrameSetValueElement",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "selector",
                  "type": {
                    "text": "string"
                  },
                  "description": "The CSS selector string"
                },
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  },
                  "description": "The value to set"
                }
              ],
              "description": "Sets the value of an input element identified by a CSS selector",
              "type": {
                "text": "iFrameSetValueElement(selector: string, value: string) => void"
              }
            },
            {
              "kind": "method",
              "name": "iFrameSetValueElementByText",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "text",
                  "type": {
                    "text": "string"
                  },
                  "description": "The text to search for within elements"
                },
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  },
                  "description": "The value to set"
                }
              ],
              "description": "Sets the value of an input element containing the specified text",
              "type": {
                "text": "iFrameSetValueElementByText(text: string, value: string) => void"
              }
            },
            {
              "kind": "method",
              "name": "initializeInteraction",
              "privacy": "private",
              "description": "IFRAME MODE: Initialize the interaction",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "field",
              "name": "loadConfig",
              "description": "DIRECT MODE: Load config from URL",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "field",
              "name": "module",
              "type": {
                "text": "string"
              },
              "attribute": "module",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "field",
              "name": "pci",
              "type": {
                "text": "IMSpci<ConfigProperties<unknown>>"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "method",
              "name": "processPendingMessages",
              "privacy": "private",
              "description": "IFRAME MODE: Process pending messages",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "method",
              "name": "recreateIframe",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "description": "Recreates the iframe completely",
              "type": {
                "text": "recreateIframe() => void"
              }
            },
            {
              "kind": "method",
              "name": "register",
              "parameters": [
                {
                  "name": "pci",
                  "type": {
                    "text": "IMSpci<ConfigProperties<unknown>>"
                  }
                }
              ],
              "description": "DIRECT MODE: Register PCI instance",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              },
              "type": {
                "text": "register(pci: IMSpci<ConfigProperties<unknown>>) => void"
              }
            },
            {
              "kind": "method",
              "name": "removeDoubleSlashes",
              "privacy": "private",
              "parameters": [
                {
                  "name": "str",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "description": "DIRECT MODE: Helper method to remove double slashes",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "field",
              "name": "requireJsUrl",
              "type": {
                "text": "string"
              },
              "default": "'https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js'",
              "attribute": "data-require-js-url",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "field",
              "name": "requirePathsJson",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "data-require-paths",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "field",
              "name": "requireShimJson",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "data-require-shim",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "field",
              "name": "response",
              "type": {
                "text": "string | string[]"
              },
              "default": "[]",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "method",
              "name": "responseVariablesToQtiVariableJSON",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "QtiVariableJSON"
                }
              },
              "parameters": [
                {
                  "name": "input",
                  "type": {
                    "text": "string | string[]"
                  }
                },
                {
                  "name": "cardinality",
                  "type": {
                    "text": "Cardinality"
                  }
                },
                {
                  "name": "baseType",
                  "type": {
                    "text": "BaseType"
                  }
                }
              ],
              "description": "Converts response variables to QtiVariableJSON",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "method",
              "name": "sendIframeInitData",
              "privacy": "private",
              "description": "IFRAME MODE: Send initialization data to iframe",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "method",
              "name": "sendMessageToIframe",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "method",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "params",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "description": "IFRAME MODE: Send message to iframe",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "method",
              "name": "setTestContext",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "newContext",
                  "type": {
                    "text": "ItemContext"
                  }
                }
              ],
              "type": {
                "text": "setTestContext(newContext: ItemContext) => void"
              }
            },
            {
              "kind": "method",
              "name": "stopResponseCheck",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Stop checking for response changes",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "method",
              "name": "toggleInternalCorrectResponse",
              "privacy": "public",
              "parameters": [
                {
                  "name": "show",
                  "type": {
                    "text": "boolean"
                  },
                  "description": "Whether to show or hide the correct response"
                },
                {
                  "description": "The response variable containing the correct response",
                  "name": "responseVariable"
                }
              ],
              "description": "Toggle the display of the correct response",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              },
              "type": {
                "text": "toggleInternalCorrectResponse(show: boolean, responseVariable) => void"
              }
            },
            {
              "kind": "method",
              "name": "unescapeDataAttributes",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Record<string, any>"
                }
              },
              "parameters": [
                {
                  "name": "obj",
                  "type": {
                    "text": "Record<string, any>"
                  }
                }
              ],
              "description": "Unescape HTML entities in all values of an object",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "method",
              "name": "unescapeHtml",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "str",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "description": "Unescape HTML entities in a string",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "field",
              "name": "useDefaultPaths",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "data-use-default-paths",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "field",
              "name": "useDefaultShims",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "data-use-default-shims",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "field",
              "name": "useIframe",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "attribute": "data-use-iframe",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              },
              "type": {
                "text": "validate() => boolean"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | null"
              },
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            }
          ],
          "superclass": {
            "name": "QtiPortableCustomInteraction",
            "module": "/src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction"
          },
          "tagName": "qti-portable-custom-interaction-test",
          "customElement": true,
          "attributes": [
            {
              "name": "custom-interaction-type-identifier",
              "type": {
                "text": "string"
              },
              "fieldName": "customInteractionTypeIdentifier",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "name": "data-base-url",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "baseUrl",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "name": "data-require-js-url",
              "type": {
                "text": "string"
              },
              "default": "'https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js'",
              "fieldName": "requireJsUrl",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "name": "data-require-paths",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "requirePathsJson",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "name": "data-require-shim",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "requireShimJson",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "name": "data-use-default-paths",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "useDefaultPaths",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "name": "data-use-default-shims",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "useDefaultShims",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "name": "data-use-iframe",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "useIframe",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            },
            {
              "name": "module",
              "type": {
                "text": "string"
              },
              "fieldName": "module",
              "inheritedFrom": {
                "name": "QtiPortableCustomInteraction",
                "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-interaction.ts"
              }
            }
          ],
          "modulePath": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-test-interaction.ts",
          "definitionPath": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-test-interaction.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-portable-custom-interaction-test",
          "declaration": {
            "name": "QtiPortableCustomInteractionTest",
            "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-test-interaction.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiPortableCustomInteractionTest",
          "declaration": {
            "name": "QtiPortableCustomInteractionTest",
            "module": "src/lib/qti-components/qti-interaction/qti-portable-custom-interaction/qti-portable-custom-test-interaction.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/qti-position-object-interaction/qti-position-object-interaction.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiPositionObjectInteraction",
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "qti-position-object-interaction",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-interaction/qti-position-object-interaction/qti-position-object-interaction.ts",
          "definitionPath": "src/lib/qti-components/qti-interaction/qti-position-object-interaction/qti-position-object-interaction.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-position-object-interaction",
          "declaration": {
            "name": "QtiPositionObjectInteraction",
            "module": "src/lib/qti-components/qti-interaction/qti-position-object-interaction/qti-position-object-interaction.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiPositionObjectInteraction",
          "declaration": {
            "name": "QtiPositionObjectInteraction",
            "module": "src/lib/qti-components/qti-interaction/qti-position-object-interaction/qti-position-object-interaction.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/qti-position-object-interaction/qti-position-object-stage.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiPositionObjectStage",
          "members": [
            {
              "kind": "field",
              "name": "choiceOrdering",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "dragElement",
              "type": {
                "text": "any"
              }
            },
            {
              "kind": "method",
              "name": "dragElementHandler",
              "parameters": [
                {
                  "name": "event"
                }
              ],
              "type": {
                "text": "dragElementHandler(event) => void"
              }
            },
            {
              "kind": "method",
              "name": "removeMoveListener",
              "type": {
                "text": "removeMoveListener() => void"
              }
            },
            {
              "kind": "field",
              "name": "startX",
              "type": {
                "text": "any"
              }
            },
            {
              "kind": "field",
              "name": "startY",
              "type": {
                "text": "any"
              }
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "qti-position-object-stage",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-interaction/qti-position-object-interaction/qti-position-object-stage.ts",
          "definitionPath": "src/lib/qti-components/qti-interaction/qti-position-object-interaction/qti-position-object-stage.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-position-object-stage",
          "declaration": {
            "name": "QtiPositionObjectStage",
            "module": "src/lib/qti-components/qti-interaction/qti-position-object-interaction/qti-position-object-stage.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiPositionObjectStage",
          "declaration": {
            "name": "QtiPositionObjectStage",
            "module": "src/lib/qti-components/qti-interaction/qti-position-object-interaction/qti-position-object-stage.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/qti-select-point-interaction/qti-select-point-interaction.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiSelectPointInteraction",
          "members": [
            {
              "kind": "field",
              "name": "_correctAreas",
              "type": {
                "text": "{ shape: string; coords: string }[]"
              },
              "privacy": "private",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "_imageHeightOriginal",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "field",
              "name": "_imageWidthOriginal",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "field",
              "name": "_imgElement",
              "type": {
                "text": "HTMLImageElement | null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "_onImageClick",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_onResize",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_responseCorrection",
              "type": {
                "text": "boolean[]"
              },
              "privacy": "private",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "_scaleX",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "1"
            },
            {
              "kind": "field",
              "name": "_scaleY",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "1"
            },
            {
              "kind": "method",
              "name": "calculateScale",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "maxChoices",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "Infinity",
              "attribute": "max-choices"
            },
            {
              "kind": "field",
              "name": "minChoices",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "0",
              "attribute": "min-choices"
            },
            {
              "kind": "field",
              "name": "response",
              "type": {
                "text": "string[] | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "responsePoints",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "toggleCandidateCorrection",
              "privacy": "public",
              "parameters": [
                {
                  "name": "show",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "type": {
                "text": "toggleCandidateCorrection(show: boolean) => void"
              }
            },
            {
              "kind": "method",
              "name": "toggleCorrectResponse",
              "privacy": "public",
              "parameters": [
                {
                  "name": "show",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "type": {
                "text": "toggleCorrectResponse(show: boolean) => void"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "type": {
                "text": "validate() => boolean"
              }
            }
          ],
          "attributes": [
            {
              "name": "max-choices",
              "type": {
                "text": "number"
              },
              "default": "Infinity",
              "fieldName": "maxChoices"
            },
            {
              "name": "min-choices",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "minChoices"
            }
          ],
          "superclass": {
            "name": "Interaction",
            "module": "/src/lib/exports/interaction"
          },
          "tagName": "qti-select-point-interaction",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-interaction/qti-select-point-interaction/qti-select-point-interaction.ts",
          "definitionPath": "src/lib/qti-components/qti-interaction/qti-select-point-interaction/qti-select-point-interaction.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-select-point-interaction",
          "declaration": {
            "name": "QtiSelectPointInteraction",
            "module": "src/lib/qti-components/qti-interaction/qti-select-point-interaction/qti-select-point-interaction.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiSelectPointInteraction",
          "declaration": {
            "name": "QtiSelectPointInteraction",
            "module": "src/lib/qti-components/qti-interaction/qti-select-point-interaction/qti-select-point-interaction.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/qti-simple-associable-choice.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiSimpleAssociableChoice",
          "members": [
            {
              "kind": "method",
              "name": "_activate",
              "privacy": "private",
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_onClick",
              "privacy": "private",
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_onKeyUp",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "aria-disabled",
              "reflects": true,
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "fixed",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "fixed"
            },
            {
              "kind": "method",
              "name": "handleDisabledChange",
              "parameters": [
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "disabled",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              },
              "type": {
                "text": "handleDisabledChange(_oldValue: boolean, disabled: boolean) => void"
              }
            },
            {
              "kind": "field",
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "identifier",
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "internals",
              "type": {
                "text": "ElementInternals"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "matchMax",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "1",
              "description": "the maximum number of selections a candidate must make, the other options will be disabled when max options is checked",
              "attribute": "match-max"
            },
            {
              "kind": "field",
              "name": "matchMin",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "0",
              "description": "the minimal number of selections a candidate must make",
              "attribute": "match-min"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "aria-readonly",
              "reflects": true,
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "tabIndex",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "0",
              "attribute": "tabindex",
              "reflects": true,
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "aria-disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled",
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "name": "aria-readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "readonly",
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "name": "fixed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "fixed"
            },
            {
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "identifier",
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "name": "match-max",
              "type": {
                "text": "number"
              },
              "default": "1",
              "description": "the maximum number of selections a candidate must make, the other options will be disabled when max options is checked",
              "fieldName": "matchMax"
            },
            {
              "name": "match-min",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "the minimal number of selections a candidate must make",
              "fieldName": "matchMin"
            },
            {
              "name": "tabindex",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "tabIndex",
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            }
          ],
          "mixins": [
            {
              "name": "ActiveElementMixin",
              "module": "/src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "qti-simple-associable-choice",
          "customElement": true,
          "events": [
            {
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              },
              "name": ""
            }
          ],
          "modulePath": "src/lib/qti-components/qti-interaction/qti-simple-associable-choice.ts",
          "definitionPath": "src/lib/qti-components/qti-interaction/qti-simple-associable-choice.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-simple-associable-choice",
          "declaration": {
            "name": "QtiSimpleAssociableChoice",
            "module": "src/lib/qti-components/qti-interaction/qti-simple-associable-choice.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiSimpleAssociableChoice",
          "declaration": {
            "name": "QtiSimpleAssociableChoice",
            "module": "src/lib/qti-components/qti-interaction/qti-simple-associable-choice.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/qti-simple-choice.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "qti-order-interaction\nqti-choice-interaction",
          "name": "QtiSimpleChoice",
          "members": [
            {
              "kind": "method",
              "name": "_activate",
              "privacy": "private",
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_onClick",
              "privacy": "private",
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_onKeyUp",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "checked",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "aria-disabled",
              "reflects": true,
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "fixed",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "fixed"
            },
            {
              "kind": "method",
              "name": "handleDisabledChange",
              "parameters": [
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "disabled",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              },
              "type": {
                "text": "handleDisabledChange(_oldValue: boolean, disabled: boolean) => void"
              }
            },
            {
              "kind": "field",
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "identifier",
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "internals",
              "type": {
                "text": "ElementInternals"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "marker",
              "type": {
                "text": "string"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "aria-readonly",
              "reflects": true,
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "showHide",
              "type": {
                "text": "string | null"
              },
              "privacy": "public",
              "default": "'show'",
              "attribute": "show-hide"
            },
            {
              "kind": "field",
              "name": "tabIndex",
              "type": {
                "text": "number"
              },
              "privacy": "public",
              "default": "0",
              "attribute": "tabindex",
              "reflects": true,
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateIdentifier",
              "type": {
                "text": "string | null"
              },
              "privacy": "public",
              "default": "null",
              "attribute": "template-identifier"
            }
          ],
          "attributes": [
            {
              "name": "aria-disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled",
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "name": "aria-readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "readonly",
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "name": "fixed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "fixed"
            },
            {
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "identifier",
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "name": "show-hide",
              "type": {
                "text": "string | null"
              },
              "default": "'show'",
              "fieldName": "showHide"
            },
            {
              "name": "tabindex",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "tabIndex",
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              }
            },
            {
              "name": "template-identifier",
              "type": {
                "text": "string | null"
              },
              "default": "null",
              "fieldName": "templateIdentifier"
            }
          ],
          "mixins": [
            {
              "name": "ActiveElementMixin",
              "module": "/src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "qti-simple-choice",
          "customElement": true,
          "events": [
            {
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "ActiveElementMixin",
                "module": "src/lib/qti-components/qti-interaction/internal/active-element/active-element.mixin.ts"
              },
              "name": ""
            }
          ],
          "modulePath": "src/lib/qti-components/qti-interaction/qti-simple-choice.ts",
          "definitionPath": "src/lib/qti-components/qti-interaction/qti-simple-choice.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-simple-choice",
          "declaration": {
            "name": "QtiSimpleChoice",
            "module": "src/lib/qti-components/qti-interaction/qti-simple-choice.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiSimpleChoice",
          "declaration": {
            "name": "QtiSimpleChoice",
            "module": "src/lib/qti-components/qti-interaction/qti-simple-choice.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/qti-slider-interaction/qti-slider-interaction.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiSliderInteraction",
          "members": [
            {
              "kind": "field",
              "name": "_correctResponseNumber",
              "type": {
                "text": "number | null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "method",
              "name": "_onDrag",
              "privacy": "private",
              "parameters": [
                {
                  "name": "pageX",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onDragEnd",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_onMouseDown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_onTouchStart",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "TouchEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_rail",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_startDrag",
              "privacy": "private",
              "parameters": [
                {
                  "name": "pageX",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_updateValue",
              "privacy": "private",
              "parameters": [
                {
                  "name": "newValue",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_value",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "number"
              },
              "default": "100",
              "attribute": "upper-bound"
            },
            {
              "kind": "field",
              "name": "min",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "lower-bound"
            },
            {
              "kind": "field",
              "name": "response",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "step",
              "type": {
                "text": "number"
              },
              "default": "1",
              "attribute": "step"
            },
            {
              "kind": "method",
              "name": "toggleCorrectResponse",
              "privacy": "public",
              "parameters": [
                {
                  "name": "show",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "type": {
                "text": "toggleCorrectResponse(show: boolean) => void"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "type": {
                "text": "validate() => boolean"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "type": {
                "text": "Event"
              }
            }
          ],
          "attributes": [
            {
              "name": "lower-bound",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "min"
            },
            {
              "name": "step",
              "type": {
                "text": "number"
              },
              "default": "1",
              "fieldName": "step"
            },
            {
              "name": "upper-bound",
              "type": {
                "text": "number"
              },
              "default": "100",
              "fieldName": "max"
            }
          ],
          "superclass": {
            "name": "Interaction",
            "module": "/src/lib/exports/interaction"
          },
          "tagName": "qti-slider-interaction",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-interaction/qti-slider-interaction/qti-slider-interaction.ts",
          "definitionPath": "src/lib/qti-components/qti-interaction/qti-slider-interaction/qti-slider-interaction.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-slider-interaction",
          "declaration": {
            "name": "QtiSliderInteraction",
            "module": "src/lib/qti-components/qti-interaction/qti-slider-interaction/qti-slider-interaction.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiSliderInteraction",
          "declaration": {
            "name": "QtiSliderInteraction",
            "module": "src/lib/qti-components/qti-interaction/qti-slider-interaction/qti-slider-interaction.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/qti-text-entry-interaction/qti-text-entry-interaction.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiTextEntryInteraction",
          "members": [
            {
              "kind": "field",
              "name": "_handleValueChange",
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "HTMLInputElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "correctness",
              "type": {
                "text": "Readonly<Correctness | null>"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "dataPatternmaskMessage",
              "type": {
                "text": "string"
              },
              "attribute": "data-patternmask-message"
            },
            {
              "kind": "field",
              "name": "expectedLength",
              "type": {
                "text": "number"
              },
              "attribute": "expected-length"
            },
            {
              "kind": "field",
              "name": "inputRef"
            },
            {
              "kind": "field",
              "name": "isInline",
              "type": {
                "text": "boolean"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "patternMask",
              "type": {
                "text": "string"
              },
              "attribute": "pattern-mask"
            },
            {
              "kind": "field",
              "name": "placeholderText",
              "type": {
                "text": "string"
              },
              "attribute": "placeholder-text"
            },
            {
              "kind": "method",
              "name": "reportValidity",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "type": {
                "text": "reportValidity() => boolean"
              }
            },
            {
              "kind": "method",
              "name": "reset",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "type": {
                "text": "reset() => void"
              }
            },
            {
              "kind": "field",
              "name": "response",
              "type": {
                "text": "string | null"
              },
              "default": "null"
            },
            {
              "kind": "method",
              "name": "setEmptyAttribute",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "text",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "textChanged",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "toggleInternalCorrectResponse",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "show",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "type": {
                "text": "toggleInternalCorrectResponse(show: boolean) => void"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "type": {
                "text": "validate() => boolean"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | null"
              }
            }
          ],
          "attributes": [
            {
              "name": "data-patternmask-message",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPatternmaskMessage"
            },
            {
              "name": "expected-length",
              "type": {
                "text": "number"
              },
              "fieldName": "expectedLength"
            },
            {
              "name": "pattern-mask",
              "type": {
                "text": "string"
              },
              "fieldName": "patternMask"
            },
            {
              "name": "placeholder-text",
              "type": {
                "text": "string"
              },
              "fieldName": "placeholderText"
            }
          ],
          "superclass": {
            "name": "Interaction",
            "module": "/src/lib/exports/interaction"
          },
          "tagName": "qti-text-entry-interaction",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-interaction/qti-text-entry-interaction/qti-text-entry-interaction.ts",
          "definitionPath": "src/lib/qti-components/qti-interaction/qti-text-entry-interaction/qti-text-entry-interaction.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-text-entry-interaction",
          "declaration": {
            "name": "QtiTextEntryInteraction",
            "module": "src/lib/qti-components/qti-interaction/qti-text-entry-interaction/qti-text-entry-interaction.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiTextEntryInteraction",
          "declaration": {
            "name": "QtiTextEntryInteraction",
            "module": "src/lib/qti-components/qti-interaction/qti-text-entry-interaction/qti-text-entry-interaction.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-interaction/qti-upload-interaction/qti-upload-interaction.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiUploadInteraction",
          "members": [
            {
              "kind": "field",
              "name": "_base64",
              "type": {
                "text": "string | null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "method",
              "name": "_convertToBase64",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<string>"
                }
              },
              "parameters": [
                {
                  "name": "file",
                  "type": {
                    "text": "File"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_file",
              "type": {
                "text": "File | null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "method",
              "name": "_onFileChange",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "reset",
              "type": {
                "text": "reset() => void"
              }
            },
            {
              "kind": "field",
              "name": "response",
              "type": {
                "text": "string | null"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "type": {
                "text": "validate() => boolean"
              }
            }
          ],
          "events": [
            {
              "name": "qti-interaction-response",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "superclass": {
            "name": "Interaction",
            "module": "/src/lib/exports/interaction"
          },
          "tagName": "qti-upload-interaction",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-interaction/qti-upload-interaction/qti-upload-interaction.ts",
          "definitionPath": "src/lib/qti-components/qti-interaction/qti-upload-interaction/qti-upload-interaction.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-upload-interaction",
          "declaration": {
            "name": "QtiUploadInteraction",
            "module": "src/lib/qti-components/qti-interaction/qti-upload-interaction/qti-upload-interaction.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiUploadInteraction",
          "declaration": {
            "name": "QtiUploadInteraction",
            "module": "src/lib/qti-components/qti-interaction/qti-upload-interaction/qti-upload-interaction.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-item-body/qti-item-body.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiItemBody",
          "cssParts": [
            {
              "description": "the qti rubric block part",
              "name": "qti-rubric-block"
            }
          ],
          "slots": [
            {
              "description": "item body content.",
              "name": ""
            },
            {
              "description": "the qti rubric block is placed above the item",
              "name": "qti-rubric-block"
            }
          ],
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "summary": "The qti-item-body node contains the text, graphics, media objects and interactions that describe the item's content and information about how it is structured.",
          "tagName": "qti-item-body",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-item-body/qti-item-body.ts",
          "definitionPath": "src/lib/qti-components/qti-item-body/qti-item-body.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-item-body",
          "declaration": {
            "name": "QtiItemBody",
            "module": "src/lib/qti-components/qti-item-body/qti-item-body.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiItemBody",
          "declaration": {
            "name": "QtiItemBody",
            "module": "src/lib/qti-components/qti-item-body/qti-item-body.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-outcome-processing/qti-outcome-processing.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiOutcomeProcessing",
          "members": [
            {
              "kind": "method",
              "name": "process",
              "privacy": "public",
              "type": {
                "text": "process() => void"
              }
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "qti-outcome-processing",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-outcome-processing/qti-outcome-processing.ts",
          "definitionPath": "src/lib/qti-components/qti-outcome-processing/qti-outcome-processing.ts"
        },
        {
          "kind": "class",
          "description": "",
          "name": "QtiOutcomeProcessingProcessor",
          "members": [
            {
              "kind": "method",
              "name": "process",
              "privacy": "public",
              "parameters": [
                {
                  "name": "rules",
                  "type": {
                    "text": "QtiRuleBase[]"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-outcome-processing",
          "declaration": {
            "name": "QtiOutcomeProcessing",
            "module": "src/lib/qti-components/qti-outcome-processing/qti-outcome-processing.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiOutcomeProcessing",
          "declaration": {
            "name": "QtiOutcomeProcessing",
            "module": "src/lib/qti-components/qti-outcome-processing/qti-outcome-processing.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiOutcomeProcessingProcessor",
          "declaration": {
            "name": "QtiOutcomeProcessingProcessor",
            "module": "src/lib/qti-components/qti-outcome-processing/qti-outcome-processing.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-prompt/qti-prompt.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiPrompt",
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "qti-prompt",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-prompt/qti-prompt.ts",
          "definitionPath": "src/lib/qti-components/qti-prompt/qti-prompt.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-prompt",
          "declaration": {
            "name": "QtiPrompt",
            "module": "src/lib/qti-components/qti-prompt/qti-prompt.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiPrompt",
          "declaration": {
            "name": "QtiPrompt",
            "module": "src/lib/qti-components/qti-prompt/qti-prompt.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-response-processing/qti-response-processing"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-rule/qti-lookup-outcome-value/qti-lookup-outcome-value"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-rule/qti-response-condition/qti-response-condition"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-rule/qti-set-outcome-value/qti-set-outcome-value"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-response-else/qti-response-else"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-response-else/qti-response-if/qti-response-else-if/qti-response-else-if"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-response-else/qti-response-if/qti-response-if"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-expression"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-rule/qti-rule"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-expression/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-and/qti-and"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-basevalue/qti-basevalue"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-container-size/qti-container-size"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-contains/qti-contains"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-correct/qti-correct"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-default/qti-default"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-equal-rounded/qti-equal-rounded"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-round/qti-round"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-round-to/qti-round-to"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-equal/qti-equal"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-gcd/qti.gcd"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-gt/qti-gt"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-gte/qti-gte"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-null/qti-null"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-is-null/qti-is-null"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-field-value/qti-field-value"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-lt/qti-lt"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-lte/qti-lte"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-map-response/qti-map-response"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-map-response-point/qti-map-response-point"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-mapping/qti-mapping"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-area-mapping/qti-area-mapping"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-math-operator/qti-math-operator"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-match/qti-match"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-member/qti-member"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-multiple/qti-multiple"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-not/qti-not"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-or/qti-or"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-ordered/qti-ordered"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-power/qti-power"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-printed-variable/qti-printed-variable"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-product/qti-product"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-subtract"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-string-match/qti-string-match"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-sum/qti-sum"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-variable/qti-variable"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-random-integer/qti-random-integer"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-random/qti-random"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-delete/qti-delete"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-index/qti-index"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-expression/qti-and/qti-and.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiAnd",
          "members": [
            {
              "kind": "method",
              "name": "calculate",
              "privacy": "public",
              "type": {
                "text": "calculate() => void"
              }
            },
            {
              "kind": "method",
              "name": "calculateChildren",
              "privacy": "public",
              "parameters": [
                {
                  "name": "children",
                  "type": {
                    "text": "Array<MockQtiExpression<any>>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "qtiAndMixin",
                "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-and/qti-and.ts"
              },
              "type": {
                "text": "calculateChildren(children: Array<MockQtiExpression<any>>) => void"
              }
            }
          ],
          "mixins": [
            {
              "name": "qtiAndMixin",
              "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-and/qti-and.ts"
            }
          ],
          "superclass": {
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-and/qti-and.ts"
          },
          "tagName": "qti-and",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-and/qti-and.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-and/qti-and.ts"
        },
        {
          "kind": "mixin",
          "description": "",
          "name": "qtiAndMixin",
          "members": [
            {
              "kind": "method",
              "name": "calculateChildren",
              "privacy": "public",
              "parameters": [
                {
                  "name": "children",
                  "type": {
                    "text": "Array<MockQtiExpression<any>>"
                  }
                }
              ]
            }
          ],
          "parameters": [
            {
              "name": "Base",
              "type": {
                "text": "TBase"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-and",
          "declaration": {
            "name": "QtiAnd",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-and/qti-and.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiAnd",
          "declaration": {
            "name": "QtiAnd",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-and/qti-and.ts"
          }
        },
        {
          "kind": "js",
          "name": "qtiAndMixin",
          "declaration": {
            "name": "qtiAndMixin",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-and/qti-and.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-expression/qti-area-mapping/qti-area-mapping.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-expression/qti-basevalue/qti-basevalue.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiBaseValue",
          "members": [
            {
              "kind": "field",
              "name": "baseType",
              "type": {
                "text": "BaseType"
              },
              "default": "'string'",
              "attribute": "base-type",
              "parsedType": {
                "text": "'string' | 'boolean' | 'directedPair' | 'duration' | 'float' | 'integer' | 'identifier' | 'pair' | 'record'"
              }
            },
            {
              "kind": "method",
              "name": "getResult",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "type": {
                "text": "getResult() => string"
              }
            }
          ],
          "attributes": [
            {
              "name": "base-type",
              "type": {
                "text": "BaseType"
              },
              "default": "'string'",
              "fieldName": "baseType",
              "parsedType": {
                "text": "'string' | 'boolean' | 'directedPair' | 'duration' | 'float' | 'integer' | 'identifier' | 'pair' | 'record'"
              }
            }
          ],
          "superclass": {
            "name": "QtiExpression",
            "module": "/src/lib/exports/qti-expression"
          },
          "tagName": "qti-base-value",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-basevalue/qti-basevalue.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-basevalue/qti-basevalue.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-base-value",
          "declaration": {
            "name": "QtiBaseValue",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-basevalue/qti-basevalue.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiBaseValue",
          "declaration": {
            "name": "QtiBaseValue",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-basevalue/qti-basevalue.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-expression/qti-container-size/qti-container-size.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiContainerSize",
          "members": [
            {
              "kind": "method",
              "name": "getResult",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "type": {
                "text": "getResult() => number"
              }
            }
          ],
          "superclass": {
            "name": "QtiExpression",
            "module": "/src/lib/exports/qti-expression"
          },
          "summary": "The qti-container-size operator returns the number of values in a container.",
          "tagName": "qti-container-size",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-container-size/qti-container-size.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-container-size/qti-container-size.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-container-size",
          "declaration": {
            "name": "QtiContainerSize",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-container-size/qti-container-size.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiContainerSize",
          "declaration": {
            "name": "QtiContainerSize",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-container-size/qti-container-size.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-expression/qti-contains/qti-contains.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiContains",
          "members": [
            {
              "kind": "method",
              "name": "getResult",
              "privacy": "public",
              "type": {
                "text": "getResult() => void"
              }
            }
          ],
          "superclass": {
            "name": "QtiConditionExpression",
            "module": "/src/lib/exports/qti-condition-expression"
          },
          "tagName": "qti-contains",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-contains/qti-contains.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-contains/qti-contains.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-contains",
          "declaration": {
            "name": "QtiContains",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-contains/qti-contains.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiContains",
          "declaration": {
            "name": "QtiContains",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-contains/qti-contains.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-expression/qti-correct/qti-correct.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiCorrect",
          "members": [
            {
              "kind": "method",
              "name": "getResult",
              "type": {
                "text": "getResult() => void"
              }
            },
            {
              "kind": "field",
              "name": "interpretation",
              "readonly": true
            }
          ],
          "superclass": {
            "name": "QtiExpression",
            "module": "/src/lib/exports/qti-expression"
          },
          "tagName": "qti-correct",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-correct/qti-correct.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-correct/qti-correct.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-correct",
          "declaration": {
            "name": "QtiCorrect",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-correct/qti-correct.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiCorrect",
          "declaration": {
            "name": "QtiCorrect",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-correct/qti-correct.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-expression/qti-default/qti-default.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiDefault",
          "members": [
            {
              "kind": "field",
              "name": "_testContext",
              "type": {
                "text": "TestContext | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "context",
              "type": {
                "text": "ItemContext | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "getResult",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "any"
                }
              },
              "type": {
                "text": "getResult() => any"
              }
            },
            {
              "kind": "field",
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "identifier"
            }
          ],
          "attributes": [
            {
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "identifier"
            }
          ],
          "superclass": {
            "name": "QtiExpression",
            "module": "/src/lib/exports/qti-expression"
          },
          "summary": "The qti-default expression returns the default value of a declared variable.",
          "tagName": "qti-default",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-default/qti-default.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-default/qti-default.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-default",
          "declaration": {
            "name": "QtiDefault",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-default/qti-default.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiDefault",
          "declaration": {
            "name": "QtiDefault",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-default/qti-default.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-expression/qti-delete/qti-delete.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiDelete",
          "members": [
            {
              "kind": "method",
              "name": "getResult",
              "return": {
                "type": {
                  "text": "string[] | null"
                }
              },
              "type": {
                "text": "getResult() => string[] | null"
              }
            }
          ],
          "superclass": {
            "name": "QtiExpression",
            "module": "/src/lib/exports/qti-expression"
          },
          "tagName": "qti-delete",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-delete/qti-delete.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-delete/qti-delete.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-delete",
          "declaration": {
            "name": "QtiDelete",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-delete/qti-delete.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiDelete",
          "declaration": {
            "name": "QtiDelete",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-delete/qti-delete.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-expression/qti-equal-rounded/qti-equal-rounded.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiEqualRounded",
          "members": [
            {
              "kind": "field",
              "name": "figures",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "getResult",
              "privacy": "public",
              "type": {
                "text": "getResult() => void"
              }
            },
            {
              "kind": "field",
              "name": "roundingMode",
              "type": {
                "text": "'decimalPlaces' | 'significantFigures'"
              },
              "default": "'significantFigures'",
              "attribute": "roundingMode"
            }
          ],
          "attributes": [
            {
              "name": "roundingMode",
              "type": {
                "text": "'decimalPlaces' | 'significantFigures'"
              },
              "default": "'significantFigures'",
              "fieldName": "roundingMode"
            }
          ],
          "superclass": {
            "name": "QtiExpression",
            "module": "/src/lib/exports/qti-expression"
          },
          "tagName": "qti-equal-rounded",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-equal-rounded/qti-equal-rounded.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-equal-rounded/qti-equal-rounded.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-equal-rounded",
          "declaration": {
            "name": "QtiEqualRounded",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-equal-rounded/qti-equal-rounded.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiEqualRounded",
          "declaration": {
            "name": "QtiEqualRounded",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-equal-rounded/qti-equal-rounded.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-expression/qti-equal/qti-equal.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiEqual",
          "members": [
            {
              "kind": "method",
              "name": "getResult",
              "privacy": "public",
              "type": {
                "text": "getResult() => void"
              }
            },
            {
              "kind": "field",
              "name": "toleranceMode",
              "type": {
                "text": "'exact' | 'relative' | 'absolute'"
              },
              "default": "'exact'",
              "attribute": "toleranceMode"
            }
          ],
          "attributes": [
            {
              "name": "toleranceMode",
              "type": {
                "text": "'exact' | 'relative' | 'absolute'"
              },
              "default": "'exact'",
              "fieldName": "toleranceMode"
            }
          ],
          "superclass": {
            "name": "QtiExpression",
            "module": "/src/lib/exports/qti-expression"
          },
          "tagName": "qti-equal",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-equal/qti-equal.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-equal/qti-equal.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-equal",
          "declaration": {
            "name": "QtiEqual",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-equal/qti-equal.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiEqual",
          "declaration": {
            "name": "QtiEqual",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-equal/qti-equal.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-expression/qti-field-value/qti-field-value.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiFieldValue",
          "members": [
            {
              "kind": "method",
              "name": "getResult",
              "privacy": "public",
              "type": {
                "text": "getResult() => void"
              }
            }
          ],
          "superclass": {
            "name": "QtiExpression",
            "module": "/src/lib/exports/qti-expression"
          },
          "tagName": "qti-field-value",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-field-value/qti-field-value.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-field-value/qti-field-value.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-field-value",
          "declaration": {
            "name": "QtiFieldValue",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-field-value/qti-field-value.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiFieldValue",
          "declaration": {
            "name": "QtiFieldValue",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-field-value/qti-field-value.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-expression/qti-gcd/qti.gcd.spec.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-expression/qti-gcd/qti.gcd.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiGcd",
          "members": [
            {
              "kind": "method",
              "name": "_calculateGcd",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "values",
                  "type": {
                    "text": "number[]"
                  }
                }
              ],
              "description": "Calculate the greatest common divisor of an array of integers"
            },
            {
              "kind": "method",
              "name": "_gcdTwoNumbers",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "a",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "b",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "description": "Calculate GCD of two numbers using Euclidean algorithm"
            },
            {
              "kind": "method",
              "name": "getResult",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "number | null"
                }
              },
              "type": {
                "text": "getResult() => number | null"
              }
            }
          ],
          "superclass": {
            "name": "QtiExpression",
            "module": "/src/lib/exports/qti-expression"
          },
          "summary": "The qti-gcd operator calculates the greatest common divisor of integer values.",
          "tagName": "qti-gcd",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-gcd/qti.gcd.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-gcd/qti.gcd.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-gcd",
          "declaration": {
            "name": "QtiGcd",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-gcd/qti.gcd.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiGcd",
          "declaration": {
            "name": "QtiGcd",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-gcd/qti.gcd.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-expression/qti-gt/qti-gt.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiGt",
          "members": [
            {
              "kind": "method",
              "name": "getResult",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "type": {
                "text": "getResult() => boolean"
              }
            }
          ],
          "superclass": {
            "name": "QtiExpression",
            "module": "/src/lib/exports/qti-expression"
          },
          "tagName": "qti-gt",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-gt/qti-gt.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-gt/qti-gt.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-gt",
          "declaration": {
            "name": "QtiGt",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-gt/qti-gt.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiGt",
          "declaration": {
            "name": "QtiGt",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-gt/qti-gt.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-expression/qti-gte/qti-gte.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiGte",
          "members": [
            {
              "kind": "method",
              "name": "getResult",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "type": {
                "text": "getResult() => boolean"
              }
            }
          ],
          "superclass": {
            "name": "QtiConditionExpression",
            "module": "/src/lib/exports/qti-condition-expression"
          },
          "tagName": "qti-gte",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-gte/qti-gte.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-gte/qti-gte.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-gte",
          "declaration": {
            "name": "QtiGte",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-gte/qti-gte.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiGte",
          "declaration": {
            "name": "QtiGte",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-gte/qti-gte.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-expression/qti-index/qti-index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiIndex",
          "members": [
            {
              "kind": "method",
              "name": "getResult",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "any"
                }
              },
              "type": {
                "text": "getResult() => any"
              }
            },
            {
              "kind": "method",
              "name": "lookupVariableValue",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "integer | null"
                }
              },
              "parameters": [
                {
                  "name": "identifier",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "n",
              "type": {
                "text": "string"
              },
              "attribute": "n"
            }
          ],
          "attributes": [
            {
              "name": "n",
              "type": {
                "text": "string"
              },
              "fieldName": "n"
            }
          ],
          "superclass": {
            "name": "QtiExpression",
            "module": "/src/lib/exports/qti-expression"
          },
          "tagName": "qti-index",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-index/qti-index.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-index/qti-index.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-index",
          "declaration": {
            "name": "QtiIndex",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-index/qti-index.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiIndex",
          "declaration": {
            "name": "QtiIndex",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-index/qti-index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-expression/qti-is-null/qti-is-null.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiIsNull",
          "members": [
            {
              "kind": "method",
              "name": "getResult",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "type": {
                "text": "getResult() => boolean"
              }
            }
          ],
          "superclass": {
            "name": "QtiExpression",
            "module": "/src/lib/exports/qti-expression"
          },
          "tagName": "qti-is-null",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-is-null/qti-is-null.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-is-null/qti-is-null.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-is-null",
          "declaration": {
            "name": "QtiIsNull",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-is-null/qti-is-null.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiIsNull",
          "declaration": {
            "name": "QtiIsNull",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-is-null/qti-is-null.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-expression/qti-lt/qti-lt.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiLt",
          "members": [
            {
              "kind": "method",
              "name": "getResult",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "type": {
                "text": "getResult() => boolean"
              }
            }
          ],
          "superclass": {
            "name": "QtiExpression",
            "module": "/src/lib/exports/qti-expression"
          },
          "tagName": "qti-lt",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-lt/qti-lt.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-lt/qti-lt.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-lt",
          "declaration": {
            "name": "QtiLt",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-lt/qti-lt.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiLt",
          "declaration": {
            "name": "QtiLt",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-lt/qti-lt.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-expression/qti-lte/qti-lte.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiLte",
          "members": [
            {
              "kind": "method",
              "name": "getResult",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "type": {
                "text": "getResult() => boolean"
              }
            }
          ],
          "superclass": {
            "name": "QtiConditionExpression",
            "module": "/src/lib/exports/qti-condition-expression"
          },
          "tagName": "qti-lte",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-lte/qti-lte.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-lte/qti-lte.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-lte",
          "declaration": {
            "name": "QtiLte",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-lte/qti-lte.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiLte",
          "declaration": {
            "name": "QtiLte",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-lte/qti-lte.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-expression/qti-map-response-point/qti-map-response-point.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiMapResponsePoint",
          "members": [
            {
              "kind": "method",
              "name": "getResult",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "type": {
                "text": "getResult() => number"
              }
            },
            {
              "kind": "field",
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "attribute": "identifier"
            }
          ],
          "attributes": [
            {
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "fieldName": "identifier"
            }
          ],
          "superclass": {
            "name": "QtiExpression",
            "module": "/src/lib/exports/qti-expression"
          },
          "tagName": "qti-map-response-point",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-map-response-point/qti-map-response-point.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-map-response-point/qti-map-response-point.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-map-response-point",
          "declaration": {
            "name": "QtiMapResponsePoint",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-map-response-point/qti-map-response-point.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiMapResponsePoint",
          "declaration": {
            "name": "QtiMapResponsePoint",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-map-response-point/qti-map-response-point.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-expression/qti-map-response/qti-map-response.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiMapResponse",
          "members": [
            {
              "kind": "method",
              "name": "getResult",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "type": {
                "text": "getResult() => number"
              }
            },
            {
              "kind": "field",
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "attribute": "identifier"
            }
          ],
          "attributes": [
            {
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "fieldName": "identifier"
            }
          ],
          "superclass": {
            "name": "QtiExpression",
            "module": "/src/lib/exports/qti-expression"
          },
          "tagName": "qti-map-response",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-map-response/qti-map-response.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-map-response/qti-map-response.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-map-response",
          "declaration": {
            "name": "QtiMapResponse",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-map-response/qti-map-response.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiMapResponse",
          "declaration": {
            "name": "QtiMapResponse",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-map-response/qti-map-response.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-expression/qti-mapping/qti-mapping.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-expression/qti-match/qti-match.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiMatch",
          "members": [
            {
              "kind": "method",
              "name": "getResult",
              "privacy": "public",
              "type": {
                "text": "getResult() => void"
              }
            },
            {
              "kind": "method",
              "name": "match",
              "privacy": "public",
              "static": true,
              "parameters": [
                {
                  "name": "valueToMap",
                  "type": {
                    "text": "ResponseVariable"
                  }
                },
                {
                  "name": "correctValueInfo",
                  "type": {
                    "text": "ResponseVariable"
                  }
                }
              ],
              "type": {
                "text": "match(valueToMap: ResponseVariable, correctValueInfo: ResponseVariable) => void"
              }
            }
          ],
          "superclass": {
            "name": "QtiExpression",
            "module": "/src/lib/exports/qti-expression"
          },
          "tagName": "qti-match",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-match/qti-match.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-match/qti-match.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-match",
          "declaration": {
            "name": "QtiMatch",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-match/qti-match.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiMatch",
          "declaration": {
            "name": "QtiMatch",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-match/qti-match.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-expression/qti-math-operator/qti-math-operator.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiMathOperator",
          "members": [
            {
              "kind": "method",
              "name": "_performOperation",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number | null"
                }
              },
              "parameters": [
                {
                  "name": "operation",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "values",
                  "type": {
                    "text": "number[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getResult",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "number | null"
                }
              },
              "type": {
                "text": "getResult() => number | null"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "name"
            }
          ],
          "attributes": [
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "name"
            }
          ],
          "superclass": {
            "name": "QtiExpression",
            "module": "/src/lib/exports/qti-expression"
          },
          "summary": "The qti-math-operator performs mathematical operations on numerical values.",
          "tagName": "qti-math-operator",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-math-operator/qti-math-operator.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-math-operator/qti-math-operator.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-math-operator",
          "declaration": {
            "name": "QtiMathOperator",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-math-operator/qti-math-operator.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiMathOperator",
          "declaration": {
            "name": "QtiMathOperator",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-math-operator/qti-math-operator.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-expression/qti-member/qti-member.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiMember",
          "members": [
            {
              "kind": "method",
              "name": "getResult",
              "privacy": "public",
              "type": {
                "text": "getResult() => void"
              }
            }
          ],
          "superclass": {
            "name": "QtiExpression",
            "module": "/src/lib/exports/qti-expression"
          },
          "tagName": "qti-member",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-member/qti-member.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-member/qti-member.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-member",
          "declaration": {
            "name": "QtiMember",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-member/qti-member.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiMember",
          "declaration": {
            "name": "QtiMember",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-member/qti-member.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-expression/qti-multiple/qti-multiple.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiMultiple",
          "members": [
            {
              "kind": "method",
              "name": "getResult",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "ResponseVariable[]"
                }
              },
              "type": {
                "text": "getResult() => ResponseVariable[]"
              }
            }
          ],
          "superclass": {
            "name": "QtiExpression",
            "module": "/src/lib/exports/qti-expression"
          },
          "tagName": "qti-multiple",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-multiple/qti-multiple.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-multiple/qti-multiple.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-multiple",
          "declaration": {
            "name": "QtiMultiple",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-multiple/qti-multiple.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiMultiple",
          "declaration": {
            "name": "QtiMultiple",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-multiple/qti-multiple.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-expression/qti-not/qti-not.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiNot",
          "members": [
            {
              "kind": "method",
              "name": "getResult",
              "privacy": "public",
              "type": {
                "text": "getResult() => void"
              }
            }
          ],
          "superclass": {
            "name": "QtiExpression",
            "module": "/src/lib/exports/qti-expression"
          },
          "tagName": "qti-not",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-not/qti-not.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-not/qti-not.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-not",
          "declaration": {
            "name": "QtiNot",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-not/qti-not.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiNot",
          "declaration": {
            "name": "QtiNot",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-not/qti-not.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-expression/qti-null/qti-null.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiNull",
          "members": [
            {
              "kind": "method",
              "name": "getResult",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "null"
                }
              },
              "type": {
                "text": "getResult() => null"
              }
            }
          ],
          "superclass": {
            "name": "QtiExpression",
            "module": "/src/lib/exports/qti-expression"
          },
          "summary": "The qti-null expression returns the NULL value.",
          "tagName": "qti-null",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-null/qti-null.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-null/qti-null.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-null",
          "declaration": {
            "name": "QtiNull",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-null/qti-null.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiNull",
          "declaration": {
            "name": "QtiNull",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-null/qti-null.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-expression/qti-or/qti-or.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiOr",
          "members": [
            {
              "kind": "method",
              "name": "getResult",
              "privacy": "public",
              "type": {
                "text": "getResult() => void"
              }
            }
          ],
          "superclass": {
            "name": "QtiConditionExpression",
            "module": "/src/lib/exports/qti-condition-expression"
          },
          "tagName": "qti-or",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-or/qti-or.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-or/qti-or.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-or",
          "declaration": {
            "name": "QtiOr",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-or/qti-or.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiOr",
          "declaration": {
            "name": "QtiOr",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-or/qti-or.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-expression/qti-ordered/qti-ordered.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiOrdered",
          "members": [
            {
              "kind": "method",
              "name": "getResult",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "ResponseVariable[]"
                }
              },
              "type": {
                "text": "getResult() => ResponseVariable[]"
              }
            }
          ],
          "superclass": {
            "name": "QtiExpression",
            "module": "/src/lib/exports/qti-expression"
          },
          "tagName": "qti-ordered",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-ordered/qti-ordered.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-ordered/qti-ordered.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-ordered",
          "declaration": {
            "name": "QtiOrdered",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-ordered/qti-ordered.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiOrdered",
          "declaration": {
            "name": "QtiOrdered",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-ordered/qti-ordered.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-expression/qti-power/qti-power.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiPower",
          "members": [
            {
              "kind": "method",
              "name": "getResult",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "number | null"
                }
              },
              "type": {
                "text": "getResult() => number | null"
              }
            }
          ],
          "superclass": {
            "name": "QtiExpression",
            "module": "/src/lib/exports/qti-expression"
          },
          "summary": "The qti-power operator raises the first expression to the power of the second.",
          "tagName": "qti-power",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-power/qti-power.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-power/qti-power.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-power",
          "declaration": {
            "name": "QtiPower",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-power/qti-power.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiPower",
          "declaration": {
            "name": "QtiPower",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-power/qti-power.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-expression/qti-printed-variable/qti-printed-variable.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiPrintedVariable",
          "members": [
            {
              "kind": "method",
              "name": "calculate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "VariableDeclaration<string | string[]>"
                }
              },
              "type": {
                "text": "calculate() => VariableDeclaration<string | string[]>"
              }
            },
            {
              "kind": "field",
              "name": "context",
              "type": {
                "text": "ItemContext | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "attribute": "identifier"
            }
          ],
          "attributes": [
            {
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "fieldName": "identifier"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "qti-printed-variable",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-printed-variable/qti-printed-variable.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-printed-variable/qti-printed-variable.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-printed-variable",
          "declaration": {
            "name": "QtiPrintedVariable",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-printed-variable/qti-printed-variable.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiPrintedVariable",
          "declaration": {
            "name": "QtiPrintedVariable",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-printed-variable/qti-printed-variable.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-expression/qti-product/qti-product.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiProduct",
          "members": [
            {
              "kind": "method",
              "name": "getResult",
              "privacy": "public",
              "type": {
                "text": "getResult() => void"
              }
            }
          ],
          "superclass": {
            "name": "QtiExpression",
            "module": "/src/lib/exports/qti-expression"
          },
          "tagName": "qti-product",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-product/qti-product.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-product/qti-product.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-product",
          "declaration": {
            "name": "QtiProduct",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-product/qti-product.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiProduct",
          "declaration": {
            "name": "QtiProduct",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-product/qti-product.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-expression/qti-random-integer/qti-random-integer.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiRandomInteger",
          "members": [
            {
              "kind": "method",
              "name": "getPossibleValues",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "number[]"
                }
              },
              "description": "Get all possible values for testing purposes",
              "type": {
                "text": "getPossibleValues() => number[]"
              }
            },
            {
              "kind": "method",
              "name": "getResult",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "type": {
                "text": "getResult() => number"
              }
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "number"
              },
              "default": "10",
              "attribute": "max"
            },
            {
              "kind": "field",
              "name": "min",
              "type": {
                "text": "number"
              },
              "default": "0",
              "attribute": "min"
            },
            {
              "kind": "field",
              "name": "step",
              "type": {
                "text": "number"
              },
              "default": "1",
              "attribute": "step"
            }
          ],
          "attributes": [
            {
              "name": "max",
              "type": {
                "text": "number"
              },
              "default": "10",
              "fieldName": "max"
            },
            {
              "name": "min",
              "type": {
                "text": "number"
              },
              "default": "0",
              "fieldName": "min"
            },
            {
              "name": "step",
              "type": {
                "text": "number"
              },
              "default": "1",
              "fieldName": "step"
            }
          ],
          "superclass": {
            "name": "QtiExpression",
            "module": "/src/lib/exports/qti-expression"
          },
          "summary": "The qti-random-integer operator selects a random integer from a specified range.",
          "tagName": "qti-random-integer",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-random-integer/qti-random-integer.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-random-integer/qti-random-integer.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-random-integer",
          "declaration": {
            "name": "QtiRandomInteger",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-random-integer/qti-random-integer.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiRandomInteger",
          "declaration": {
            "name": "QtiRandomInteger",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-random-integer/qti-random-integer.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-expression/qti-random/qti-random.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiRandom",
          "members": [
            {
              "kind": "method",
              "name": "getResult",
              "privacy": "public",
              "type": {
                "text": "getResult() => void"
              }
            }
          ],
          "superclass": {
            "name": "QtiExpression",
            "module": "/src/lib/exports/qti-expression"
          },
          "tagName": "qti-random",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-random/qti-random.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-random/qti-random.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-random",
          "declaration": {
            "name": "QtiRandom",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-random/qti-random.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiRandom",
          "declaration": {
            "name": "QtiRandom",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-random/qti-random.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-expression/qti-round-to/qti-round-to.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiRoundTo",
          "members": [
            {
              "kind": "method",
              "name": "_roundToDecimalPlaces",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "decimalPlaces",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "description": "Round to specified number of decimal places"
            },
            {
              "kind": "method",
              "name": "_roundToSignificantFigures",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "significantFigures",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "description": "Round to specified number of significant figures"
            },
            {
              "kind": "field",
              "name": "figures",
              "type": {
                "text": "number"
              },
              "default": "3",
              "attribute": "figures"
            },
            {
              "kind": "method",
              "name": "getResult",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "number | null"
                }
              },
              "type": {
                "text": "getResult() => number | null"
              }
            },
            {
              "kind": "field",
              "name": "roundingMode",
              "type": {
                "text": "'decimalPlaces' | 'significantFigures'"
              },
              "default": "'significantFigures'",
              "attribute": "rounding-mode"
            }
          ],
          "attributes": [
            {
              "name": "figures",
              "type": {
                "text": "number"
              },
              "default": "3",
              "fieldName": "figures"
            },
            {
              "name": "rounding-mode",
              "type": {
                "text": "'decimalPlaces' | 'significantFigures'"
              },
              "default": "'significantFigures'",
              "fieldName": "roundingMode"
            }
          ],
          "superclass": {
            "name": "QtiExpression",
            "module": "/src/lib/exports/qti-expression"
          },
          "summary": "The qti-round-to operator rounds a numerical value to specified precision.",
          "tagName": "qti-round-to",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-round-to/qti-round-to.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-round-to/qti-round-to.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-round-to",
          "declaration": {
            "name": "QtiRoundTo",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-round-to/qti-round-to.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiRoundTo",
          "declaration": {
            "name": "QtiRoundTo",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-round-to/qti-round-to.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-expression/qti-round/qti-round.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiRound",
          "members": [
            {
              "kind": "method",
              "name": "getResult",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "number | null"
                }
              },
              "type": {
                "text": "getResult() => number | null"
              }
            }
          ],
          "superclass": {
            "name": "QtiExpression",
            "module": "/src/lib/exports/qti-expression"
          },
          "summary": "The qti-round operator rounds a numerical value to the nearest integer.",
          "tagName": "qti-round",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-round/qti-round.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-round/qti-round.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-round",
          "declaration": {
            "name": "QtiRound",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-round/qti-round.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiRound",
          "declaration": {
            "name": "QtiRound",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-round/qti-round.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-expression/qti-string-match/qti-string-match.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiStringMatch",
          "members": [
            {
              "kind": "field",
              "name": "caseSensitive",
              "type": {
                "text": "string"
              },
              "default": "'true'",
              "attribute": "case-sensitive"
            },
            {
              "kind": "method",
              "name": "getResult",
              "privacy": "public",
              "type": {
                "text": "getResult() => void"
              }
            }
          ],
          "attributes": [
            {
              "name": "case-sensitive",
              "type": {
                "text": "string"
              },
              "default": "'true'",
              "fieldName": "caseSensitive"
            }
          ],
          "superclass": {
            "name": "QtiExpression",
            "module": "/src/lib/exports/qti-expression"
          },
          "tagName": "qti-string-match",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-string-match/qti-string-match.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-string-match/qti-string-match.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-string-match",
          "declaration": {
            "name": "QtiStringMatch",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-string-match/qti-string-match.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiStringMatch",
          "declaration": {
            "name": "QtiStringMatch",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-string-match/qti-string-match.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-expression/qti-subtract/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-subtract"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "qti-subtract",
          "declaration": {
            "name": "QtiSubtract",
            "module": "/src/lib/qti-components/qti-response-processing/qti-expression/qti-subtract/qti-subtract"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-expression/qti-subtract/qti-subtract.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiSubtract",
          "members": [
            {
              "kind": "method",
              "name": "calculateChildren",
              "privacy": "public",
              "parameters": [
                {
                  "name": "children",
                  "type": {
                    "text": "Array<MockQtiExpression<any>>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "qtiSubtractMixin",
                "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-subtract/qti-subtract.ts"
              },
              "type": {
                "text": "calculateChildren(children: Array<MockQtiExpression<any>>) => void"
              }
            },
            {
              "kind": "method",
              "name": "getResult",
              "privacy": "public",
              "type": {
                "text": "getResult() => void"
              }
            }
          ],
          "mixins": [
            {
              "name": "qtiSubtractMixin",
              "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-subtract/qti-subtract.ts"
            }
          ],
          "superclass": {
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-subtract/qti-subtract.ts"
          },
          "tagName": "qti-subtract",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-subtract/qti-subtract.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-subtract/index.ts"
        },
        {
          "kind": "mixin",
          "description": "",
          "name": "qtiSubtractMixin",
          "members": [
            {
              "kind": "method",
              "name": "calculateChildren",
              "privacy": "public",
              "parameters": [
                {
                  "name": "children",
                  "type": {
                    "text": "Array<MockQtiExpression<any>>"
                  }
                }
              ]
            }
          ],
          "parameters": [
            {
              "name": "Base",
              "type": {
                "text": "TBase"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "QtiSubtract",
          "declaration": {
            "name": "QtiSubtract",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-subtract/qti-subtract.ts"
          }
        },
        {
          "kind": "js",
          "name": "qtiSubtractMixin",
          "declaration": {
            "name": "qtiSubtractMixin",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-subtract/qti-subtract.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-expression/qti-sum/qti-sum.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiSum",
          "members": [
            {
              "kind": "field",
              "name": "_expression",
              "type": {
                "text": "QtiSumExpression"
              },
              "privacy": "private",
              "default": "new QtiSumExpression(Array.from(this.children as unknown as QtiExpressionBase<number>[]))"
            },
            {
              "kind": "method",
              "name": "getResult",
              "privacy": "public",
              "type": {
                "text": "getResult() => void"
              }
            }
          ],
          "superclass": {
            "name": "QtiExpression",
            "module": "/src/lib/exports/qti-expression"
          },
          "tagName": "qti-sum",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-sum/qti-sum.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-sum/qti-sum.ts"
        },
        {
          "kind": "class",
          "description": "",
          "name": "QtiSumExpression",
          "members": [
            {
              "kind": "method",
              "name": "calculate",
              "privacy": "public"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-sum",
          "declaration": {
            "name": "QtiSum",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-sum/qti-sum.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiSum",
          "declaration": {
            "name": "QtiSum",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-sum/qti-sum.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiSumExpression",
          "declaration": {
            "name": "QtiSumExpression",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-sum/qti-sum.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-expression/qti-variable/qti-variable.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiVariable",
          "members": [
            {
              "kind": "method",
              "name": "getResult",
              "privacy": "public",
              "type": {
                "text": "getResult() => void"
              }
            }
          ],
          "superclass": {
            "name": "QtiExpression",
            "module": "/src/lib/exports/qti-expression"
          },
          "tagName": "qti-variable",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-variable/qti-variable.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-expression/qti-variable/qti-variable.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-variable",
          "declaration": {
            "name": "QtiVariable",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-variable/qti-variable.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiVariable",
          "declaration": {
            "name": "QtiVariable",
            "module": "src/lib/qti-components/qti-response-processing/qti-expression/qti-variable/qti-variable.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-response-else/qti-response-else.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiResponseElse",
          "members": [
            {
              "kind": "method",
              "name": "calculate",
              "privacy": "public",
              "type": {
                "text": "calculate() => void"
              }
            },
            {
              "kind": "method",
              "name": "getSubRules",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "QtiRule[]"
                }
              },
              "type": {
                "text": "getSubRules() => QtiRule[]"
              }
            },
            {
              "kind": "method",
              "name": "process",
              "privacy": "public",
              "type": {
                "text": "process() => void"
              }
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "qti-response-else",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-response-else/qti-response-else.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-response-else/qti-response-else.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-response-else",
          "declaration": {
            "name": "QtiResponseElse",
            "module": "src/lib/qti-components/qti-response-processing/qti-response-else/qti-response-else.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiResponseElse",
          "declaration": {
            "name": "QtiResponseElse",
            "module": "src/lib/qti-components/qti-response-processing/qti-response-else/qti-response-else.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-response-else/qti-response-if/qti-response-else-if/qti-response-else-if.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiResponseElseIf",
          "members": [
            {
              "kind": "method",
              "name": "calculate",
              "privacy": "public",
              "inheritedFrom": {
                "name": "QtiResponseElse",
                "module": "src/lib/qti-components/qti-response-processing/qti-response-else/qti-response-else.ts"
              },
              "type": {
                "text": "calculate() => void"
              }
            },
            {
              "kind": "method",
              "name": "getSubRules",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "QtiRule[]"
                }
              },
              "inheritedFrom": {
                "name": "QtiResponseElse",
                "module": "src/lib/qti-components/qti-response-processing/qti-response-else/qti-response-else.ts"
              },
              "type": {
                "text": "getSubRules() => QtiRule[]"
              }
            },
            {
              "kind": "method",
              "name": "process",
              "privacy": "public",
              "inheritedFrom": {
                "name": "QtiResponseElse",
                "module": "src/lib/qti-components/qti-response-processing/qti-response-else/qti-response-else.ts"
              },
              "type": {
                "text": "process() => void"
              }
            }
          ],
          "superclass": {
            "name": "QtiResponseIf",
            "module": "/src/lib/qti-components/qti-response-processing/qti-response-else/qti-response-if/qti-response-if"
          },
          "tagName": "qti-response-else-if",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-response-else/qti-response-if/qti-response-else-if/qti-response-else-if.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-response-else/qti-response-if/qti-response-else-if/qti-response-else-if.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-response-else-if",
          "declaration": {
            "name": "QtiResponseElseIf",
            "module": "src/lib/qti-components/qti-response-processing/qti-response-else/qti-response-if/qti-response-else-if/qti-response-else-if.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiResponseElseIf",
          "declaration": {
            "name": "QtiResponseElseIf",
            "module": "src/lib/qti-components/qti-response-processing/qti-response-else/qti-response-if/qti-response-else-if/qti-response-else-if.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-response-else/qti-response-if/qti-response-if.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiResponseIf",
          "members": [
            {
              "kind": "method",
              "name": "calculate",
              "privacy": "public",
              "inheritedFrom": {
                "name": "QtiResponseElse",
                "module": "src/lib/qti-components/qti-response-processing/qti-response-else/qti-response-else.ts"
              },
              "type": {
                "text": "calculate() => void"
              }
            },
            {
              "kind": "method",
              "name": "getSubRules",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "QtiRule[]"
                }
              },
              "inheritedFrom": {
                "name": "QtiResponseElse",
                "module": "src/lib/qti-components/qti-response-processing/qti-response-else/qti-response-else.ts"
              },
              "type": {
                "text": "getSubRules() => QtiRule[]"
              }
            },
            {
              "kind": "method",
              "name": "process",
              "privacy": "public",
              "inheritedFrom": {
                "name": "QtiResponseElse",
                "module": "src/lib/qti-components/qti-response-processing/qti-response-else/qti-response-else.ts"
              },
              "type": {
                "text": "process() => void"
              }
            }
          ],
          "superclass": {
            "name": "QtiResponseElse",
            "module": "/src/lib/qti-components/qti-response-processing/qti-response-else/qti-response-else"
          },
          "tagName": "qti-response-if",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-response-else/qti-response-if/qti-response-if.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-response-else/qti-response-if/qti-response-if.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-response-if",
          "declaration": {
            "name": "QtiResponseIf",
            "module": "src/lib/qti-components/qti-response-processing/qti-response-else/qti-response-if/qti-response-if.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiResponseIf",
          "declaration": {
            "name": "QtiResponseIf",
            "module": "src/lib/qti-components/qti-response-processing/qti-response-else/qti-response-if/qti-response-if.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-response-processing/qti-response-processing.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiResponseProcessing",
          "members": [
            {
              "kind": "method",
              "name": "fragmentFromString",
              "privacy": "private",
              "parameters": [
                {
                  "name": "strHTML",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "process",
              "privacy": "public",
              "type": {
                "text": "process() => void"
              }
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "qti-response-processing",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-response-processing/qti-response-processing.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-response-processing/qti-response-processing.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-response-processing",
          "declaration": {
            "name": "QtiResponseProcessing",
            "module": "src/lib/qti-components/qti-response-processing/qti-response-processing/qti-response-processing.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiResponseProcessing",
          "declaration": {
            "name": "QtiResponseProcessing",
            "module": "src/lib/qti-components/qti-response-processing/qti-response-processing/qti-response-processing.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-rule/qti-lookup-outcome-value/qti-lookup-outcome-value.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "The lookupOutcomeValue rule sets the value of an outcome variable to the value obtained\nby looking up the value of the associated expression in the lookupTable associated\nwith the outcome's declaration.",
          "name": "QtiLookupOutcomeValue",
          "members": [
            {
              "kind": "field",
              "name": "childExpression",
              "type": {
                "text": "QtiExpression<string>"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "context",
              "type": {
                "text": "ItemContext | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "attribute": "identifier"
            },
            {
              "kind": "method",
              "name": "process",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "inheritedFrom": {
                "name": "QtiRule",
                "module": "src/lib/qti-components/qti-response-processing/qti-rule/qti-rule.ts"
              },
              "type": {
                "text": "process() => number"
              }
            }
          ],
          "events": [
            {
              "name": "qti-set-outcome-value",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "fieldName": "identifier"
            }
          ],
          "superclass": {
            "name": "QtiRule",
            "module": "/src/lib/qti-components/qti-response-processing/qti-rule/qti-rule"
          },
          "tagName": "qti-lookup-outcome-value",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-rule/qti-lookup-outcome-value/qti-lookup-outcome-value.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-rule/qti-lookup-outcome-value/qti-lookup-outcome-value.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-lookup-outcome-value",
          "declaration": {
            "name": "QtiLookupOutcomeValue",
            "module": "src/lib/qti-components/qti-response-processing/qti-rule/qti-lookup-outcome-value/qti-lookup-outcome-value.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiLookupOutcomeValue",
          "declaration": {
            "name": "QtiLookupOutcomeValue",
            "module": "src/lib/qti-components/qti-response-processing/qti-rule/qti-lookup-outcome-value/qti-lookup-outcome-value.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-rule/qti-response-condition/qti-response-condition.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiResponseCondition",
          "members": [
            {
              "kind": "method",
              "name": "process",
              "privacy": "public",
              "inheritedFrom": {
                "name": "QtiRule",
                "module": "src/lib/qti-components/qti-response-processing/qti-rule/qti-rule.ts"
              },
              "type": {
                "text": "process() => void"
              }
            }
          ],
          "superclass": {
            "name": "QtiRule",
            "module": "/src/lib/qti-components/qti-response-processing/qti-rule/qti-rule"
          },
          "tagName": "qti-response-condition",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-rule/qti-response-condition/qti-response-condition.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-rule/qti-response-condition/qti-response-condition.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-response-condition",
          "declaration": {
            "name": "QtiResponseCondition",
            "module": "src/lib/qti-components/qti-response-processing/qti-rule/qti-response-condition/qti-response-condition.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiResponseCondition",
          "declaration": {
            "name": "QtiResponseCondition",
            "module": "src/lib/qti-components/qti-response-processing/qti-rule/qti-response-condition/qti-response-condition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-rule/qti-rule.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiRule",
          "members": [
            {
              "kind": "method",
              "name": "process",
              "privacy": "public",
              "type": {
                "text": "process() => void"
              }
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "qti-rule",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-rule/qti-rule.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-rule/qti-rule.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-rule",
          "declaration": {
            "name": "QtiRule",
            "module": "src/lib/qti-components/qti-response-processing/qti-rule/qti-rule.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiRule",
          "declaration": {
            "name": "QtiRule",
            "module": "src/lib/qti-components/qti-response-processing/qti-rule/qti-rule.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/qti-rule/qti-set-outcome-value/qti-set-outcome-value.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Web component that processes `setOutcomeValue` in QTI.",
          "name": "QtiSetOutcomeValue",
          "members": [
            {
              "kind": "method",
              "name": "formatValue",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string | string[] | null"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string | string[] | null"
                  }
                }
              ],
              "description": "Formats the computed value before dispatching.\nEnsures numbers are converted to a universal format."
            },
            {
              "kind": "method",
              "name": "process",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Processes the QTI rule and dispatches a custom event with the computed outcome value.",
              "inheritedFrom": {
                "name": "QtiRule",
                "module": "src/lib/qti-components/qti-response-processing/qti-rule/qti-rule.ts"
              },
              "type": {
                "text": "process() => void"
              }
            }
          ],
          "events": [
            {
              "name": "qti-set-outcome-value",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "superclass": {
            "name": "QtiRule",
            "module": "/src/lib/qti-components/qti-response-processing/qti-rule/qti-rule"
          },
          "tagName": "qti-set-outcome-value",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-response-processing/qti-rule/qti-set-outcome-value/qti-set-outcome-value.ts",
          "definitionPath": "src/lib/qti-components/qti-response-processing/qti-rule/qti-set-outcome-value/qti-set-outcome-value.ts"
        },
        {
          "kind": "class",
          "description": "Encapsulates the logic for processing QTI setOutcomeValue expressions.",
          "name": "QtiSetOutcomeValueRule",
          "members": [
            {
              "kind": "method",
              "name": "process",
              "return": {
                "type": {
                  "text": "string | string[] | null"
                }
              },
              "description": "Evaluates the expression and returns its value."
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-set-outcome-value",
          "declaration": {
            "name": "QtiSetOutcomeValue",
            "module": "src/lib/qti-components/qti-response-processing/qti-rule/qti-set-outcome-value/qti-set-outcome-value.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiSetOutcomeValue",
          "declaration": {
            "name": "QtiSetOutcomeValue",
            "module": "src/lib/qti-components/qti-response-processing/qti-rule/qti-set-outcome-value/qti-set-outcome-value.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiSetOutcomeValueRule",
          "declaration": {
            "name": "QtiSetOutcomeValueRule",
            "module": "src/lib/qti-components/qti-response-processing/qti-rule/qti-set-outcome-value/qti-set-outcome-value.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-response-processing/utilities/scoring-helper.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ScoringHelper",
          "members": [
            {
              "kind": "method",
              "name": "compareSingleValues",
              "privacy": "public",
              "static": true,
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "value1",
                  "type": {
                    "text": "Readonly<string>"
                  }
                },
                {
                  "name": "value2",
                  "type": {
                    "text": "Readonly<string>"
                  }
                },
                {
                  "name": "baseType",
                  "type": {
                    "text": "BaseType"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "isPointInArea",
              "privacy": "public",
              "static": true,
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "point",
                  "type": {
                    "text": "string"
                  },
                  "description": "The point to test, represented as a string \"x y\" (e.g., \"102 113\")."
                },
                {
                  "name": "areaKey",
                  "type": {
                    "text": "string"
                  },
                  "description": "The area definition, including shape and coordinates (e.g., \"circle,102,113,16\")."
                },
                {
                  "name": "baseType",
                  "type": {
                    "text": "string"
                  },
                  "description": "The base type of the response, must be \"point\" for this method to proceed."
                }
              ],
              "description": "Checks if a given point is within a specified area."
            },
            {
              "kind": "method",
              "name": "isPointInPolygon",
              "static": true,
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "point",
                  "type": {
                    "text": "{ x: number; y: number }"
                  },
                  "description": "The point to test."
                },
                {
                  "name": "vertices",
                  "type": {
                    "text": "{ x: number; y: number }[]"
                  },
                  "description": "The vertices of the polygon in order (array of {x, y} objects)."
                }
              ],
              "description": "Checks if a point is inside a polygon using the ray-casting algorithm."
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ScoringHelper",
          "declaration": {
            "name": "ScoringHelper",
            "module": "src/lib/qti-components/qti-response-processing/utilities/scoring-helper.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-rubric-block/qti-content-body.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiContentBody",
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "qti-content-body",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-rubric-block/qti-content-body.ts",
          "definitionPath": "src/lib/qti-components/qti-rubric-block/qti-content-body.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-content-body",
          "declaration": {
            "name": "QtiContentBody",
            "module": "src/lib/qti-components/qti-rubric-block/qti-content-body.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiContentBody",
          "declaration": {
            "name": "QtiContentBody",
            "module": "src/lib/qti-components/qti-rubric-block/qti-content-body.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-rubric-block/qti-rubric-block.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiRubricBlock",
          "members": [
            {
              "kind": "field",
              "name": "classNames",
              "attribute": "class"
            },
            {
              "kind": "method",
              "name": "handleclassNamesChange",
              "type": {
                "text": "handleclassNamesChange() => void"
              }
            },
            {
              "kind": "field",
              "name": "id",
              "attribute": "id"
            },
            {
              "kind": "field",
              "name": "use",
              "type": {
                "text": "'instructions' | 'scoring' | 'navigation'"
              },
              "attribute": "use"
            },
            {
              "kind": "field",
              "name": "view",
              "type": {
                "text": "'author' | 'candidate' | 'proctor' | 'scorer' | 'testConstructor' | 'tutor'"
              },
              "attribute": "view"
            }
          ],
          "attributes": [
            {
              "name": "class",
              "fieldName": "classNames"
            },
            {
              "name": "id",
              "fieldName": "id"
            },
            {
              "name": "use",
              "type": {
                "text": "'instructions' | 'scoring' | 'navigation'"
              },
              "fieldName": "use"
            },
            {
              "name": "view",
              "type": {
                "text": "'author' | 'candidate' | 'proctor' | 'scorer' | 'testConstructor' | 'tutor'"
              },
              "fieldName": "view"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "qti-rubric-block",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-rubric-block/qti-rubric-block.ts",
          "definitionPath": "src/lib/qti-components/qti-rubric-block/qti-rubric-block.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-rubric-block",
          "declaration": {
            "name": "QtiRubricBlock",
            "module": "src/lib/qti-components/qti-rubric-block/qti-rubric-block.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiRubricBlock",
          "declaration": {
            "name": "QtiRubricBlock",
            "module": "src/lib/qti-components/qti-rubric-block/qti-rubric-block.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-stylesheet/qti-stylesheet.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiStylesheet",
          "members": [
            {
              "kind": "method",
              "name": "minifyCss",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "cssContent",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "styleElement",
              "type": {
                "text": "HTMLStyleElement | null"
              },
              "privacy": "private",
              "default": "null"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "qti-stylesheet",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-stylesheet/qti-stylesheet.ts",
          "definitionPath": "src/lib/qti-components/qti-stylesheet/qti-stylesheet.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-stylesheet",
          "declaration": {
            "name": "QtiStylesheet",
            "module": "src/lib/qti-components/qti-stylesheet/qti-stylesheet.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiStylesheet",
          "declaration": {
            "name": "QtiStylesheet",
            "module": "src/lib/qti-components/qti-stylesheet/qti-stylesheet.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-template-processing/qti-template-contraint/qti-template-constraint.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiTemplateConstraint",
          "members": [
            {
              "kind": "method",
              "name": "calculate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "description": "Evaluates the constraint condition",
              "type": {
                "text": "calculate() => void"
              }
            },
            {
              "kind": "method",
              "name": "getSubRules",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "QtiRule[]"
                }
              },
              "description": "Template constraints don't have sub-rules like conditions",
              "type": {
                "text": "getSubRules() => QtiRule[]"
              }
            },
            {
              "kind": "method",
              "name": "process",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "description": "Process the template constraint",
              "type": {
                "text": "process() => void"
              }
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "summary": "The qti-template-constraint element is a processing rule available only in Template Processing.",
          "tagName": "qti-template-constraint",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-template-processing/qti-template-contraint/qti-template-constraint.ts",
          "definitionPath": "src/lib/qti-components/qti-template-processing/qti-template-contraint/qti-template-constraint.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-template-constraint",
          "declaration": {
            "name": "QtiTemplateConstraint",
            "module": "src/lib/qti-components/qti-template-processing/qti-template-contraint/qti-template-constraint.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiTemplateConstraint",
          "declaration": {
            "name": "QtiTemplateConstraint",
            "module": "src/lib/qti-components/qti-template-processing/qti-template-contraint/qti-template-constraint.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-template-processing/qti-template-declaration/qti-template-declaration.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiTemplateDeclaration",
          "members": [
            {
              "kind": "method",
              "name": "_convertValue",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "any"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "description": "Convert string value based on base-type"
            },
            {
              "kind": "field",
              "name": "_defaultValue",
              "type": {
                "text": "any"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "method",
              "name": "_processDefaultValue",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Process qti-default-value to extract the default value"
            },
            {
              "kind": "method",
              "name": "_registerTemplateVariable",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Register this template variable with the assessment item"
            },
            {
              "kind": "field",
              "name": "baseType",
              "type": {
                "text": "BaseType"
              },
              "default": "'string'",
              "attribute": "base-type",
              "parsedType": {
                "text": "'string' | 'boolean' | 'directedPair' | 'duration' | 'float' | 'integer' | 'identifier' | 'pair' | 'record'"
              }
            },
            {
              "kind": "field",
              "name": "cardinality",
              "type": {
                "text": "'single' | 'multiple' | 'ordered' | 'record'"
              },
              "default": "'single'",
              "attribute": "cardinality"
            },
            {
              "kind": "method",
              "name": "getTemplateVariable",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateVariable"
                }
              },
              "description": "Get the template variable definition",
              "type": {
                "text": "getTemplateVariable() => TemplateVariable"
              }
            },
            {
              "kind": "field",
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "identifier"
            },
            {
              "kind": "field",
              "name": "mathVariable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "math-variable"
            },
            {
              "kind": "field",
              "name": "paramVariable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "param-variable"
            }
          ],
          "events": [
            {
              "name": "qti-register-variable",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "base-type",
              "type": {
                "text": "BaseType"
              },
              "default": "'string'",
              "fieldName": "baseType",
              "parsedType": {
                "text": "'string' | 'boolean' | 'directedPair' | 'duration' | 'float' | 'integer' | 'identifier' | 'pair' | 'record'"
              }
            },
            {
              "name": "cardinality",
              "type": {
                "text": "'single' | 'multiple' | 'ordered' | 'record'"
              },
              "default": "'single'",
              "fieldName": "cardinality"
            },
            {
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "identifier"
            },
            {
              "name": "math-variable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "mathVariable"
            },
            {
              "name": "param-variable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "paramVariable"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "summary": "The qti-template-declaration element declares template variables for item cloning.",
          "tagName": "qti-template-declaration",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-template-processing/qti-template-declaration/qti-template-declaration.ts",
          "definitionPath": "src/lib/qti-components/qti-template-processing/qti-template-declaration/qti-template-declaration.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-template-declaration",
          "declaration": {
            "name": "QtiTemplateDeclaration",
            "module": "src/lib/qti-components/qti-template-processing/qti-template-declaration/qti-template-declaration.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiTemplateDeclaration",
          "declaration": {
            "name": "QtiTemplateDeclaration",
            "module": "src/lib/qti-components/qti-template-processing/qti-template-declaration/qti-template-declaration.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-template-processing/qti-template-declaration/qti-template-processing.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiTemplateProcessing",
          "members": [
            {
              "kind": "field",
              "name": "_maxIterations",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "100"
            },
            {
              "kind": "method",
              "name": "process",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Process template rules to set template variable values",
              "type": {
                "text": "process() => void"
              }
            }
          ],
          "events": [
            {
              "name": "qti-template-processing-complete",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "summary": "The qti-template-processing element contains template processing rules.",
          "tagName": "qti-template-processing",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-template-processing/qti-template-declaration/qti-template-processing.ts",
          "definitionPath": "src/lib/qti-components/qti-template-processing/qti-template-declaration/qti-template-processing.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-template-processing",
          "declaration": {
            "name": "QtiTemplateProcessing",
            "module": "src/lib/qti-components/qti-template-processing/qti-template-declaration/qti-template-processing.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiTemplateProcessing",
          "declaration": {
            "name": "QtiTemplateProcessing",
            "module": "src/lib/qti-components/qti-template-processing/qti-template-declaration/qti-template-processing.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-variable-declaration/qti-outcome-declaration/qti-outcome-declaration.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiOutcomeDeclaration",
          "members": [
            {
              "kind": "field",
              "name": "baseType",
              "type": {
                "text": "BaseType"
              },
              "attribute": "base-type",
              "parsedType": {
                "text": "'string' | 'boolean' | 'directedPair' | 'duration' | 'float' | 'integer' | 'identifier' | 'pair' | 'record'"
              }
            },
            {
              "kind": "field",
              "name": "cardinality",
              "type": {
                "text": "Cardinality"
              },
              "attribute": "cardinality",
              "parsedType": {
                "text": "'record' | 'multiple' | 'ordered' | 'single'"
              }
            },
            {
              "kind": "method",
              "name": "defaultValues",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "cardinality",
                  "type": {
                    "text": "Cardinality"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "QtiVariableDeclaration",
                "module": "src/lib/qti-components/qti-variable-declaration/qti-variable-declaration.ts"
              }
            },
            {
              "kind": "field",
              "name": "externalScored",
              "type": {
                "text": "'human' | 'externalMachine' | null"
              },
              "default": "null",
              "attribute": "external-scored"
            },
            {
              "kind": "field",
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "attribute": "identifier"
            },
            {
              "kind": "field",
              "name": "interpolationTable",
              "type": {
                "text": "Map<number, number> | null"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "itemContext",
              "type": {
                "text": "ItemContext | undefined"
              },
              "privacy": "public"
            }
          ],
          "events": [
            {
              "name": "qti-register-variable",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "base-type",
              "type": {
                "text": "BaseType"
              },
              "fieldName": "baseType",
              "parsedType": {
                "text": "'string' | 'boolean' | 'directedPair' | 'duration' | 'float' | 'integer' | 'identifier' | 'pair' | 'record'"
              }
            },
            {
              "name": "cardinality",
              "type": {
                "text": "Cardinality"
              },
              "fieldName": "cardinality",
              "parsedType": {
                "text": "'record' | 'multiple' | 'ordered' | 'single'"
              }
            },
            {
              "name": "external-scored",
              "type": {
                "text": "'human' | 'externalMachine' | null"
              },
              "default": "null",
              "fieldName": "externalScored"
            },
            {
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "fieldName": "identifier"
            }
          ],
          "superclass": {
            "name": "QtiVariableDeclaration",
            "module": "/src/lib/qti-components/qti-variable-declaration/qti-variable-declaration"
          },
          "tagName": "qti-outcome-declaration",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-variable-declaration/qti-outcome-declaration/qti-outcome-declaration.ts",
          "definitionPath": "src/lib/qti-components/qti-variable-declaration/qti-outcome-declaration/qti-outcome-declaration.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-outcome-declaration",
          "declaration": {
            "name": "QtiOutcomeDeclaration",
            "module": "src/lib/qti-components/qti-variable-declaration/qti-outcome-declaration/qti-outcome-declaration.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiOutcomeDeclaration",
          "declaration": {
            "name": "QtiOutcomeDeclaration",
            "module": "src/lib/qti-components/qti-variable-declaration/qti-outcome-declaration/qti-outcome-declaration.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-variable-declaration/qti-response-declaration/qti-response-declaration.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiResponseDeclaration",
          "members": [
            {
              "kind": "field",
              "name": "areaMapping",
              "type": {
                "text": "QtiAreaMapping"
              },
              "privacy": "private",
              "readonly": true,
              "parsedType": {
                "text": "{ defaultValue: number, lowerBound: number, upperBound: number, areaMapEntries: QtiAreaMapEntry[] }"
              }
            },
            {
              "kind": "field",
              "name": "baseType",
              "type": {
                "text": "BaseType"
              },
              "attribute": "base-type",
              "parsedType": {
                "text": "'string' | 'boolean' | 'directedPair' | 'duration' | 'float' | 'integer' | 'identifier' | 'pair' | 'record'"
              }
            },
            {
              "kind": "field",
              "name": "cardinality",
              "type": {
                "text": "Cardinality"
              },
              "attribute": "cardinality",
              "parsedType": {
                "text": "'record' | 'multiple' | 'ordered' | 'single'"
              }
            },
            {
              "kind": "field",
              "name": "correctResponse",
              "type": {
                "text": "string | string[]"
              },
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "defaultValues",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "cardinality",
                  "type": {
                    "text": "Cardinality"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "QtiVariableDeclaration",
                "module": "src/lib/qti-components/qti-variable-declaration/qti-variable-declaration.ts"
              }
            },
            {
              "kind": "field",
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "attribute": "identifier"
            },
            {
              "kind": "field",
              "name": "itemContext",
              "type": {
                "text": "ItemContext | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "mapping",
              "type": {
                "text": "QtiMapping"
              },
              "privacy": "private",
              "readonly": true,
              "parsedType": {
                "text": "{ defaultValue: number, lowerBound: number, upperBound: number, mapEntries: QtiMapEntry[] }"
              }
            }
          ],
          "events": [
            {
              "name": "qti-register-variable",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "base-type",
              "type": {
                "text": "BaseType"
              },
              "fieldName": "baseType",
              "parsedType": {
                "text": "'string' | 'boolean' | 'directedPair' | 'duration' | 'float' | 'integer' | 'identifier' | 'pair' | 'record'"
              }
            },
            {
              "name": "cardinality",
              "type": {
                "text": "Cardinality"
              },
              "fieldName": "cardinality",
              "parsedType": {
                "text": "'record' | 'multiple' | 'ordered' | 'single'"
              }
            },
            {
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "fieldName": "identifier"
            }
          ],
          "superclass": {
            "name": "QtiVariableDeclaration",
            "module": "/src/lib/qti-components/qti-variable-declaration/qti-variable-declaration"
          },
          "tagName": "qti-response-declaration",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-variable-declaration/qti-response-declaration/qti-response-declaration.ts",
          "definitionPath": "src/lib/qti-components/qti-variable-declaration/qti-response-declaration/qti-response-declaration.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-response-declaration",
          "declaration": {
            "name": "QtiResponseDeclaration",
            "module": "src/lib/qti-components/qti-variable-declaration/qti-response-declaration/qti-response-declaration.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiResponseDeclaration",
          "declaration": {
            "name": "QtiResponseDeclaration",
            "module": "src/lib/qti-components/qti-variable-declaration/qti-response-declaration/qti-response-declaration.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-components/qti-variable-declaration/qti-variable-declaration.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiVariableDeclaration",
          "members": [
            {
              "kind": "method",
              "name": "defaultValues",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "cardinality",
                  "type": {
                    "text": "Cardinality"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "qti-variabledeclaration",
          "customElement": true,
          "modulePath": "src/lib/qti-components/qti-variable-declaration/qti-variable-declaration.ts",
          "definitionPath": "src/lib/qti-components/qti-variable-declaration/qti-variable-declaration.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-variabledeclaration",
          "declaration": {
            "name": "QtiVariableDeclaration",
            "module": "src/lib/qti-components/qti-variable-declaration/qti-variable-declaration.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiVariableDeclaration",
          "declaration": {
            "name": "QtiVariableDeclaration",
            "module": "src/lib/qti-components/qti-variable-declaration/qti-variable-declaration.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-item/components/item-container.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "ItemDoc",
          "type": {
            "text": "Story"
          },
          "default": "{ render: (_, { loaded: { itemDoc } }) => { return html` <qti-item> <item-container .itemDoc=${itemDoc}></item-container> </qti-item> `; }, loaders: [ async ({ args }) => { const itemDoc = qtiTransformItem() .load(args['item-url']) .then(api => api.htmlDoc()); return { itemDoc }; } ], play: ItemURL.play, tags: ['!autodocs'] }"
        },
        {
          "kind": "variable",
          "name": "ItemURL",
          "type": {
            "text": "Story"
          },
          "default": "{ render: args => { return html`<qti-item>${template(args)}</qti-item>`; }, play: async ({ canvasElement }) => { const assessmentItem = await getAssessmentItemFromItemContainer(canvasElement); expect(assessmentItem).toBeInTheDocument(); } }"
        },
        {
          "kind": "variable",
          "name": "ItemWithTemplate",
          "type": {
            "text": "Story"
          },
          "default": "{ render: args => { return html` <qti-item> <item-container item-url=${args['item-url']}> <template> <style> qti-simple-choice { border: 2px solid blue; } </style> </template> </item-container> </qti-item> `; }, play: ItemURL.play, tags: ['!autodocs'] }"
        },
        {
          "kind": "variable",
          "name": "ItemWithTemplateScale",
          "type": {
            "text": "Story"
          },
          "default": "{ render: args => { return html` <qti-item> <item-container item-url=${args['item-url']}> <template> <style> qti-assessment-item { padding: 1rem; display: block; aspect-ratio: 4 / 3; width: 800px; border: 2px solid blue; transform: scale(0.5); transform-origin: top left; } </style> </template> </item-container> </qti-item> `; }, play: ItemURL.play, tags: ['!autodocs'] }"
        },
        {
          "kind": "variable",
          "name": "ItemXML",
          "type": {
            "text": "Story"
          },
          "default": "{ render: (_, { loaded: { itemXML } }) => { return html` <qti-item> <item-container .itemXML=${itemXML}></item-container> </qti-item> `; }, loaders: [ async ({ args }) => { const itemXML = await qtiTransformItem() .load(args['item-url']) .then(api => api.xml()); return { itemXML }; } ], play: ItemURL.play, tags: ['!autodocs'] }"
        },
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta<typeof ItemContainer & { 'item-url': string }>"
          },
          "default": "{ component: 'item-container', args: { ...args, 'item-url': 'assets/qti-item/example-choice-item.xml' }, argTypes, parameters: { actions: { handles: events } } // tags: ['autodocs', 'new'] }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/lib/qti-item/components/item-container.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "ItemDoc",
          "declaration": {
            "name": "ItemDoc",
            "module": "src/lib/qti-item/components/item-container.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "ItemURL",
          "declaration": {
            "name": "ItemURL",
            "module": "src/lib/qti-item/components/item-container.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "ItemWithTemplate",
          "declaration": {
            "name": "ItemWithTemplate",
            "module": "src/lib/qti-item/components/item-container.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "ItemWithTemplateScale",
          "declaration": {
            "name": "ItemWithTemplateScale",
            "module": "src/lib/qti-item/components/item-container.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "ItemXML",
          "declaration": {
            "name": "ItemXML",
            "module": "src/lib/qti-item/components/item-container.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-item/components/item-container.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`<item-container>` is a custom element designed for hosting the qti-assessment-item.\nThe `qti-assessment-item` will be placed inside the shadow DOM of this element.\nThe element loads the item from the provided URL and renders it inside the shadow DOM.\n\n### Styling\nAdd a class to the element for styling.\n\n```html\n<qti-item>\n  <item-container class=\"m-4 bg-white\" item-url=\"./path/to/item.xml\"></item-container>\n</qti-item>\n```",
          "name": "ItemContainer",
          "members": [
            {
              "kind": "method",
              "name": "applyStyles",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleItemURLChange",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "handleItemXMLChange",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "initializeTemplateContent",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "itemDoc",
              "type": {
                "text": "DocumentFragment"
              },
              "default": "null",
              "description": "A parsed HTML document"
            },
            {
              "kind": "field",
              "name": "itemURL",
              "type": {
                "text": "string"
              },
              "default": "null",
              "description": "URL of the item to load",
              "attribute": "item-url"
            },
            {
              "kind": "field",
              "name": "itemXML",
              "type": {
                "text": "string"
              },
              "default": "null",
              "description": "The raw XML string"
            },
            {
              "kind": "field",
              "name": "templateContent",
              "type": {
                "text": "null"
              },
              "privacy": "private",
              "default": "null",
              "description": "Template content if provided"
            }
          ],
          "attributes": [
            {
              "name": "item-url",
              "type": {
                "text": "string"
              },
              "default": "null",
              "description": "URL of the item to load",
              "fieldName": "itemURL"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "item-container",
          "customElement": true,
          "modulePath": "src/lib/qti-item/components/item-container.ts",
          "definitionPath": "src/lib/qti-item/components/item-container.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "item-container",
          "declaration": {
            "name": "ItemContainer",
            "module": "src/lib/qti-item/components/item-container.ts"
          }
        },
        {
          "kind": "js",
          "name": "ItemContainer",
          "declaration": {
            "name": "ItemContainer",
            "module": "src/lib/qti-item/components/item-container.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-item/components/item-correct-response-mode.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ItemCorrectResponseMode",
          "members": [
            {
              "kind": "field",
              "name": "_options",
              "type": {
                "text": "object"
              },
              "privacy": "private",
              "default": "{ internal: 'Internal', full: 'Full (copy)' }"
            },
            {
              "kind": "method",
              "name": "_switchMode",
              "privacy": "private",
              "parameters": [
                {
                  "name": "view",
                  "type": {
                    "text": "CorrectResponseMode"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "itemContext",
              "type": {
                "text": "ConfigContext"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "'Correct response mode'",
              "attribute": "label"
            }
          ],
          "events": [
            {
              "name": "item-switch-correct-response-mode",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "'Correct response mode'",
              "fieldName": "label"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "item-correct-response-mode",
          "customElement": true,
          "modulePath": "src/lib/qti-item/components/item-correct-response-mode.ts",
          "definitionPath": "src/lib/qti-item/components/item-correct-response-mode.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "item-correct-response-mode",
          "declaration": {
            "name": "ItemCorrectResponseMode",
            "module": "src/lib/qti-item/components/item-correct-response-mode.ts"
          }
        },
        {
          "kind": "js",
          "name": "ItemCorrectResponseMode",
          "declaration": {
            "name": "ItemCorrectResponseMode",
            "module": "src/lib/qti-item/components/item-correct-response-mode.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-item/components/item-show-candidate-correction.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Default",
          "type": {
            "text": "Story"
          },
          "default": "{ render: args => { return html`<qti-item> <!-- <div style=\"display: flex; flex-direction: column; gap: 1rem;\"> --> <item-container style=\"width: 400px; height: 350px; display: block;\" item-url=${args['item-url'] as string}> <template> <style> qti-assessment-item { padding: 1rem; display: block; aspect-ratio: 4 / 3; width: 800px; border: 2px solid blue; transform: scale(0.5); transform-origin: top left; } </style> </template> </item-container> <item-show-candidate-correction ${spread(args)}></item-show-candidate-correction> <!-- </div> --> </qti-item>`; }, play: async ({ canvasElement, step }) => { // wait for qti-simple-choice to be rendered const canvas = within(canvasElement); // const choices = await canvas.findAllByShadowRole('radio'); const choiceA: QtiSimpleChoice = await canvas.findByShadowText('You must stay with your luggage at all times.'); const choiceB: QtiSimpleChoice = await canvas.findByShadowText('Do not let someone else look after your luggage.'); const choiceC: QtiSimpleChoice = await canvas.findByShadowText('Remember your luggage when you leave.'); const showCorrectButton = canvas.getAllByShadowText(/Show candidate correction/i)[0]; await step('Click on the Show candidate correction button', async () => { await choiceA.click(); await showCorrectButton.click(); await step('Verify candidate correction is applied', async () => { expect(choiceA.internals.states.has('candidate-correct')).toBe(true); expect(choiceB.internals.states.has('candidate-correct')).toBe(false); expect(choiceC.internals.states.has('candidate-correct')).toBe(false); expect(choiceA.internals.states.has('candidate-incorrect')).toBe(false); expect(choiceB.internals.states.has('candidate-incorrect')).toBe(false); expect(choiceC.internals.states.has('candidate-incorrect')).toBe(false); }); await step('Click on the Show Candidate Correction again', async () => { expect(canvas.queryByShadowText(/Show candidate correction/i)).toBeNull(); expect(canvas.getAllByShadowText(/Hide candidate correction/i).length).toBe(1); await showCorrectButton.click(); await choiceA.click(); // Deselect option expect(choiceA.internals.states.has('candidate-correct')).toBe(false); expect(choiceB.internals.states.has('candidate-correct')).toBe(false); expect(choiceC.internals.states.has('candidate-correct')).toBe(false); expect(choiceA.internals.states.has('candidate-incorrect')).toBe(false); expect(choiceB.internals.states.has('candidate-incorrect')).toBe(false); expect(choiceC.internals.states.has('candidate-incorrect')).toBe(false); }); await step('Change answer after showing Candidate Correction', async () => { expect(canvas.getAllByShadowText(/Show candidate correction/i).length).toBe(1); await choiceA.click(); await showCorrectButton.click(); await choiceB.click(); expect(choiceA.internals.states.has('candidate-correct')).toBe(false); expect(choiceB.internals.states.has('candidate-correct')).toBe(false); expect(choiceC.internals.states.has('candidate-correct')).toBe(false); expect(choiceA.internals.states.has('candidate-incorrect')).toBe(false); expect(choiceB.internals.states.has('candidate-incorrect')).toBe(false); expect(choiceC.internals.states.has('candidate-incorrect')).toBe(false); expect(canvas.queryByShadowText(/Hide candidate correction/i)).toBeNull(); await choiceB.click(); // Deselect option }); }); } }"
        },
        {
          "kind": "variable",
          "name": "InlineChoice",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { 'item-url': 'assets/qti-item/example-inline-choice.xml' }, render: args => html` <qti-item> <div> <item-container style=\"display: block; width: 400px; height: 350px;\" item-url=${args['item-url'] as string}> <template> <style> qti-assessment-item { padding: 1rem; display: block; aspect-ratio: 4 / 3; width: 800px; border: 2px solid blue; transform: scale(0.5); transform-origin: top left; } </style> </template> </item-container> <item-show-candidate-correction></item-show-candidate-correction> </div> </qti-item> `, play: async ({ canvasElement, step }) => { const canvas = within(canvasElement); const item = await getAssessmentItemFromItemContainer(canvasElement); const interaction = await waitFor(() => { const el = item.querySelector('qti-inline-choice-interaction'); if (!el) throw new Error('inline-choice interaction not found'); return el; }); const selectElement = await waitFor(() => { const select = interaction.shadowRoot?.querySelector<HTMLSelectElement>('select'); if (!select) throw new Error('select element not yet available'); return select; }); const showButton = await canvas.findByShadowText(/Show candidate correction/i); await step('Select an inline choice option', async () => { selectElement.value = 'Y'; // de correcte identifier (York) selectElement.dispatchEvent(new Event('change', { bubbles: true })); }); await step('Click on the Show Candidate Correction button', async () => { await showButton.click(); await step('Verify candidate correction by checking selected option', async () => { const selectedOption = Array.from(selectElement.options).find(opt => opt.selected); expect(selectedOption).not.toBeUndefined(); expect(selectedOption.value).toBe('Y'); expect(selectedOption.textContent.trim()).toBe('York'); }); }); } }"
        },
        {
          "kind": "variable",
          "name": "Match",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { 'item-url': 'assets/qti-test-package/items/match.xml' // Set the new item URL here }, render: args => html` <qti-item> <div> <item-container style=\"display: block;width: 400px; height: 350px;\" item-url=${args['item-url'] as string}> <template> <style> qti-assessment-item { padding: 1rem; display: block; aspect-ratio: 4 / 3; width: 800px; border: 2px solid blue; transform: scale(0.5); transform-origin: top left; } </style> </template> </item-container> <item-show-candidate-correction></item-show-candidate-correction> </div> </qti-item>`, play: async ({ canvasElement, step }) => { // wait for qti-simple-choice to be rendered const canvas = within(canvasElement); const showCorrectButton = await canvas.findByShadowText(/Show candidate correction/i); const matchItem1 = (await canvas.findByShadowText('Prospero')) as QtiSimpleAssociableChoice; const matchItem2 = (await canvas.findByShadowText('Capulet')) as QtiSimpleAssociableChoice; const matchItem3 = (await canvas.findByShadowText('Demetrius')) as QtiSimpleAssociableChoice; const dropZone1 = await canvas.findByShadowText('The Tempest'); const dropZone2 = await canvas.findByShadowText(\"A Midsummer-Night's Dream\"); const dropZone3 = await canvas.findByShadowText('Romeo and Juliet'); await step('Drag and drop match interaction items', async () => { await drag(matchItem1, { to: dropZone1 }); await drag(matchItem2, { to: dropZone2 }); await drag(matchItem3, { to: dropZone3 }); await showCorrectButton.click(); await step('Verify candidate correction state is applied', async () => { const matchItem1List = Array.from(await canvas.findAllByShadowText('Prospero')); const matchItem1CandidateResponse = matchItem1List[1] as QtiSimpleAssociableChoice; const matchItem2List = Array.from(await canvas.findAllByShadowText('Capulet')); const matchItem2CandidateResponse = matchItem2List[1] as QtiSimpleAssociableChoice; const matchItem3List = Array.from(await canvas.findAllByShadowText('Demetrius')); const matchItem3CandidateResponse = matchItem3List[1] as QtiSimpleAssociableChoice; expect(matchItem1CandidateResponse.internals.states.has('candidate-correct')).toBe(true); expect(matchItem2CandidateResponse.internals.states.has('candidate-correct')).toBe(false); expect(matchItem3CandidateResponse.internals.states.has('candidate-correct')).toBe(false); expect(matchItem1CandidateResponse.internals.states.has('candidate-incorrect')).toBe(false); expect(matchItem2CandidateResponse.internals.states.has('candidate-incorrect')).toBe(true); expect(matchItem3CandidateResponse.internals.states.has('candidate-incorrect')).toBe(true); }); }); } }"
        },
        {
          "kind": "variable",
          "name": "MatchAllToOneZone",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { 'item-url': 'assets/qti-test-package/items/match.xml' // Set the new item URL here }, render: args => html` <qti-item> <div> <item-container style=\"display: block;width: 400px; height: 350px;\" item-url=${args['item-url'] as string}> <template> <style> qti-assessment-item { padding: 1rem; display: block; aspect-ratio: 4 / 3; width: 800px; border: 2px solid blue; transform: scale(0.5); transform-origin: top left; } </style> </template> </item-container> <item-show-candidate-correction></item-show-candidate-correction> </div> </qti-item>`, play: async ({ canvasElement, step }) => { // wait for qti-simple-choice to be rendered - fresh UI state const canvas = within(canvasElement); const showCorrectButton = await canvas.findByShadowText(/Show candidate correction/i); const matchItem1 = (await canvas.findByShadowText('Prospero')) as QtiSimpleAssociableChoice; const matchItem2 = (await canvas.findByShadowText('Lysander')) as QtiSimpleAssociableChoice; const matchItem3 = (await canvas.findByShadowText('Demetrius')) as QtiSimpleAssociableChoice; const dropZone1 = await canvas.findByShadowText('The Tempest'); await step('Drag and drop all match interaction items to single dropzone', async () => { await drag(matchItem1, { to: dropZone1 }); await drag(matchItem2, { to: dropZone1 }); await drag(matchItem3, { to: dropZone1 }); await showCorrectButton.click(); await step('Verify candidate correction state is applied', async () => { const matchItem1List = Array.from(await canvas.findAllByShadowText('Prospero')); const matchItem1CandidateResponse = matchItem1List[1] as QtiSimpleAssociableChoice; const matchItem2List = Array.from(await canvas.findAllByShadowText('Lysander')); const matchItem2CandidateResponse = matchItem2List[1] as QtiSimpleAssociableChoice; const matchItem3List = Array.from(await canvas.findAllByShadowText('Demetrius')); const matchItem3CandidateResponse = matchItem3List[1] as QtiSimpleAssociableChoice; expect(matchItem1CandidateResponse.internals.states.has('candidate-correct')).toBe(true); expect(matchItem2CandidateResponse.internals.states.has('candidate-correct')).toBe(false); expect(matchItem3CandidateResponse.internals.states.has('candidate-correct')).toBe(false); expect(matchItem1CandidateResponse.internals.states.has('candidate-incorrect')).toBe(false); expect(matchItem2CandidateResponse.internals.states.has('candidate-incorrect')).toBe(true); expect(matchItem3CandidateResponse.internals.states.has('candidate-incorrect')).toBe(true); }); }); } }"
        },
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta<typeof ItemContainer & { 'item-url': string }>"
          },
          "default": "{ component: 'item-container', args: { ...args, 'item-url': 'assets/qti-item/example-choice-item.xml' }, argTypes, parameters: { actions: { handles: events } } // tags: ['autodocs', 'new'] }"
        },
        {
          "kind": "variable",
          "name": "MultipleResponse",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { 'item-url': 'assets/qti-item/example-choice-multiple-item.xml' // Set the new item URL here }, render: args => html` <qti-item> <div> <item-container style=\"display: block;width: 400px; height: 350px;\" item-url=${args['item-url'] as string}> <template> <style> qti-assessment-item { padding: 1rem; display: block; aspect-ratio: 4 / 3; width: 800px; border: 2px solid blue; transform: scale(0.5); transform-origin: top left; } </style> </template> </item-container> <item-show-candidate-correction ${spread(args)}></item-show-candidate-correction> </div> </qti-item>`, play: async ({ canvasElement, step }) => { // wait for qti-simple-choice to be rendered const canvas = within(canvasElement); // const choices = await canvas.findAllByShadowRole('radio'); const choiceA: QtiSimpleChoice = await canvas.findByShadowText('This is correct.'); const choiceB: QtiSimpleChoice = await canvas.findByShadowText('This is also correct.'); const choiceC: QtiSimpleChoice = await canvas.findByShadowText('This is wrong.'); const showCorrectButton = canvas.getAllByShadowText(/Show candidate correction/i)[0]; await step('Click on the Show Correct button', async () => { await choiceA.click(); await choiceC.click(); await showCorrectButton.click(); await step('Verify candidate correction state is applied', async () => { expect(choiceA.internals.states.has('candidate-correct')).toBe(true); expect(choiceB.internals.states.has('candidate-correct')).toBe(false); expect(choiceC.internals.states.has('candidate-correct')).toBe(false); expect(choiceA.internals.states.has('candidate-incorrect')).toBe(false); expect(choiceB.internals.states.has('candidate-incorrect')).toBe(false); expect(choiceC.internals.states.has('candidate-incorrect')).toBe(true); }); }); await step('Click on the Hide Correct button and deselect options', async () => { await showCorrectButton.click(); await step('Verify candidate correction state is removed', async () => { expect(choiceA.internals.states.has('candidate-correct')).toBe(false); expect(choiceB.internals.states.has('candidate-correct')).toBe(false); expect(choiceC.internals.states.has('candidate-correct')).toBe(false); expect(choiceA.internals.states.has('candidate-incorrect')).toBe(false); expect(choiceB.internals.states.has('candidate-incorrect')).toBe(false); expect(choiceC.internals.states.has('candidate-incorrect')).toBe(false); }); await choiceA.click(); await choiceC.click(); }); } }"
        },
        {
          "kind": "variable",
          "name": "NoCorrectResponse",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { 'item-url': 'assets/qti-item/example-choice-nocorrect-item.xml' // Set the new item URL here }, render: args => html` <qti-item> <item-container style=\"width: 400px; height: 350px; display: block;\" item-url=${args['item-url'] as string}> <template> <style> qti-assessment-item { padding: 1rem; display: block; aspect-ratio: 4 / 3; width: 800px; border: 2px solid blue; transform: scale(0.5); transform-origin: top left; } </style> </template> </item-container> <item-show-candidate-correction ${spread(args)}></item-show-candidate-correction> <!-- </div> --> </qti-item>`, play: async ({ canvasElement, step }) => { // // wait for qti-simple-choice to be rendered const canvas = within(canvasElement); await canvas.findByShadowText('You must stay with your luggage at all times.'); const _ = canvas.getAllByShadowText(/No correct response specified/i)[0]; const itemShowCorrect = canvasElement.querySelector('item-show-candidate-correction'); await step('Verify the Show Correct button is disabled', async () => { expect(itemShowCorrect.disabled).toBe(true); }); } }"
        },
        {
          "kind": "variable",
          "name": "SelectPoint",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { 'item-url': 'assets/qti-test-package/items/select_point.xml' }, render: args => html` <qti-item> <div> <item-container style=\"display: block; width: 400px; height: 350px;\" item-url=${args['item-url'] as string}> <template> <style> qti-assessment-item { padding: 1rem; display: block; aspect-ratio: 4 / 3; width: 800px; border: 2px solid blue; transform: scale(0.5); transform-origin: top left; } </style> </template> </item-container> <item-show-candidate-correction></item-show-candidate-correction> </div> </qti-item> `, play: async ({ canvasElement, step }) => { const canvas = within(canvasElement); const showButton = await canvas.findByShadowText(/Show candidate correction/i); const image = await canvas.findByShadowAltText('UK Map'); await step('Click on correct point in the image', async () => { const rect = image.getBoundingClientRect(); await fireEvent.click(image, { clientX: rect.left + rect.width * 0.5, clientY: rect.top + rect.height * 0.4 }); }); await step('Click on incorrect points in the image', async () => { const rect = image.getBoundingClientRect(); await fireEvent.click(image, { clientX: rect.left + rect.width * 0.5, clientY: rect.top + rect.height * 0.6 }); await fireEvent.click(image, { clientX: rect.left + rect.width * 0.55, clientY: rect.top + rect.height * 0.65 }); }); await step('Click on the Show Candidate Correction button', async () => { await showButton.click(); await step('Verify candidate correction by checking selected options', async () => { const item = await getAssessmentItemFromItemContainer(canvasElement); const interaction: QtiSelectPointInteraction = item.querySelector('qti-select-point-interaction'); const buttonsCorrect = interaction.shadowRoot?.querySelectorAll<HTMLButtonElement>('button[part=\"point correct\"]'); const buttonsIncorrect = interaction.shadowRoot?.querySelectorAll<HTMLButtonElement>( 'button[part=\"point incorrect\"]' ); expect(buttonsCorrect).toHaveLength(1); expect(buttonsIncorrect).toHaveLength(2); }); }); } }"
        },
        {
          "kind": "variable",
          "name": "TextEntry",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { 'item-url': 'assets/qti-item/example-text-entry.xml' }, render: args => html` <qti-item> <div> <item-container style=\"display: block; width: 400px; height: 350px;\" item-url=${args['item-url'] as string}> <template> <style> qti-assessment-item { padding: 1rem; display: block; aspect-ratio: 4 / 3; width: 800px; border: 2px solid blue; transform: scale(0.5); transform-origin: top left; } </style> </template> </item-container> <item-show-candidate-correction></item-show-candidate-correction> </div> </qti-item> `, play: async ({ canvasElement, step }) => { const canvas = within(canvasElement); const showButton = await canvas.findByShadowText(/Show candidate correction/i); const item = await getAssessmentItemFromItemContainer(canvasElement); const interaction: QtiTextEntryInteraction = item.querySelector('qti-text-entry-interaction'); const input = interaction.shadowRoot?.querySelector<HTMLInputElement>('input'); await step('Type in the correct answer text entry interaction', async () => { input.value = 'York'; input.dispatchEvent(new Event('input', { bubbles: true })); input.dispatchEvent(new Event('change', { bubbles: true })); }); await step('Click on the Show Candidate Correction button', async () => { await showButton.click(); await step('Verify candidate correction by checking selected option', async () => { expect(interaction.internals.states.has('candidate-correct')).toBe(true); expect(interaction.internals.states.has('candidate-incorrect')).toBe(false); expect(interaction.internals.states.has('candidate-partially-correct')).toBe(false); }); }); await step('Type in the partially correct answer text entry interaction', async () => { input.value = 'york'; input.dispatchEvent(new Event('input', { bubbles: true })); input.dispatchEvent(new Event('change', { bubbles: true })); }); await step('Click on the Show Candidate Correction button', async () => { await showButton.click(); await step('Verify candidate correction by checking selected option', async () => { const interactionResponse: QtiTextEntryInteraction = item.querySelector('qti-text-entry-interaction'); expect(interactionResponse.internals.states.has('candidate-correct')).toBe(false); expect(interactionResponse.internals.states.has('candidate-incorrect')).toBe(false); expect(interactionResponse.internals.states.has('candidate-partially-correct')).toBe(true); }); }); await step('Type in the incorrect answer text entry interaction', async () => { input.value = 'bla'; input.dispatchEvent(new Event('input', { bubbles: true })); input.dispatchEvent(new Event('change', { bubbles: true })); }); await step('Click on the Show Candidate Correction button', async () => { await showButton.click(); await step('Verify candidate correction by checking selected option', async () => { const interactionResponse: QtiTextEntryInteraction = item.querySelector('qti-text-entry-interaction'); expect(interactionResponse.internals.states.has('candidate-correct')).toBe(false); expect(interactionResponse.internals.states.has('candidate-incorrect')).toBe(true); expect(interactionResponse.internals.states.has('candidate-partially-correct')).toBe(false); }); }); } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/lib/qti-item/components/item-show-candidate-correction.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Default",
          "declaration": {
            "name": "Default",
            "module": "src/lib/qti-item/components/item-show-candidate-correction.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "InlineChoice",
          "declaration": {
            "name": "InlineChoice",
            "module": "src/lib/qti-item/components/item-show-candidate-correction.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Match",
          "declaration": {
            "name": "Match",
            "module": "src/lib/qti-item/components/item-show-candidate-correction.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "MatchAllToOneZone",
          "declaration": {
            "name": "MatchAllToOneZone",
            "module": "src/lib/qti-item/components/item-show-candidate-correction.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "MultipleResponse",
          "declaration": {
            "name": "MultipleResponse",
            "module": "src/lib/qti-item/components/item-show-candidate-correction.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "NoCorrectResponse",
          "declaration": {
            "name": "NoCorrectResponse",
            "module": "src/lib/qti-item/components/item-show-candidate-correction.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "SelectPoint",
          "declaration": {
            "name": "SelectPoint",
            "module": "src/lib/qti-item/components/item-show-candidate-correction.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "TextEntry",
          "declaration": {
            "name": "TextEntry",
            "module": "src/lib/qti-item/components/item-show-candidate-correction.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-item/components/item-show-candidate-correction.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ItemShowCandidateCorrection",
          "members": [
            {
              "kind": "method",
              "name": "_getDisplayedText",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string"
                }
              }
            },
            {
              "kind": "field",
              "name": "_hasCorrectResponse",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_previousActiveItem",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "''"
            },
            {
              "kind": "method",
              "name": "_toggleState",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "computedContext",
              "type": {
                "text": "ComputedItemContext | undefined"
              },
              "privacy": "public",
              "parsedType": {
                "text": "{ identifier: string, href: string, correct: false | true, incorrect: false | true, completed: false | true, adaptive: false | true, timeDependent: false | true, title: string, label: string, score: number, maxScore: number, completionStatus: string, variables: readonly VariableDeclaration<string | string[]>[] } | undefined"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "hideCandidateCorrectionText",
              "type": {
                "text": "string"
              },
              "default": "'Hide candidate correction'",
              "attribute": "hideCandidateCorrectionText"
            },
            {
              "kind": "field",
              "name": "noCorrectResponseText",
              "type": {
                "text": "string"
              },
              "default": "'No correct response specified'",
              "attribute": "noCorrectResponseText"
            },
            {
              "kind": "field",
              "name": "showCandidateCorrectionText",
              "type": {
                "text": "string"
              },
              "default": "'Show candidate correction'",
              "attribute": "showCandidateCorrectionText"
            },
            {
              "kind": "field",
              "name": "shown",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "shown",
              "reflects": true
            }
          ],
          "events": [
            {
              "name": "item-show-candidate-correction",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "hideCandidateCorrectionText",
              "type": {
                "text": "string"
              },
              "default": "'Hide candidate correction'",
              "fieldName": "hideCandidateCorrectionText"
            },
            {
              "name": "noCorrectResponseText",
              "type": {
                "text": "string"
              },
              "default": "'No correct response specified'",
              "fieldName": "noCorrectResponseText"
            },
            {
              "name": "showCandidateCorrectionText",
              "type": {
                "text": "string"
              },
              "default": "'Show candidate correction'",
              "fieldName": "showCandidateCorrectionText"
            },
            {
              "name": "shown",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "shown"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "item-show-candidate-correction",
          "customElement": true,
          "modulePath": "src/lib/qti-item/components/item-show-candidate-correction.ts",
          "definitionPath": "src/lib/qti-item/components/item-show-candidate-correction.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "item-show-candidate-correction",
          "declaration": {
            "name": "ItemShowCandidateCorrection",
            "module": "src/lib/qti-item/components/item-show-candidate-correction.ts"
          }
        },
        {
          "kind": "js",
          "name": "ItemShowCandidateCorrection",
          "declaration": {
            "name": "ItemShowCandidateCorrection",
            "module": "src/lib/qti-item/components/item-show-candidate-correction.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-item/components/item-show-correct-response.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "ChoiceFullCorrectResponse",
          "type": {
            "text": "Story"
          },
          "default": "{ render: args => { return html`<qti-item> <div style=\"display: flex; flex-direction: column; gap: 1rem; align-items: start\"> <item-container style=\"width: 400px; height: 350px; display: block;\" item-url=${args['item-url'] as string}> <template> <style> qti-assessment-item { padding: 1rem; display: block; aspect-ratio: 4 / 3; width: 800px; border: 2px solid blue; transform: scale(0.5); transform-origin: top left; } </style> </template> </item-container> <item-show-correct-response ${spread(args)}></item-show-correct-response> </div> </qti-item>`; }, play: async ({ canvasElement, step }) => { const item = document.querySelector('qti-item'); item.configContext = { correctResponseMode: 'full', fullCorrectResponseOnlyWhenIncorrect: false }; const canvas = within(canvasElement); const showCorrectButton = await canvas.findByShadowText(/Show correct/i); const choiceA: QtiSimpleChoice = await canvas.findByShadowText('You must stay with your luggage at all times.'); await step('Click on the Show Correct button', async () => { await choiceA.click(); await fireEvent.click(showCorrectButton); await step('Verify correct response state is applied', async () => { const fullCorrectResponse = await canvas.findByShadowRole('full-correct-response'); expect(fullCorrectResponse).toBeVisible(); const interaction = fullCorrectResponse.querySelector('qti-choice-interaction'); const choices = Array.from(interaction.querySelectorAll('qti-simple-choice')); await interaction.updateComplete; expect(choices[0].internals.states.has('--checked')).toBe(true); expect(choices[1].internals.states.has('--checked')).toBe(false); expect(choices[2].internals.states.has('--checked')).toBe(false); }); }); } }"
        },
        {
          "kind": "variable",
          "name": "ChoiceFullCorrectResponseOnlyWhenIncorrect",
          "type": {
            "text": "Story"
          },
          "default": "{ render: args => { return html`<qti-item> <div style=\"display: flex; flex-direction: column; gap: 1rem; align-items: start\"> <item-container style=\"width: 400px; height: 350px; display: block;\" item-url=${args['item-url'] as string}> <template> <style> qti-assessment-item { padding: 1rem; display: block; aspect-ratio: 4 / 3; width: 800px; border: 2px solid blue; transform: scale(0.5); transform-origin: top left; } </style> </template> </item-container> <item-show-correct-response ${spread(args)}></item-show-correct-response> </div> </qti-item>`; }, play: async ({ canvasElement, step }) => { const item = document.querySelector('qti-item'); item.configContext = { correctResponseMode: 'full', fullCorrectResponseOnlyWhenIncorrect: true }; const canvas = within(canvasElement); const showCorrectButton = await canvas.findByShadowText(/Show correct/i); const choiceA: QtiSimpleChoice = await canvas.findByShadowText('You must stay with your luggage at all times.'); await step('Click on the Show Correct button', async () => { await choiceA.click(); await fireEvent.click(showCorrectButton); await step('Verify correct full correct response is not visible', async () => { const fullCorrectResponse = await canvas.queryByShadowRole('full-correct-response'); expect(fullCorrectResponse).toBeNull(); }); }); } }"
        },
        {
          "kind": "variable",
          "name": "ChoiceInternalCorrectResponse",
          "type": {
            "text": "Story"
          },
          "default": "{ render: args => { return html`<qti-item> <div style=\"display: flex; flex-direction: column; gap: 1rem; align-items: start\"> <item-container style=\"width: 400px; height: 350px; display: block;\" item-url=${args['item-url'] as string}> <template> <style> qti-assessment-item { padding: 1rem; display: block; aspect-ratio: 4 / 3; width: 800px; border: 2px solid blue; transform: scale(0.5); transform-origin: top left; } </style> </template> </item-container> <item-show-correct-response ${spread(args)}></item-show-correct-response> </div> </qti-item>`; }, play: async ({ canvasElement, step }) => { const item = document.querySelector('qti-item'); item.configContext = { correctResponseMode: 'internal' }; // wait for qti-simple-choice to be rendered const canvas = within(canvasElement); // const choices = await canvas.findAllByShadowRole('radio'); const choiceA: QtiSimpleChoice = await canvas.findByShadowText('You must stay with your luggage at all times.'); const choiceB: QtiSimpleChoice = await canvas.findByShadowText('Do not let someone else look after your luggage.'); const choiceC: QtiSimpleChoice = await canvas.findByShadowText('Remember your luggage when you leave.'); const showCorrectButton = canvas.getAllByShadowText(/Show correct/i)[0]; await step('Click on the Show Correct button', async () => { await showCorrectButton.click(); await step('Verify correct response state is applied', async () => { expect(choiceA.internals.states.has('correct-response')).toBe(true); expect(choiceB.internals.states.has('correct-response')).toBe(false); expect(choiceC.internals.states.has('correct-response')).toBe(false); expect(choiceA.internals.states.has('incorrect-response')).toBe(false); expect(choiceB.internals.states.has('incorrect-response')).toBe(true); expect(choiceC.internals.states.has('incorrect-response')).toBe(true); }); }); } }"
        },
        {
          "kind": "variable",
          "name": "Default",
          "type": {
            "text": "Story"
          },
          "default": "{ render: args => { return html`<qti-item> <div style=\"display: flex; flex-direction: column; gap: 1rem; align-items: start\"> <item-container style=\"width: 400px; height: 350px; display: block;\" item-url=${args['item-url'] as string}> <template> <style> qti-assessment-item { padding: 1rem; display: block; aspect-ratio: 4 / 3; width: 800px; border: 2px solid blue; transform: scale(0.5); transform-origin: top left; } </style> </template> </item-container> <item-correct-response-mode></item-correct-response-mode> <item-show-correct-response ${spread(args)}></item-show-correct-response> </div> </qti-item>`; }, play: async ({ canvasElement, step }) => { // wait for qti-simple-choice to be rendered const canvas = within(canvasElement); // const choices = await canvas.findAllByShadowRole('radio'); const choiceA: QtiSimpleChoice = await canvas.findByShadowText('You must stay with your luggage at all times.'); const choiceB: QtiSimpleChoice = await canvas.findByShadowText('Do not let someone else look after your luggage.'); const choiceC: QtiSimpleChoice = await canvas.findByShadowText('Remember your luggage when you leave.'); const showCorrectButton = canvas.getAllByShadowText(/Show correct/i)[0]; await step('Click on the Show Correct button', async () => { await showCorrectButton.click(); await step('Verify correct response state is applied', async () => { expect(choiceA.internals.states.has('correct-response')).toBe(true); expect(choiceB.internals.states.has('correct-response')).toBe(false); expect(choiceC.internals.states.has('correct-response')).toBe(false); expect(choiceA.internals.states.has('incorrect-response')).toBe(false); expect(choiceB.internals.states.has('incorrect-response')).toBe(true); expect(choiceC.internals.states.has('incorrect-response')).toBe(true); }); await step('Click on the Show Correct button again', async () => { expect(canvas.queryByShadowText(/Show correct/i)).toBeNull(); expect(canvas.getAllByShadowText(/Hide correct/i).length).toBe(1); await showCorrectButton.click(); expect(choiceA.internals.states.has('correct-response')).toBe(false); expect(choiceB.internals.states.has('correct-response')).toBe(false); expect(choiceC.internals.states.has('correct-response')).toBe(false); expect(choiceA.internals.states.has('incorrect-response')).toBe(false); expect(choiceB.internals.states.has('incorrect-response')).toBe(false); expect(choiceC.internals.states.has('incorrect-response')).toBe(false); }); }); } }"
        },
        {
          "kind": "variable",
          "name": "GapMatch",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { 'item-url': 'assets/qti-test-package/items/gap_match.xml' // Set the new item URL here }, render: args => html` <qti-item> <div> <item-container style=\"display: block;width: 400px; height: 350px;\" item-url=${args['item-url'] as string}> <template> <style> qti-assessment-item { padding: 1rem; display: block; aspect-ratio: 4 / 3; width: 800px; border: 2px solid blue; transform: scale(0.5); transform-origin: top left; } </style> </template> </item-container> <item-show-correct-response ${spread(args)}></item-show-correct-response> </div> </qti-item>`, play: async ({ canvasElement, step }) => { const canvas = within(canvasElement); const interaction = await getAssessmentItemFromItemContainer(canvasElement); const showCorrectButton = canvas.getAllByShadowText(/Show correct/i)[0]; await step('Click on the Show Correct button', async () => { await showCorrectButton.click(); const correctOptions = interaction.querySelectorAll(`[class=\"correct-option\"]`); expect(correctOptions.length).toBe(2); expect(correctOptions[0].textContent).toBe('winter'); expect(correctOptions[1].textContent).toBe('summer'); }); } }"
        },
        {
          "kind": "variable",
          "name": "GraphicAssociate",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { 'item-url': 'assets/qti-test-package/items/graphic_associate.xml' // Set the new item URL here }, render: args => html` <qti-item> <div> <item-container style=\"display: block;width: 400px; height: 350px;\" item-url=${args['item-url'] as string}> <template> <style> qti-assessment-item { padding: 1rem; display: block; aspect-ratio: 4 / 3; border: 2px solid blue; transform: scale(0.7); transform-origin: top left; } </style> </template> </item-container> <item-show-correct-response></item-show-correct-response> <!-- <print-item-variables></print-item-variables> --> </div> </qti-item>`, play: async ({ canvasElement, step }) => { // wait for qti-simple-choices to be rendered const canvas = within(canvasElement); const item = await getAssessmentItemFromItemContainer(canvasElement); const interaction = item.querySelector('qti-graphic-associate-interaction'); const showCorrectButton = canvas.getAllByShadowText(/Show correct/i)[0]; await step('Click on the Show Correct button', async () => { await showCorrectButton.click(); const lines = interaction.shadowRoot.querySelector('line-container').querySelectorAll(`[part='correct-line']`).length === 2; expect(lines).toBe(true); }); } }"
        },
        {
          "kind": "variable",
          "name": "GraphicOrder",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { 'item-url': 'assets/qti-item/example-graphic-order.xml' // Set the new item URL here }, render: args => html` <qti-item> <div> <item-container style=\"display: block;width: 400px; height: 350px;\" item-url=${args['item-url'] as string}> <template> <style> qti-assessment-item { padding: 1rem; display: block; aspect-ratio: 4 / 3; width: 800px; border: 2px solid blue; transform: scale(0.5); transform-origin: top left; } </style> </template> </item-container> <item-show-correct-response></item-show-correct-response> </div> </qti-item>`, play: async ({ canvasElement, step }) => { // wait for qti-simple-choices to be rendered const canvas = within(canvasElement); const item = await getAssessmentItemFromItemContainer(canvasElement); const interaction = item.querySelector('qti-graphic-order-interaction'); const showCorrectButton = canvas.getAllByShadowText(/Show correct/i)[0]; await step('Click on the Show Correct button', async () => { await showCorrectButton.click(); const hotspotChoice = interaction.querySelectorAll('qti-hotspot-choice'); // const get after content expect(window.getComputedStyle(hotspotChoice[0], ':after').content).toBe('\"C=1\"'); expect(window.getComputedStyle(hotspotChoice[1], ':after').content).toBe('\"C=4\"'); expect(window.getComputedStyle(hotspotChoice[2], ':after').content).toBe('\"C=2\"'); expect(window.getComputedStyle(hotspotChoice[3], ':after').content).toBe('\"C=3\"'); }); } }"
        },
        {
          "kind": "variable",
          "name": "InlineChoiceFullCorrectResponse",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { 'item-url': 'assets/qti-item/example-inline-choice.xml' // Zorg dat dit item een inline-choice bevat }, render: args => html`<qti-item> <div> <item-container style=\"display: block; width: 400px; height: 350px;\" item-url=${args['item-url'] as string}> <template> <style> qti-assessment-item { padding: 1rem; display: block; aspect-ratio: 4 / 3; width: 800px; border: 2px solid blue; transform: scale(0.5); transform-origin: top left; } </style> </template> </item-container> <item-show-correct-response></item-show-correct-response> </div> </qti-item>`, play: async ({ canvasElement, step }) => { const item = document.querySelector('qti-item'); item.configContext = { correctResponseMode: 'full' }; const canvas = within(canvasElement); const showCorrectButton = await canvas.findByShadowText(/Show correct/i); await step('Click on the Show Correct button', async () => { await fireEvent.click(showCorrectButton); await step('Verify full correct response is shown', async () => { const fullCorrectResponse = await waitFor(() => canvas.getByShadowRole('full-correct-response')); expect(fullCorrectResponse).toBeVisible(); const interaction = fullCorrectResponse.querySelector('qti-inline-choice-interaction'); expect(interaction).not.toBeNull(); const select = interaction.shadowRoot.querySelector('select'); expect(select).not.toBeNull(); const selectedOption = Array.from(select.options).find(opt => opt.selected); expect(selectedOption).not.toBeUndefined(); expect(selectedOption.textContent.trim()).toBe('York'); }); }); } }"
        },
        {
          "kind": "variable",
          "name": "InlineChoiceInternalCorrectResponse",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { 'item-url': 'assets/qti-item/example-inline-choice.xml' // Set the new item URL here }, render: args => html` <qti-item> <div> <item-container style=\"display: block;width: 400px; height: 350px;\" item-url=${args['item-url'] as string}> <template> <style> qti-assessment-item { padding: 1rem; display: block; aspect-ratio: 4 / 3; width: 800px; border: 2px solid blue; transform: scale(0.5); transform-origin: top left; } </style> </template> </item-container> <item-show-correct-response></item-show-correct-response> </div> </qti-item>`, play: async ({ canvasElement, step }) => { const item = document.querySelector('qti-item'); item.configContext = { correctResponseMode: 'internal' }; const canvas = within(canvasElement); const itemAssessment = await getAssessmentItemFromItemContainer(canvasElement); const interaction = itemAssessment.querySelector('qti-inline-choice-interaction'); const showCorrectButton = await canvas.findByShadowText(`Show correct response`); await step('Click on the Show Correct button', async () => { await showCorrectButton.click(); const correctResponse = interaction.shadowRoot.querySelector<HTMLSpanElement>('[part=\"correct-option\"]'); //.findByShadowLabelText('correct-response'); expect(correctResponse).not.toBeNull(); expect(correctResponse.innerText).toBe('York'); }); } }"
        },
        {
          "kind": "variable",
          "name": "Match",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { 'item-url': 'assets/qti-test-package/items/match.xml' // Set the new item URL here // 'item-url': 'api/kennisnet-1/ITEM002.xml' // Set the new item URL here }, render: args => html` <qti-item> <div> <item-container style=\"display: block;width: 400px; height: 350px;\" item-url=${args['item-url'] as string}> <template> <style> qti-assessment-item { padding: 1rem; display: block; aspect-ratio: 4 / 3; width: 800px; border: 2px solid blue; transform: scale(0.5); transform-origin: top left; } </style> </template> </item-container> <item-show-correct-response ${spread(args)}></item-show-correct-response> </div> </qti-item>`, play: async ({ canvasElement, step }) => { const canvas = within(canvasElement); const interaction = await getAssessmentItemFromItemContainer(canvasElement); const showCorrectButton = canvas.getAllByShadowText(/Show correct/i)[0]; await step('Click on the Show Correct button', async () => { await showCorrectButton.click(); const correctElements = interaction.querySelectorAll(`[class=\"correct-option\"]`); expect(correctElements.length).toBe(3); const correctOptions = Array.from(correctElements).map(el => el.textContent); const allExist = correctOptions.every(element => ['Prospero', 'Demetrius', 'Capulet'].includes(element)); expect(allExist).toBe(true); }); } }"
        },
        {
          "kind": "variable",
          "name": "MatchFullCorrectResponse",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { 'item-url': 'assets/qti-test-package/items/match.xml' // Set the new item URL here // 'item-url': 'api/kennisnet-1/ITEM002.xml' // Set the new item URL here }, render: args => html` <qti-item> <div> <item-container style=\"display: block;width: 400px; height: 350px;\" item-url=${args['item-url'] as string}> <template> <style> qti-assessment-item { padding: 1rem; display: block; aspect-ratio: 4 / 3; width: 800px; border: 2px solid blue; transform: scale(0.5); transform-origin: top left; } </style> </template> </item-container> <item-show-correct-response ${spread(args)}></item-show-correct-response> </div> </qti-item>`, play: async ({ canvasElement, step }) => { const item = document.querySelector('qti-item'); item.configContext = { correctResponseMode: 'full' }; const canvas = within(canvasElement); const showCorrectButton = await canvas.findByShadowText(/Show correct/i); await step('Click on the Show Correct button', async () => { await fireEvent.click(showCorrectButton); await step('Verify full correct response is shown', async () => { const fullCorrectResponse = await waitFor(() => canvas.getByShadowRole('full-correct-response')); expect(fullCorrectResponse).toBeVisible(); }); }); } }"
        },
        {
          "kind": "variable",
          "name": "MatchTabular",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { 'item-url': 'assets/qti-test-package/items/match-tabular.xml' // Set the new item URL here // 'item-url': 'api/kennisnet-1/ITEM002.xml' // Set the new item URL here }, render: args => html` <qti-item> <div> <item-container style=\"display: block;width: 400px; height: 350px;\" item-url=${args['item-url'] as string}> <template> <style> qti-assessment-item { padding: 1rem; display: block; aspect-ratio: 4 / 3; width: 800px; border: 2px solid blue; transform: scale(0.5); transform-origin: top left; } </style> </template> </item-container> <item-show-correct-response ${spread(args)}></item-show-correct-response> </div> </qti-item>`, play: async ({ canvasElement, step }) => { const canvas = within(canvasElement); const item = await getAssessmentItemFromItemContainer(canvasElement); const showCorrectButton = canvas.getAllByShadowText(/Show correct/i)[0]; const interaction = item.querySelector('qti-match-interaction'); await step('Click on the Show Correct button', async () => { await showCorrectButton.click(); // Find all elements with rb-correct or cb-correct parts // This uses the shadow DOM API to find elements with specific part attributes const correctRadioButtons = interaction.shadowRoot.querySelectorAll('[part~=\"rb-correct\"]'); const correctCheckboxes = interaction.shadowRoot.querySelectorAll('[part~=\"cb-correct\"]'); // Combine both types of correct elements const allCorrectElements = [...correctRadioButtons, ...correctCheckboxes] as HTMLInputElement[]; // Verify we have the expected number of correct answers expect(allCorrectElements.length).toBe(4); // Get the associated row identifiers for the correct options const correctRowIds = Array.from(allCorrectElements).map(el => el.name); // Get the values of the correct inputs (which contain the row and column IDs) const correctValues = Array.from(allCorrectElements).map(el => el.value); // Parse the values to extract row IDs const rowIds = correctValues.map(value => value.split(' ')[0]); // Verify the correct row IDs exist const expectedRowIds = ['C', 'P', 'L', 'D']; const allExist = rowIds.every(rowId => expectedRowIds.includes(rowId)); expect(allExist).toBe(true); }); } }"
        },
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta<typeof ItemContainer & { 'item-url': string }>"
          },
          "default": "{ component: 'item-container', args: { ...args, 'item-url': 'assets/qti-item/example-choice-item.xml' }, argTypes, parameters: { actions: { handles: events } } // tags: ['autodocs', 'new'] }"
        },
        {
          "kind": "variable",
          "name": "MultipleInteractions",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { 'item-url': 'assets/qti-item/example-multiple-interactions.xml' // Set the new item URL here }, render: args => html` <qti-item> <item-container style=\"width: 400px; height: 350px; display: block;\" item-url=${args['item-url'] as string}> <template> <style> qti-assessment-item { padding: 1rem; display: block; aspect-ratio: 4 / 3; width: 800px; border: 2px solid blue; transform: scale(0.5); transform-origin: top left; } </style> </template> </item-container> <item-show-correct-response ${spread(args)}></item-show-correct-response> <!-- </div> --> </qti-item>`, play: async ({ canvasElement, step }) => { // // wait for qti-simple-choice to be rendered const canvas = within(canvasElement); const interactions = await waitFor(() => { const itemContainer = canvasElement.querySelector('item-container'); if (!itemContainer) { throw new Error('Item container not found'); } if (!itemContainer.shadowRoot) { throw new Error('Shadow root not found'); } if (!itemContainer.shadowRoot.querySelector('qti-inline-choice-interaction')) { throw new Error('qti-inline-choice-interaction not found'); } return itemContainer.shadowRoot.querySelectorAll('qti-inline-choice-interaction'); }); const showCorrectButton = canvas.getAllByShadowText(/Show correct/i)[0]; await step('Click on the Show Correct button', async () => { await showCorrectButton.click(); }); await step('Verify correct response state is applied', async () => { for (const interaction of interactions) { const feedback = interaction.shadowRoot.querySelector('[part=\"correct-option\"]'); expect(feedback).not.toBeNull(); } }); } }"
        },
        {
          "kind": "variable",
          "name": "MultipleResponseFullCorrectResponse",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { 'item-url': 'assets/qti-item/example-choice-multiple-item.xml' // Set the new item URL here }, render: args => html` <qti-item> <div> <item-container style=\"display: block;width: 400px; height: 350px;\" item-url=${args['item-url'] as string}> <template> <style> qti-assessment-item { padding: 1rem; display: block; aspect-ratio: 4 / 3; width: 800px; border: 2px solid blue; transform: scale(0.5); transform-origin: top left; } </style> </template> </item-container> <item-show-correct-response ${spread(args)}></item-show-correct-response> </div> </qti-item>`, play: async ({ canvasElement, step }) => { const item = document.querySelector('qti-item'); item.configContext = { correctResponseMode: 'full' }; const canvas = within(canvasElement); const showCorrectButton = await canvas.findByShadowText(/Show correct/i); await step('Select the correct response mode full', async () => { await fireEvent.click(showCorrectButton); await step('Verify correct response full state is applied', async () => { const fullCorrectResponse = await canvas.findByShadowRole('full-correct-response'); expect(fullCorrectResponse).toBeVisible(); const interaction = fullCorrectResponse.querySelector('qti-choice-interaction'); const choices = Array.from(interaction.querySelectorAll('qti-simple-choice')); await interaction.updateComplete; expect(choices[0].internals.states.has('--checked')).toBe(true); expect(choices[1].internals.states.has('--checked')).toBe(true); expect(choices[2].internals.states.has('--checked')).toBe(false); }); }); } }"
        },
        {
          "kind": "variable",
          "name": "MultipleResponseInternalCorrectResponse",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { 'item-url': 'assets/qti-item/example-choice-multiple-item.xml' // Set the new item URL here }, render: args => html` <qti-item> <div> <item-container style=\"display: block;width: 400px; height: 350px;\" item-url=${args['item-url'] as string}> <template> <style> qti-assessment-item { padding: 1rem; display: block; aspect-ratio: 4 / 3; width: 800px; border: 2px solid blue; transform: scale(0.5); transform-origin: top left; } </style> </template> </item-container> <item-show-correct-response ${spread(args)}></item-show-correct-response> </div> </qti-item>`, play: async ({ canvasElement, step }) => { const item = document.querySelector('qti-item'); item.configContext = { correctResponseMode: 'internal' }; // wait for qti-simple-choice to be rendered const canvas = within(canvasElement); // const choices = await canvas.findAllByShadowRole('radio'); const choiceA: QtiSimpleChoice = await canvas.findByShadowText('This is correct.'); const choiceB: QtiSimpleChoice = await canvas.findByShadowText('This is also correct.'); const choiceC: QtiSimpleChoice = await canvas.findByShadowText('This is wrong.'); const showCorrectButton = await canvas.findByShadowText(/Show correct/i); await step('Click on the Show Correct button', async () => { await showCorrectButton.click(); await step('Verify correct response state is applied', async () => { expect(choiceA.internals.states.has('correct-response')).toBe(true); expect(choiceB.internals.states.has('correct-response')).toBe(true); expect(choiceC.internals.states.has('correct-response')).toBe(false); expect(choiceA.internals.states.has('incorrect-response')).toBe(false); expect(choiceB.internals.states.has('incorrect-response')).toBe(false); expect(choiceC.internals.states.has('incorrect-response')).toBe(true); }); }); } }"
        },
        {
          "kind": "variable",
          "name": "NoCorrectResponse",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { 'item-url': 'assets/qti-item/example-choice-nocorrect-item.xml' // Set the new item URL here }, render: args => html` <qti-item> <item-container style=\"width: 400px; height: 350px; display: block;\" item-url=${args['item-url'] as string}> <template> <style> qti-assessment-item { padding: 1rem; display: block; aspect-ratio: 4 / 3; width: 800px; border: 2px solid blue; transform: scale(0.5); transform-origin: top left; } </style> </template> </item-container> <item-show-correct-response ${spread(args)}></item-show-correct-response> <!-- </div> --> </qti-item>`, play: async ({ canvasElement, step }) => { // // wait for qti-simple-choice to be rendered const canvas = within(canvasElement); await canvas.findByShadowText('You must stay with your luggage at all times.'); const _ = canvas.getAllByShadowText(/No correct response specified/i)[0]; const itemShowCorrect = canvasElement.querySelector('item-show-correct-response'); await step('Verify the Show Correct button is disabled', async () => { expect(itemShowCorrect.disabled).toBe(true); }); } }"
        },
        {
          "kind": "variable",
          "name": "SelectPoint",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { 'item-url': 'assets/qti-test-package/items/select_point.xml' // Set the new item URL here }, render: args => html`<qti-item> <div> <item-container style=\"display: block;width: 400px; height: 350px;\" item-url=${args['item-url'] as string}> <template> <style> qti-assessment-item { padding: 1rem; display: block; aspect-ratio: 4 / 3; width: 800px; border: 2px solid blue; transform: scale(0.5); transform-origin: top left; } </style> </template> </item-container> <item-show-correct-response ${spread(args)}></item-show-correct-response> </div> </qti-item>`, play: async ({ canvasElement, step }) => { // wait for qti-simple-choice to be rendered const canvas = within(canvasElement); const item = await getAssessmentItemFromItemContainer(canvasElement); const interaction = item.querySelector('qti-select-point-interaction'); const showCorrectButton = canvas.getAllByShadowText(/Show correct/i)[0]; await step('Click on the Show Correct button', async () => { await showCorrectButton.click(); const correctIndication = interaction.shadowRoot.querySelector('[alt=\"correct-response-1\"]'); expect(correctIndication).not.toBeNull(); }); } }"
        },
        {
          "kind": "variable",
          "name": "SelectPointMultipleNoAreaMapping",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { 'item-url': 'assets/qti-item/example-select-point.xml' // Set the new item URL here }, render: args => html` <qti-item> <div> <item-container style=\"display: block;width: 400px; height: 350px;\" item-url=${args['item-url'] as string}> <template> <style> qti-assessment-item { padding: 1rem; display: block; aspect-ratio: 4 / 3; width: 800px; border: 2px solid blue; transform: scale(0.5); transform-origin: top left; } </style> </template> </item-container> <item-show-correct-response ${spread(args)}></item-show-correct-response> </div> </qti-item>`, play: async ({ canvasElement, step }) => { // wait for qti-simple-choices to be rendered const canvas = within(canvasElement); const item = await getAssessmentItemFromItemContainer(canvasElement); const interaction = item.querySelector('qti-select-point-interaction'); const showCorrectButton = canvas.getAllByShadowText(/Show correct/i)[0]; await step('Click on the Show Correct button', async () => { await showCorrectButton.click(); const correctIndication1 = interaction.shadowRoot.querySelector('[alt=\"correct-response-1\"]'); const correctIndication2 = interaction.shadowRoot.querySelector('[alt=\"correct-response-2\"]'); const correctIndication3 = interaction.shadowRoot.querySelector('[alt=\"correct-response-3\"]'); expect(correctIndication1).not.toBeNull(); expect(correctIndication2).not.toBeNull(); expect(correctIndication3).not.toBeNull(); }); } }"
        },
        {
          "kind": "variable",
          "name": "Slider",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { 'item-url': 'assets/qti-item/example-slider.xml' // Set the new item URL here }, render: args => html` <qti-item> <div> <item-container style=\"display: block;width: 400px; height: 350px;\" item-url=${args['item-url'] as string}> <template> <style> qti-assessment-item { padding: 1rem; display: block; aspect-ratio: 4 / 3; width: 800px; border: 2px solid blue; transform: scale(0.5); transform-origin: top left; } </style> </template> </item-container> <item-show-correct-response></item-show-correct-response> </div> </qti-item>`, play: async ({ canvasElement, step }) => { // wait for qti-simple-choices to be rendered const canvas = within(canvasElement); const item = await getAssessmentItemFromItemContainer(canvasElement); const interaction = item.querySelector('qti-slider-interaction'); const showCorrectButton = canvas.getAllByShadowText(/Show correct/i)[0]; await step('Click on the Show Correct button', async () => { await showCorrectButton.click(); const correctIndication = interaction.shadowRoot.querySelectorAll('[id=\"knob-correct\"]'); expect(correctIndication.length).toBe(1); }); } }"
        },
        {
          "kind": "variable",
          "name": "TextEntryFullCorrectResponse",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { 'item-url': 'assets/qti-test-package/items/text_entry.xml' // Set the new item URL here }, render: args => html` <qti-item navigate=\"item\"> <div> <item-container style=\"display: block;width: 400px; height: 350px;\" item-url=${args['item-url'] as string}> <template> <style> qti-assessment-item { padding: 1rem; display: block; aspect-ratio: 4 / 3; width: 800px; border: 2px solid blue; transform: scale(0.5); transform-origin: top left; } </style> </template> </item-container> <item-show-correct-response ${spread(args)}></item-show-correct-response> </div> </qti-item>`, play: async ({ canvasElement, step }) => { const test = document.querySelector('qti-item'); test.configContext = { correctResponseMode: 'full' }; const canvas = within(canvasElement); const showCorrectButton = await canvas.findByShadowText(/Show correct/i); await step('Select the correct response mode full', async () => { await fireEvent.click(showCorrectButton); await step('Verify correct response full state is applied', async () => { const fullCorrectResponse = await canvas.findByShadowRole('full-correct-response'); expect(fullCorrectResponse).toBeVisible(); }); }); } }"
        },
        {
          "kind": "variable",
          "name": "TextEntryInternalCorrectResponse",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { 'item-url': 'assets/qti-test-package/items/text_entry.xml' // Set the new item URL here }, render: args => html` <qti-item navigate=\"item\"> <div> <item-container style=\"display: block;width: 400px; height: 350px;\" item-url=${args['item-url'] as string}> <template> <style> qti-assessment-item { padding: 1rem; display: block; aspect-ratio: 4 / 3; width: 800px; border: 2px solid blue; transform: scale(0.5); transform-origin: top left; } </style> </template> </item-container> <item-show-correct-response ${spread(args)}></item-show-correct-response> </div> </qti-item>`, play: async ({ canvasElement, step }) => { const test = document.querySelector('qti-item'); test.configContext = { correctResponseMode: 'internal' }; const canvas = within(canvasElement); const item = await getAssessmentItemFromItemContainer(canvasElement); const interaction = item.querySelector('qti-text-entry-interaction'); const showCorrectButton = canvas.getAllByShadowText(/Show correct/i)[0]; await step('Click on the Show Correct button', async () => { await showCorrectButton.click(); const correctElement = interaction.shadowRoot.querySelector('[part=\"correct\"]'); expect(correctElement).toBeVisible(); }); } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ChoiceFullCorrectResponse",
          "declaration": {
            "name": "ChoiceFullCorrectResponse",
            "module": "src/lib/qti-item/components/item-show-correct-response.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "ChoiceFullCorrectResponseOnlyWhenIncorrect",
          "declaration": {
            "name": "ChoiceFullCorrectResponseOnlyWhenIncorrect",
            "module": "src/lib/qti-item/components/item-show-correct-response.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "ChoiceInternalCorrectResponse",
          "declaration": {
            "name": "ChoiceInternalCorrectResponse",
            "module": "src/lib/qti-item/components/item-show-correct-response.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/lib/qti-item/components/item-show-correct-response.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Default",
          "declaration": {
            "name": "Default",
            "module": "src/lib/qti-item/components/item-show-correct-response.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "GapMatch",
          "declaration": {
            "name": "GapMatch",
            "module": "src/lib/qti-item/components/item-show-correct-response.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "GraphicAssociate",
          "declaration": {
            "name": "GraphicAssociate",
            "module": "src/lib/qti-item/components/item-show-correct-response.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "GraphicOrder",
          "declaration": {
            "name": "GraphicOrder",
            "module": "src/lib/qti-item/components/item-show-correct-response.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "InlineChoiceFullCorrectResponse",
          "declaration": {
            "name": "InlineChoiceFullCorrectResponse",
            "module": "src/lib/qti-item/components/item-show-correct-response.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "InlineChoiceInternalCorrectResponse",
          "declaration": {
            "name": "InlineChoiceInternalCorrectResponse",
            "module": "src/lib/qti-item/components/item-show-correct-response.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Match",
          "declaration": {
            "name": "Match",
            "module": "src/lib/qti-item/components/item-show-correct-response.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "MatchFullCorrectResponse",
          "declaration": {
            "name": "MatchFullCorrectResponse",
            "module": "src/lib/qti-item/components/item-show-correct-response.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "MatchTabular",
          "declaration": {
            "name": "MatchTabular",
            "module": "src/lib/qti-item/components/item-show-correct-response.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "MultipleInteractions",
          "declaration": {
            "name": "MultipleInteractions",
            "module": "src/lib/qti-item/components/item-show-correct-response.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "MultipleResponseFullCorrectResponse",
          "declaration": {
            "name": "MultipleResponseFullCorrectResponse",
            "module": "src/lib/qti-item/components/item-show-correct-response.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "MultipleResponseInternalCorrectResponse",
          "declaration": {
            "name": "MultipleResponseInternalCorrectResponse",
            "module": "src/lib/qti-item/components/item-show-correct-response.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "NoCorrectResponse",
          "declaration": {
            "name": "NoCorrectResponse",
            "module": "src/lib/qti-item/components/item-show-correct-response.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "SelectPoint",
          "declaration": {
            "name": "SelectPoint",
            "module": "src/lib/qti-item/components/item-show-correct-response.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "SelectPointMultipleNoAreaMapping",
          "declaration": {
            "name": "SelectPointMultipleNoAreaMapping",
            "module": "src/lib/qti-item/components/item-show-correct-response.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Slider",
          "declaration": {
            "name": "Slider",
            "module": "src/lib/qti-item/components/item-show-correct-response.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "TextEntryFullCorrectResponse",
          "declaration": {
            "name": "TextEntryFullCorrectResponse",
            "module": "src/lib/qti-item/components/item-show-correct-response.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "TextEntryInternalCorrectResponse",
          "declaration": {
            "name": "TextEntryInternalCorrectResponse",
            "module": "src/lib/qti-item/components/item-show-correct-response.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-item/components/item-show-correct-response.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ItemShowCorrectResponse",
          "members": [
            {
              "kind": "method",
              "name": "_getDisplayedText",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string"
                }
              }
            },
            {
              "kind": "field",
              "name": "_hasCorrectResponse",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_previousActiveItem",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "''"
            },
            {
              "kind": "method",
              "name": "_toggleState",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "computedContext",
              "type": {
                "text": "ComputedItemContext | undefined"
              },
              "privacy": "public",
              "parsedType": {
                "text": "{ identifier: string, href: string, correct: false | true, incorrect: false | true, completed: false | true, adaptive: false | true, timeDependent: false | true, title: string, label: string, score: number, maxScore: number, completionStatus: string, variables: readonly VariableDeclaration<string | string[]>[] } | undefined"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "hideCorrectText",
              "type": {
                "text": "string"
              },
              "default": "'Hide correct response'",
              "attribute": "hideCorrectText"
            },
            {
              "kind": "field",
              "name": "noCorrectResponseText",
              "type": {
                "text": "string"
              },
              "default": "'No correct response specified'",
              "attribute": "noCorrectResponseText"
            },
            {
              "kind": "field",
              "name": "showCorrectText",
              "type": {
                "text": "string"
              },
              "default": "'Show correct response'",
              "attribute": "showCorrectText"
            },
            {
              "kind": "field",
              "name": "shown",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "shown",
              "reflects": true
            }
          ],
          "events": [
            {
              "name": "item-show-correct-response",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "hideCorrectText",
              "type": {
                "text": "string"
              },
              "default": "'Hide correct response'",
              "fieldName": "hideCorrectText"
            },
            {
              "name": "noCorrectResponseText",
              "type": {
                "text": "string"
              },
              "default": "'No correct response specified'",
              "fieldName": "noCorrectResponseText"
            },
            {
              "name": "showCorrectText",
              "type": {
                "text": "string"
              },
              "default": "'Show correct response'",
              "fieldName": "showCorrectText"
            },
            {
              "name": "shown",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "shown"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "item-show-correct-response",
          "customElement": true,
          "modulePath": "src/lib/qti-item/components/item-show-correct-response.ts",
          "definitionPath": "src/lib/qti-item/components/item-show-correct-response.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "item-show-correct-response",
          "declaration": {
            "name": "ItemShowCorrectResponse",
            "module": "src/lib/qti-item/components/item-show-correct-response.ts"
          }
        },
        {
          "kind": "js",
          "name": "ItemShowCorrectResponse",
          "declaration": {
            "name": "ItemShowCorrectResponse",
            "module": "src/lib/qti-item/components/item-show-correct-response.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-item/components/print-item-variables.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Default",
          "type": {
            "text": "Story"
          },
          "default": "{ render: args => html` <qti-item> <div style=\"display: flex; gap: 1rem;\"> <item-container style=\"width: 400px\" item-url=${args['item-url']}> <template> <style> qti-assessment-item { padding: 1rem; display: block; aspect-ratio: 4 / 3; width: 800px; border: 2px solid blue; transform: scale(0.5); transform-origin: top left; } </style> </template> </item-container> <print-item-variables></print-item-variables> </div> </qti-item>` }"
        },
        {
          "kind": "variable",
          "name": "GraphicMatch",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { 'item-url': '/qti-test-package/items/graphic_gap_match.xml' // Set the new item URL here }, render: args => html` <qti-item> <div style=\"display: flex; gap: 1rem;\"> <item-container style=\"width: 400px\" item-url=${args['item-url']}> <template> <style> qti-assessment-item { padding: 1rem; display: block; aspect-ratio: 4 / 3; width: 800px; border: 2px solid blue; transform: scale(0.5); transform-origin: top left; } </style> </template> </item-container> <print-item-variables></print-item-variables> </div> </qti-item>` }"
        },
        {
          "kind": "variable",
          "name": "Match",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { 'item-url': '/qti-item/example-match.xml' // Set the new item URL here }, render: args => html` <qti-item> <div style=\"display: flex; gap: 1rem;\"> <item-container style=\"width: 400px\" item-url=${args['item-url']}> <template> <style> qti-assessment-item { padding: 1rem; display: block; aspect-ratio: 4 / 3; width: 800px; border: 2px solid blue; transform: scale(0.5); transform-origin: top left; } </style> </template> </item-container> <print-item-variables></print-item-variables> </div> </qti-item>` }"
        },
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta<typeof ItemContainer & { 'item-url': string }>"
          },
          "default": "{ component: 'item-container', args: { ...args, 'item-url': '/qti-item/example-choice-item.xml' }, argTypes, parameters: { actions: { handles: events } } // tags: ['autodocs', 'new'] }"
        },
        {
          "kind": "variable",
          "name": "MultipleResponse",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { 'item-url': '/qti-item/example-choice-multiple-item.xml' // Set the new item URL here }, render: args => html` <qti-item> <div style=\"display: flex; gap: 1rem;\"> <item-container style=\"width: 400px\" item-url=${args['item-url']}> <template> <style> qti-assessment-item { padding: 1rem; display: block; aspect-ratio: 4 / 3; width: 800px; border: 2px solid blue; transform: scale(0.5); transform-origin: top left; } </style> </template> </item-container> <print-item-variables></print-item-variables> </div> </qti-item>` }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/lib/qti-item/components/print-item-variables.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Default",
          "declaration": {
            "name": "Default",
            "module": "src/lib/qti-item/components/print-item-variables.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "GraphicMatch",
          "declaration": {
            "name": "GraphicMatch",
            "module": "src/lib/qti-item/components/print-item-variables.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Match",
          "declaration": {
            "name": "Match",
            "module": "src/lib/qti-item/components/print-item-variables.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "MultipleResponse",
          "declaration": {
            "name": "MultipleResponse",
            "module": "src/lib/qti-item/components/print-item-variables.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-item/components/print-item-variables.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PrintItemVariables",
          "members": [
            {
              "kind": "field",
              "name": "computedContext",
              "type": {
                "text": "ComputedItemContext | undefined"
              },
              "privacy": "protected",
              "parsedType": {
                "text": "{ identifier: string, href: string, correct: false | true, incorrect: false | true, completed: false | true, adaptive: false | true, timeDependent: false | true, title: string, label: string, score: number, maxScore: number, completionStatus: string, variables: readonly VariableDeclaration<string | string[]>[] } | undefined"
              }
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "print-item-variables",
          "customElement": true,
          "modulePath": "src/lib/qti-item/components/print-item-variables.ts",
          "definitionPath": "src/lib/qti-item/components/print-item-variables.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "print-item-variables",
          "declaration": {
            "name": "PrintItemVariables",
            "module": "src/lib/qti-item/components/print-item-variables.ts"
          }
        },
        {
          "kind": "js",
          "name": "PrintItemVariables",
          "declaration": {
            "name": "PrintItemVariables",
            "module": "src/lib/qti-item/components/print-item-variables.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-item/components/styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "btn",
          "default": "css` background-color: lightgray; ${form}; `"
        },
        {
          "kind": "variable",
          "name": "dis",
          "default": "css` cursor: not-allowed; opacity: 0.8; `"
        },
        {
          "kind": "variable",
          "name": "form",
          "default": "css` display: inline-flex; align-items: center; cursor: pointer; padding: 0.5rem 1rem; border-radius: 0.25rem; user-select: none; `"
        },
        {
          "kind": "variable",
          "name": "ind",
          "default": "css` ${form}; border: 1px solid gray; `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "btn",
          "declaration": {
            "name": "btn",
            "module": "src/lib/qti-item/components/styles.ts"
          }
        },
        {
          "kind": "js",
          "name": "dis",
          "declaration": {
            "name": "dis",
            "module": "src/lib/qti-item/components/styles.ts"
          }
        },
        {
          "kind": "js",
          "name": "form",
          "declaration": {
            "name": "form",
            "module": "src/lib/qti-item/components/styles.ts"
          }
        },
        {
          "kind": "js",
          "name": "ind",
          "declaration": {
            "name": "ind",
            "module": "src/lib/qti-item/components/styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-item/core/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "../components/print-item-variables"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "../components/item-show-correct-response"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "../components/item-container"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-item"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-item/core/qti-item.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`<qti-item>` is a custom element designed for rendering a single `qti-assessment-item`.\nIt can also host some functionalities to interact with the item like scoring, showing feedback, etc.\nPlacing a mandatory `<item-container>` inside '<qti-item>' will load or parse the item and render it.\nSee `<item-container>` for more details.\n\n```html\n<qti-item>\n  <item-container class=\"m-4 bg-white\" item-url=\"./path/to/item.xml\"></item-container>\n</qti-item>\n```",
          "name": "QtiItem",
          "members": [
            {
              "kind": "method",
              "name": "_handleAssessmentItemConnected",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<QtiAssessmentItem>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleItemContextChanged",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<{ itemContext: ItemContext }>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleShowCandidateCorrection",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<boolean>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleShowCorrectResponse",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<boolean>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleSwitchCorrectResponseMode",
              "privacy": "private",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<CorrectResponseMode>"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_onAssessmentItemConnected",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_onHandleShowCandidateCorrection",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_onHandleShowCorrectResponse",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_onHandleSwitchCorrectResponseMode",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_onItemContextChanged",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_qtiAssessmentItem",
              "type": {
                "text": "QtiAssessmentItem | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_updateItemVariablesInTestContext",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "identifier",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "variables",
                  "type": {
                    "text": "readonly VariableDeclaration<string | string[] | null>[]"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "computedContext",
              "type": {
                "text": "ComputedItemContext"
              },
              "privacy": "public",
              "parsedType": {
                "text": "{ identifier: string, href: string, correct: false | true, incorrect: false | true, completed: false | true, adaptive: false | true, timeDependent: false | true, title: string, label: string, score: number, maxScore: number, completionStatus: string, variables: readonly VariableDeclaration<string | string[]>[] }"
              }
            },
            {
              "kind": "field",
              "name": "configContext",
              "type": {
                "text": "ConfigContext"
              },
              "privacy": "public",
              "default": "{}"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "qti-item",
          "customElement": true,
          "modulePath": "src/lib/qti-item/core/qti-item.ts",
          "definitionPath": "src/lib/qti-item/core/qti-item.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-item",
          "declaration": {
            "name": "QtiItem",
            "module": "src/lib/qti-item/core/qti-item.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiItem",
          "declaration": {
            "name": "QtiItem",
            "module": "src/lib/qti-item/core/qti-item.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-item/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./core/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/components/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./test-navigation"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./test-next"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./test-prev"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./test-view"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./test-item-link"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./test-end-attempt"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./test-show-correct-response"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./test-paging-buttons-stamp"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./test-container"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./test-print-item-variables"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./test-section-buttons-stamp"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./test-section-link"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./test-print-context"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./test-stamp"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./test-scoring-buttons"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./test-view-toggle"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./test-scoring-feedback"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./test-check-item"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/components/styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "btn",
          "default": "css` background-color: lightgray; ${form}; `"
        },
        {
          "kind": "variable",
          "name": "dis",
          "default": "css` cursor: not-allowed; opacity: 0.8; `"
        },
        {
          "kind": "variable",
          "name": "form",
          "default": "css` display: inline-flex; align-items: center; cursor: pointer; padding: 0.5rem 1rem; border-radius: 0.25rem; user-select: none; `"
        },
        {
          "kind": "variable",
          "name": "ind",
          "default": "css` ${form}; border: 1px solid gray; `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "btn",
          "declaration": {
            "name": "btn",
            "module": "src/lib/qti-test/components/styles.ts"
          }
        },
        {
          "kind": "js",
          "name": "dis",
          "declaration": {
            "name": "dis",
            "module": "src/lib/qti-test/components/styles.ts"
          }
        },
        {
          "kind": "js",
          "name": "form",
          "declaration": {
            "name": "form",
            "module": "src/lib/qti-test/components/styles.ts"
          }
        },
        {
          "kind": "js",
          "name": "ind",
          "declaration": {
            "name": "ind",
            "module": "src/lib/qti-test/components/styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/components/test-check-item.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "TestCheckItem",
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "test-check-item",
          "customElement": true,
          "modulePath": "src/lib/qti-test/components/test-check-item.ts",
          "definitionPath": "src/lib/qti-test/components/test-check-item.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "test-check-item",
          "declaration": {
            "name": "TestCheckItem",
            "module": "src/lib/qti-test/components/test-check-item.ts"
          }
        },
        {
          "kind": "js",
          "name": "TestCheckItem",
          "declaration": {
            "name": "TestCheckItem",
            "module": "src/lib/qti-test/components/test-check-item.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/components/test-container.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta<TestContainer & { 'test-url': string }>"
          },
          "default": "{ component: 'test-container', args: { ...args, 'test-url': '/assets/qti-conformance/Basic/T4-T7/assessment.xml' }, argTypes, parameters: { actions: { handles: events } } }"
        },
        {
          "kind": "variable",
          "name": "TestDoc",
          "type": {
            "text": "Story"
          },
          "default": "{ render: (_, { loaded: { testDoc } }) => { return html` <qti-test navigate=\"item\"> <test-container .testDoc=${testDoc}></test-container> </qti-test> `; }, loaders: [ async ({ args }) => { const testDoc = qtiTransformTest() .load(args['test-url']) .then(api => api.htmlDoc()); return { testDoc }; } ], play: TestURL.play, tags: ['!autodocs'] }"
        },
        {
          "kind": "variable",
          "name": "TestURL",
          "type": {
            "text": "Story"
          },
          "default": "{ render: args => { return html`<qti-test navigate=\"item\">${template(args)}</qti-test>`; }, play: async ({ canvasElement }) => { //getAssessmentItemFromTestContainerByDataTitle const testElement = await getAssessmentItemFromTestContainerByDataTitle(canvasElement, 'T1 - Test Entry - Item 1'); expect(testElement).toBeInTheDocument(); } }"
        },
        {
          "kind": "variable",
          "name": "TestWithTemplate",
          "type": {
            "text": "Story"
          },
          "default": "{ render: args => { return html` <qti-test navigate=\"item\"> <test-navigation> <test-container test-url=${args['test-url']}> <template> <style> qti-assessment-test { display: block; border: 2px solid blue; } </style> </template> </test-container> </test-navigation> </qti-test> `; }, play: TestURL.play, tags: ['!autodocs'] }"
        },
        {
          "kind": "variable",
          "name": "TestXML",
          "type": {
            "text": "Story"
          },
          "default": "{ render: (_, { loaded: { testXML } }) => { return html` <qti-test navigate=\"item\"> <test-container .testXML=${testXML}></test-container> </qti-test> `; }, loaders: [ async ({ args }) => { const testXML = await qtiTransformTest() .load(args['test-url']) .then(api => api.xml()); return { testXML }; } ], play: TestURL.play, tags: ['!autodocs'] }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/lib/qti-test/components/test-container.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "TestDoc",
          "declaration": {
            "name": "TestDoc",
            "module": "src/lib/qti-test/components/test-container.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "TestURL",
          "declaration": {
            "name": "TestURL",
            "module": "src/lib/qti-test/components/test-container.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "TestWithTemplate",
          "declaration": {
            "name": "TestWithTemplate",
            "module": "src/lib/qti-test/components/test-container.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "TestXML",
          "declaration": {
            "name": "TestXML",
            "module": "src/lib/qti-test/components/test-container.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/components/test-container.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`<test-container>` is a custom element designed for hosting the qti-assessment-item.\nThe `qti-assessment-test` will be placed inside the shadow DOM of this element.\nThe element loads the test from the provided URL and renders it inside the shadow DOM.\n\n```html\n<qti-test>\n  <test-navigation>\n     <test-container class=\"m-4 bg-white\" test-url=\"./path/to/assessmenttest.xml\"></test-container>\n  </test-navigation>\n</qti-test>\n```",
          "name": "TestContainer",
          "members": [
            {
              "kind": "method",
              "name": "applyStyles",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "handleTestURLChange",
              "privacy": "protected",
              "description": "Callback function to transform the test after loading"
            },
            {
              "kind": "method",
              "name": "handleTestXMLChange",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "initializeTemplateContent",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "templateContent",
              "type": {
                "text": "null"
              },
              "privacy": "private",
              "default": "null",
              "description": "Template content if provided"
            },
            {
              "kind": "field",
              "name": "testDoc",
              "type": {
                "text": "DocumentFragment"
              },
              "default": "null",
              "description": "A parsed HTML document"
            },
            {
              "kind": "field",
              "name": "testURL",
              "type": {
                "text": "string"
              },
              "default": "null",
              "description": "URL of the item to load",
              "attribute": "test-url"
            },
            {
              "kind": "field",
              "name": "testXML",
              "type": {
                "text": "string"
              },
              "default": "null",
              "description": "The raw XML string"
            }
          ],
          "attributes": [
            {
              "name": "test-url",
              "type": {
                "text": "string"
              },
              "default": "null",
              "description": "URL of the item to load",
              "fieldName": "testURL"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "test-container",
          "customElement": true,
          "modulePath": "src/lib/qti-test/components/test-container.ts",
          "definitionPath": "src/lib/qti-test/components/test-container.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "test-container",
          "declaration": {
            "name": "TestContainer",
            "module": "src/lib/qti-test/components/test-container.ts"
          }
        },
        {
          "kind": "js",
          "name": "TestContainer",
          "declaration": {
            "name": "TestContainer",
            "module": "src/lib/qti-test/components/test-container.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/components/test-end-attempt.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Default",
          "type": {
            "text": "Story"
          },
          "default": "{ render: args => html` <qti-test navigate=\"item\"> <test-navigation> <!-- <test-print-item-variables></test-print-item-variables> --> <test-container test-url=\"/assets/qti-test-package/assessment.xml\"></test-container> ${template(args, html`End Attempt`)} <test-next>Volgende</test-next> </test-navigation> </qti-test>` }"
        },
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta<TestEndAttempt>"
          },
          "default": "{ component: 'test-end-attempt', args, argTypes, parameters: { actions: { handles: events } } }"
        },
        {
          "kind": "variable",
          "name": "Test",
          "type": {
            "text": "Story"
          },
          "default": "{ render: args => html` <qti-test navigate=\"item\"> <test-navigation> <!-- <test-print-item-variables> </test-print-item-variables> --> <test-container test-url=\"/assets/qti-test-package/assessment.xml\"> </test-container> <test-end-attempt ${spread(args)}>End Attempt</test-end-attempt> <test-next>Volgende</test-next> <test-item-link item-id=\"ITM-text_entry\">link</test-item-link> </test-navigation> </qti-test> `, play: async ({ canvasElement }) => { const canvas = within(canvasElement); const link = await canvas.findByShadowText('link'); const info = await getAssessmentItemFromTestContainerByDataTitle(canvasElement, 'Info Start'); await fireEvent.click(link); const nextButton = await canvas.findByShadowText('Volgende'); await waitFor(() => expect(nextButton).toBeEnabled()); const firstItem = await getAssessmentItemFromTestContainerByDataTitle(canvasElement, 'Richard III (Take 3)'); expect(firstItem).toBeInTheDocument(); // click end attempt const endAttemptButton = await findByShadowText(canvasElement, 'End Attempt'); endAttemptButton.click(); await new Promise(resolve => setTimeout(resolve, 0)); /* why is this necessary */ // check if incorrect feedback block is visible const incorrect = await canvas.findByShadowText('Incorrect'); expect(incorrect.assignedSlot).toBeVisible(); // type York in the text field const textEntryInteraction = await canvas.findByShadowRole<HTMLInputElement>('textbox'); await userEvent.type(textEntryInteraction, 'York'); endAttemptButton.click(); await new Promise(resolve => setTimeout(resolve, 0)); /* why is this necessary */ // check if correct feedback block is visible const correct = await canvas.findByShadowText('Correct'); expect(correct.assignedSlot).toBeVisible(); } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/lib/qti-test/components/test-end-attempt.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Default",
          "declaration": {
            "name": "Default",
            "module": "src/lib/qti-test/components/test-end-attempt.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Test",
          "declaration": {
            "name": "Test",
            "module": "src/lib/qti-test/components/test-end-attempt.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/components/test-end-attempt.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "TestEndAttempt",
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "test-end-attempt",
          "customElement": true,
          "modulePath": "src/lib/qti-test/components/test-end-attempt.ts",
          "definitionPath": "src/lib/qti-test/components/test-end-attempt.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "test-end-attempt",
          "declaration": {
            "name": "TestEndAttempt",
            "module": "src/lib/qti-test/components/test-end-attempt.ts"
          }
        },
        {
          "kind": "js",
          "name": "TestEndAttempt",
          "declaration": {
            "name": "TestEndAttempt",
            "module": "src/lib/qti-test/components/test-end-attempt.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/components/test-item-link.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Default",
          "type": {
            "text": "Story"
          },
          "default": "{ render: args => html` <qti-test navigate=\"item\"> <test-navigation> <test-container test-url=\"/assets/api/biologie/assessment.xml\"></test-container> ${template(args, html`Link to item`)} </test-navigation> </qti-test>` }"
        },
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta<TestItemLink>"
          },
          "default": "{ component: 'test-item-link', args: { ...args, 'item-id': 'ITM-32cjnu' }, argTypes, parameters: { actions: { handles: events } } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/lib/qti-test/components/test-item-link.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Default",
          "declaration": {
            "name": "Default",
            "module": "src/lib/qti-test/components/test-item-link.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/components/test-item-link.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "TestItemLink",
          "members": [
            {
              "kind": "method",
              "name": "_requestItem",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "identifier",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "itemId",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "null",
              "attribute": "item-id"
            }
          ],
          "events": [
            {
              "name": "qti-request-navigation",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "item-id",
              "type": {
                "text": "string"
              },
              "default": "null",
              "fieldName": "itemId"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "test-item-link",
          "customElement": true,
          "modulePath": "src/lib/qti-test/components/test-item-link.ts",
          "definitionPath": "src/lib/qti-test/components/test-item-link.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "test-item-link",
          "declaration": {
            "name": "TestItemLink",
            "module": "src/lib/qti-test/components/test-item-link.ts"
          }
        },
        {
          "kind": "js",
          "name": "TestItemLink",
          "declaration": {
            "name": "TestItemLink",
            "module": "src/lib/qti-test/components/test-item-link.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/components/test-navigation.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Default",
          "type": {
            "text": "Story"
          },
          "default": "{ render: args => html` <qti-test navigate=\"item\"> ${template(args, html` <test-container test-url=\"/assets/qti-test-package/assessment.xml\"></test-container>`)} </qti-test>` }"
        },
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta<TestNavigation>"
          },
          "default": "{ component: 'test-navigation', args, argTypes, parameters: { actions: { handles: events } } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/lib/qti-test/components/test-navigation.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Default",
          "declaration": {
            "name": "Default",
            "module": "src/lib/qti-test/components/test-navigation.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/components/test-navigation.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "TestNavigation",
          "members": [
            {
              "kind": "method",
              "name": "_extractDefaultValues",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Record<string, any>"
                }
              },
              "parameters": [
                {
                  "name": "declaration",
                  "type": {
                    "text": "Element"
                  }
                }
              ],
              "description": "Extract default values from a qti-context-declaration element"
            },
            {
              "kind": "method",
              "name": "_handleInteractionChanged",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleItemConnected",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleTestConnected",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleTestEndAttempt",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_event",
                  "type": {
                    "text": "CustomEvent"
                  }
                },
                {
                  "description": "The custom event object.",
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ],
              "description": "Handles the 'test-end-attempt' event."
            },
            {
              "kind": "method",
              "name": "_handleTestShowCandidateCorrection",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  },
                  "description": "The custom event object."
                }
              ],
              "description": "Handles the 'test-show-candidate-correction' event."
            },
            {
              "kind": "method",
              "name": "_handleTestShowCorrectResponse",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  },
                  "description": "The custom event object."
                }
              ],
              "description": "Handles the 'test-show-correct-response' event."
            },
            {
              "kind": "method",
              "name": "_handleTestUpdateOutcomeVariable",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_sessionContext",
              "type": {
                "text": "SessionContext | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_testContext",
              "type": {
                "text": "TestContext | undefined"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_testElement",
              "type": {
                "text": "QtiAssessmentTest"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "autoScoreItems",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "auto-score-items"
            },
            {
              "kind": "field",
              "name": "computedContext",
              "type": {
                "text": "ComputedContext"
              },
              "privacy": "protected",
              "parsedType": {
                "text": "{ view: '' | 'author' | 'candidate' | 'proctor' | 'scorer' | 'testConstructor' | 'tutor', identifier: string, title: string, testParts: { active?: boolean; identifier: string; navigationMode: 'linear' | 'nonlinear'; submissionMode: 'individual' | 'simultaneous'; sections: { active?: boolean; identifier: string; title: string; completed?: boolean; items: ComputedItem[]; }[]; }[] }"
              }
            },
            {
              "kind": "field",
              "name": "configContext",
              "type": {
                "text": "ConfigContext"
              },
              "privacy": "public",
              "default": "{}"
            },
            {
              "kind": "field",
              "name": "identifier",
              "default": "undefined",
              "attribute": "identifier"
            },
            {
              "kind": "field",
              "name": "initContext",
              "type": {
                "text": "{ identifier: string; [key: string]: any }[]"
              },
              "privacy": "public",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "qtiContext",
              "type": {
                "text": "QtiContext"
              },
              "privacy": "public",
              "default": "{ QTI_CONTEXT: { testIdentifier: '', candidateIdentifier: '', environmentIdentifier: 'default' } }"
            }
          ],
          "events": [
            {
              "name": "qti-computed-context-updated",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "auto-score-items",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "autoScoreItems"
            },
            {
              "name": "identifier",
              "default": "undefined",
              "fieldName": "identifier"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "test-navigation",
          "customElement": true,
          "modulePath": "src/lib/qti-test/components/test-navigation.ts",
          "definitionPath": "src/lib/qti-test/components/test-navigation.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "test-navigation",
          "declaration": {
            "name": "TestNavigation",
            "module": "src/lib/qti-test/components/test-navigation.ts"
          }
        },
        {
          "kind": "js",
          "name": "TestNavigation",
          "declaration": {
            "name": "TestNavigation",
            "module": "src/lib/qti-test/components/test-navigation.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/components/test-next.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Default",
          "type": {
            "text": "Story"
          },
          "default": "{ render: args => html` <qti-test navigate=\"item\"> <test-navigation> <test-container test-url=\"/assets/qti-conformance/Basic/T4-T7/assessment.xml\"> </test-container> <test-prev>vorige</test-prev> ${template(args, html`volgende`)} </test-navigation> </qti-test> ` }"
        },
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta<TestNext>"
          },
          "default": "{ component: 'test-next', args, argTypes, parameters: { actions: { handles: events } } }"
        },
        {
          "kind": "variable",
          "name": "Test",
          "type": {
            "text": "Story"
          },
          "default": "{ render: args => html` <qti-test navigate=\"item\"> <test-navigation> <test-container test-url=\"/assets/qti-conformance/Basic/T4-T7/assessment.xml\"> </test-container> <test-prev>vorige</test-prev> <test-next>volgende</test-next> </test-navigation> </qti-test> `, play: async ({ canvasElement }) => { const canvas = within(canvasElement); const prevButton = canvas.getByShadowText('vorige'); const nextButton = canvas.getByShadowText('volgende'); await waitFor(() => expect(nextButton).toBeEnabled()); const firstItem = await getAssessmentItemFromTestContainerByDataTitle(canvasElement, 'T1 - Test Entry - Item 1'); expect(firstItem).toBeInTheDocument(); await new Promise(resolve => setTimeout(resolve, 500)); await fireEvent.click(nextButton); const secondItem = await getAssessmentItemFromTestContainerByDataTitle( canvasElement, 'T1 - Choice Interaction - Multiple Cardinality' ); expect(secondItem).toBeInTheDocument(); await fireEvent.click(nextButton); await new Promise(resolve => setTimeout(resolve, 1)); // minimal time to let the next button know about the update on sessionContext await fireEvent.click(nextButton); await new Promise(resolve => setTimeout(resolve, 1)); // minimal time to let the next button know about the update on sessionContext await fireEvent.click(nextButton); await new Promise(resolve => setTimeout(resolve, 1)); // minimal time to let the next button know about the update on sessionContext expect(nextButton).toBeDisabled(); await fireEvent.click(prevButton); await new Promise(resolve => setTimeout(resolve, 1)); // minimal time to let the next button know about the update on sessionContext expect(nextButton).toBeEnabled(); } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/lib/qti-test/components/test-next.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Default",
          "declaration": {
            "name": "Default",
            "module": "src/lib/qti-test/components/test-next.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Test",
          "declaration": {
            "name": "Test",
            "module": "src/lib/qti-test/components/test-next.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/components/test-next.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Represents a custom element for navigating to the next test item.",
          "name": "TestNext",
          "members": [
            {
              "kind": "method",
              "name": "_handleTestElementChange",
              "parameters": [
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "ComputedContext"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "ComputedContext"
                  }
                }
              ],
              "type": {
                "text": "_handleTestElementChange(_oldValue: ComputedContext, newValue: ComputedContext) => void"
              }
            },
            {
              "kind": "field",
              "name": "_internalDisabled",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "_internals",
              "type": {
                "text": "ElementInternals"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_requestItem",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "identifier",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "ariaLabel",
              "type": {
                "text": "string"
              },
              "default": "'Next item'"
            },
            {
              "kind": "method",
              "name": "checkDisabled",
              "type": {
                "text": "checkDisabled() => void"
              }
            },
            {
              "kind": "field",
              "name": "computedContext",
              "type": {
                "text": "ComputedContext"
              },
              "privacy": "protected",
              "parsedType": {
                "text": "{ view: '' | 'author' | 'candidate' | 'proctor' | 'scorer' | 'testConstructor' | 'tutor', identifier: string, title: string, testParts: { active?: boolean; identifier: string; navigationMode: 'linear' | 'nonlinear'; submissionMode: 'individual' | 'simultaneous'; sections: { active?: boolean; identifier: string; title: string; completed?: boolean; items: ComputedItem[]; }[]; }[] }"
              }
            },
            {
              "kind": "field",
              "name": "itemIndex",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "role",
              "type": {
                "text": "string"
              },
              "default": "'button'"
            },
            {
              "kind": "field",
              "name": "sectionItems",
              "type": {
                "text": "ComputedItem[]"
              }
            }
          ],
          "events": [
            {
              "name": "qti-request-navigation",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "fieldName": "_internalDisabled"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "test-next",
          "customElement": true,
          "modulePath": "src/lib/qti-test/components/test-next.ts",
          "definitionPath": "src/lib/qti-test/components/test-next.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "test-next",
          "declaration": {
            "name": "TestNext",
            "module": "src/lib/qti-test/components/test-next.ts"
          }
        },
        {
          "kind": "js",
          "name": "TestNext",
          "declaration": {
            "name": "TestNext",
            "module": "src/lib/qti-test/components/test-next.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/components/test-paging-buttons-stamp.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Default",
          "type": {
            "text": "Story"
          },
          "default": "{ render: args => html` <qti-test navigate=\"item\"> <test-navigation> <test-container test-url=\"/assets/api/biologie/assessment.xml\"></test-container> ${template( args, html`<template> <test-item-link item-id=\"{{ item.identifier }}\"> {{ item.index }} </test-item-link> </template>` )} </test-navigation> </qti-test>` }"
        },
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta<TestPagingButtonsStamp>"
          },
          "default": "{ component: 'test-paging-buttons-stamp', args, argTypes, parameters: { actions: { handles: events } } }"
        },
        {
          "kind": "variable",
          "name": "Title",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => html` <qti-test auto-score-items> <test-navigation .initContext=${[ { identifier: 'ITEM001', title: 'Test title', volgnummer: 2 }, { identifier: 'ITEM002', title: 'Test title 2', volgnummer: 2 } ]} .configContext=${{ infoItemCategory: 'info' }} .sessionContext=${{ navItemRefId: 'ITEM001' }} > <test-container test-url=\"/assets/api/kennisnet-1/AssessmentTest.xml\"></test-container> <test-paging-buttons-stamp data-testid=\"paging-buttons\"> <style> dl { display: grid; grid-template-columns: max-content 1fr; column-gap: 10px; } dt { font-weight: bold; } dd { margin: 0; /* Remove default margin */ } </style> <template> <test-item-link class=\"{{item.active ? 'active' : ''}}\" item-id=\"{{ item.identifier }}\" >{{ item.index }}:{{ item.title }}</test-item-link > </template> </test-paging-buttons-stamp> </test-navigation> </qti-test> `, play: async ({ canvasElement }) => { const canvas = within(canvasElement); // expect(nextButton).toBeDisabled(); const pagingButtons = await canvas.findByTestId('paging-buttons'); await waitFor( () => { const button = pagingButtons.querySelector('test-item-link'); if (!button) { throw new Error('interaction not loaded yet'); } }, { timeout: 5000 } ); // const allButtons = pagingButtons.querySelectorAll('test-item-link'); // waitFor(() => expect(allButtons[0].textContent).toBe(':')); // waitFor(() => expect(allButtons[1].textContent).toBe('1:Test title')); // await new Promise(resolve => setTimeout(resolve, 500)); // await fireEvent.click(allButtons[6]); // await new Promise(resolve => setTimeout(resolve, 500)); // waitFor(() => expect(allButtons[0].textContent).toBe(':')); // expect(allButtons[0].textContent).toBe('1:'); // const firstItem = await findByShadowTitle(canvasElement, 'T1 - Test Entry - Item 1'); // expect(firstItem).toBeInTheDocument(); // await new Promise(resolve => setTimeout(resolve, 50)); // await fireEvent.click(linkButton); // await new Promise(resolve => setTimeout(resolve, 50)); // const secondItem = await findByShadowTitle(canvasElement, 'T1 - Choice Interaction - Multiple Cardinality'); // expect(secondItem).toBeInTheDocument(); // await fireEvent.click(linkButton); // await new Promise(resolve => setTimeout(resolve, 50)); // await fireEvent.click(linkButton); // await new Promise(resolve => setTimeout(resolve, 50)); // expect(linkButton).toBeDisabled(); } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/lib/qti-test/components/test-paging-buttons-stamp.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Default",
          "declaration": {
            "name": "Default",
            "module": "src/lib/qti-test/components/test-paging-buttons-stamp.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Title",
          "declaration": {
            "name": "Title",
            "module": "src/lib/qti-test/components/test-paging-buttons-stamp.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/components/test-paging-buttons-stamp.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "TestPagingButtonsStamp",
          "members": [
            {
              "kind": "field",
              "name": "_internals",
              "type": {
                "text": "ElementInternals"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "ariaLabel",
              "type": {
                "text": "string"
              },
              "default": "'pagination'"
            },
            {
              "kind": "field",
              "name": "computedContext",
              "type": {
                "text": "ComputedContext"
              },
              "privacy": "private",
              "parsedType": {
                "text": "{ view: '' | 'author' | 'candidate' | 'proctor' | 'scorer' | 'testConstructor' | 'tutor', identifier: string, title: string, testParts: { active?: boolean; identifier: string; navigationMode: 'linear' | 'nonlinear'; submissionMode: 'individual' | 'simultaneous'; sections: { active?: boolean; identifier: string; title: string; completed?: boolean; items: ComputedItem[]; }[]; }[] }"
              }
            },
            {
              "kind": "field",
              "name": "myTemplate",
              "type": {
                "text": "TemplateFunction"
              }
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "deprecated": "test-paging-buttons-stamp is deprecated and will be removed in the future.",
          "tagName": "test-paging-buttons-stamp",
          "customElement": true,
          "modulePath": "src/lib/qti-test/components/test-paging-buttons-stamp.ts",
          "definitionPath": "src/lib/qti-test/components/test-paging-buttons-stamp.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "test-paging-buttons-stamp",
          "declaration": {
            "name": "TestPagingButtonsStamp",
            "module": "src/lib/qti-test/components/test-paging-buttons-stamp.ts"
          }
        },
        {
          "kind": "js",
          "name": "TestPagingButtonsStamp",
          "declaration": {
            "name": "TestPagingButtonsStamp",
            "module": "src/lib/qti-test/components/test-paging-buttons-stamp.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/components/test-prev.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Default",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => html` <qti-test> <test-navigation> <test-container test-url=\"/assets/qti-conformance/Basic/T4-T7/assessment.xml\"> </test-container> ${template(args, html`vorige`)} <test-next>volgende</test-next> </test-navigation> </qti-test> ` }"
        },
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta<TestPrev>"
          },
          "default": "{ component: 'test-prev', args, argTypes, parameters: { actions: { handles: events } } }"
        },
        {
          "kind": "variable",
          "name": "Test",
          "type": {
            "text": "Story"
          },
          "default": "{ render: args => html` <qti-test navigate=\"item\"> <test-navigation> <test-container test-url=\"/assets/qti-conformance/Basic/T4-T7/assessment.xml\"> </test-container> <test-prev>vorige</test-prev> <test-next>volgende</test-next> </test-navigation> <test-item-link item-id=\"t1-test-entry-item4\">link</test-item-link> </qti-test> `, play: async ({ canvasElement }) => { const canvas = within(canvasElement); const link = await canvas.findByShadowText('link'); await getAssessmentItemFromTestContainerByDataTitle(canvasElement, 'T1 - Test Entry - Item 1'); await fireEvent.click(link); const prevButton = canvas.getByShadowText('vorige'); const nextButton = canvas.getByShadowText('volgende'); expect(prevButton).toBeDisabled(); const firstItem = await getAssessmentItemFromTestContainerByDataTitle( canvasElement, 'T1 - Extended Text Interaction' ); expect(prevButton).not.toBeDisabled(); expect(firstItem).toBeInTheDocument(); await new Promise(resolve => setTimeout(resolve, 1)); await fireEvent.click(prevButton); await new Promise(resolve => setTimeout(resolve, 1)); await fireEvent.click(prevButton); await new Promise(resolve => setTimeout(resolve, 1)); await fireEvent.click(prevButton); const secondItem = await getAssessmentItemFromTestContainerByDataTitle(canvasElement, 'T1 - Test Entry - Item 1'); expect(secondItem).toBeInTheDocument(); expect(prevButton).toBeDisabled(); await fireEvent.click(nextButton); await new Promise(resolve => setTimeout(resolve, 1)); expect(prevButton).not.toBeDisabled(); } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/lib/qti-test/components/test-prev.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Default",
          "declaration": {
            "name": "Default",
            "module": "src/lib/qti-test/components/test-prev.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Test",
          "declaration": {
            "name": "Test",
            "module": "src/lib/qti-test/components/test-prev.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/components/test-prev.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Represents a custom element for navigating to the previous test item.",
          "name": "TestPrev",
          "members": [
            {
              "kind": "method",
              "name": "_handleTestElementChange",
              "parameters": [
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "ComputedContext"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "ComputedContext"
                  }
                }
              ],
              "type": {
                "text": "_handleTestElementChange(_oldValue: ComputedContext, newValue: ComputedContext) => void"
              }
            },
            {
              "kind": "field",
              "name": "_internalDisabled",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "_requestItem",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "identifier",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "checkDisabled",
              "type": {
                "text": "checkDisabled() => void"
              }
            },
            {
              "kind": "field",
              "name": "computedContext",
              "type": {
                "text": "ComputedContext"
              },
              "privacy": "private",
              "parsedType": {
                "text": "{ view: '' | 'author' | 'candidate' | 'proctor' | 'scorer' | 'testConstructor' | 'tutor', identifier: string, title: string, testParts: { active?: boolean; identifier: string; navigationMode: 'linear' | 'nonlinear'; submissionMode: 'individual' | 'simultaneous'; sections: { active?: boolean; identifier: string; title: string; completed?: boolean; items: ComputedItem[]; }[]; }[] }"
              }
            },
            {
              "kind": "field",
              "name": "itemIndex",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "sectionItems",
              "type": {
                "text": "ComputedItem[]"
              }
            }
          ],
          "events": [
            {
              "name": "qti-request-navigation",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "fieldName": "_internalDisabled"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "test-prev",
          "customElement": true,
          "modulePath": "src/lib/qti-test/components/test-prev.ts",
          "definitionPath": "src/lib/qti-test/components/test-prev.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "test-prev",
          "declaration": {
            "name": "TestPrev",
            "module": "src/lib/qti-test/components/test-prev.ts"
          }
        },
        {
          "kind": "js",
          "name": "TestPrev",
          "declaration": {
            "name": "TestPrev",
            "module": "src/lib/qti-test/components/test-prev.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/components/test-print-context.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Default",
          "type": {
            "text": "Story"
          },
          "default": "{ render: args => html` <qti-test navigate=\"item\"> <test-navigation> <test-container test-url=\"/assets/api/biologie/assessment.xml\"></test-container> ${template(args)} <test-next>Volgende</test-next> </test-navigation> </qti-test>` }"
        },
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta<TestPrintContext>"
          },
          "default": "{ component: 'test-print-context', args, argTypes, parameters: { actions: { handles: events } } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/lib/qti-test/components/test-print-context.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Default",
          "declaration": {
            "name": "Default",
            "module": "src/lib/qti-test/components/test-print-context.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/components/test-print-context.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "TestPrintContext",
          "members": [
            {
              "kind": "field",
              "name": "computedContext",
              "type": {
                "text": "ComputedContext | undefined"
              },
              "privacy": "public",
              "parsedType": {
                "text": "{ view: '' | 'author' | 'candidate' | 'proctor' | 'scorer' | 'testConstructor' | 'tutor', identifier: string, title: string, testParts: { active?: boolean; identifier: string; navigationMode: 'linear' | 'nonlinear'; submissionMode: 'individual' | 'simultaneous'; sections: { active?: boolean; identifier: string; title: string; completed?: boolean; items: ComputedItem[]; }[]; }[] } | undefined"
              }
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "test-print-context",
          "customElement": true,
          "modulePath": "src/lib/qti-test/components/test-print-context.ts",
          "definitionPath": "src/lib/qti-test/components/test-print-context.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "test-print-context",
          "declaration": {
            "name": "TestPrintContext",
            "module": "src/lib/qti-test/components/test-print-context.ts"
          }
        },
        {
          "kind": "js",
          "name": "TestPrintContext",
          "declaration": {
            "name": "TestPrintContext",
            "module": "src/lib/qti-test/components/test-print-context.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/components/test-print-item-variables.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Default",
          "type": {
            "text": "Story"
          },
          "default": "{ render: args => html` <qti-test navigate=\"item\"> <test-navigation> <test-container test-url=\"/assets/api/biologie/assessment.xml\"></test-container> ${template(args)} <test-next>Volgende</test-next> </test-navigation> </qti-test>` }"
        },
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta<TestPrintVariables>"
          },
          "default": "{ component: 'test-print-item-variables', args, argTypes, parameters: { actions: { handles: events } } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/lib/qti-test/components/test-print-item-variables.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Default",
          "declaration": {
            "name": "Default",
            "module": "src/lib/qti-test/components/test-print-item-variables.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/components/test-print-item-variables.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "TestPrintVariables",
          "members": [
            {
              "kind": "field",
              "name": "computedContext",
              "type": {
                "text": "ComputedContext | undefined"
              },
              "privacy": "public",
              "parsedType": {
                "text": "{ view: '' | 'author' | 'candidate' | 'proctor' | 'scorer' | 'testConstructor' | 'tutor', identifier: string, title: string, testParts: { active?: boolean; identifier: string; navigationMode: 'linear' | 'nonlinear'; submissionMode: 'individual' | 'simultaneous'; sections: { active?: boolean; identifier: string; title: string; completed?: boolean; items: ComputedItem[]; }[]; }[] } | undefined"
              }
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "test-print-item-variables",
          "customElement": true,
          "modulePath": "src/lib/qti-test/components/test-print-item-variables.ts",
          "definitionPath": "src/lib/qti-test/components/test-print-item-variables.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "test-print-item-variables",
          "declaration": {
            "name": "TestPrintVariables",
            "module": "src/lib/qti-test/components/test-print-item-variables.ts"
          }
        },
        {
          "kind": "js",
          "name": "TestPrintVariables",
          "declaration": {
            "name": "TestPrintVariables",
            "module": "src/lib/qti-test/components/test-print-item-variables.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/components/test-scoring-buttons.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Default",
          "type": {
            "text": "Story"
          },
          "default": "{ render: args => html` <qti-test navigate=\"item\"> <test-navigation> <test-container test-url=\"/assets/test-scoring-buttons/assessment.xml\"></test-container> ${template( args, html`<template> <template type=\"repeat\" repeat=\"{{ scores }}\"> <label> <input type=\"radio\" ?checked=\"{{item == score}}\" name=\"scoring-buttons\" value=\"{{item}}\" /> <span>{{ item }}</span> </label> </template> </template>` )} <test-next>Volgende</test-next> <test-stamp> <template> {{ item.score }} </template> </test-stamp> </test-navigation> </qti-test>` }"
        },
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta<TestScoringButtons>"
          },
          "default": "{ component: 'test-scoring-buttons', args, argTypes, parameters: { actions: { handles: events } } }"
        },
        {
          "kind": "variable",
          "name": "Test",
          "type": {
            "text": "Story"
          },
          "default": "{ render: Default.render, play: async ({ canvasElement }) => { const assessmentTest = await getAssessmentTest(canvasElement); expect(assessmentTest).toBeInTheDocument(); // // 2 Assume the candidate rubric is not visible // const rubricElement = await canvas.findByShadowText('candidate rubric block'); // expect(rubricElement).toBeVisible(); // // 3 Select the candidate view // // 4 Wait for the candidate rubric to be visible // expect(rubricElement).toBeVisible(); // // 5 Assume correctResponse is not set // const firstChoiceElement = await canvas.findByShadowText('Correct'); // const afterStyle = getComputedStyle(firstChoiceElement, '::after'); // expect(afterStyle.content).toBe('none'); // // 6 Set the view to scorer // await userEvent.click(switchElement); // expect(afterStyle.content).not.toBe('none'); } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/lib/qti-test/components/test-scoring-buttons.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Default",
          "declaration": {
            "name": "Default",
            "module": "src/lib/qti-test/components/test-scoring-buttons.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Test",
          "declaration": {
            "name": "Test",
            "module": "src/lib/qti-test/components/test-scoring-buttons.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/components/test-scoring-buttons.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "TestScoringButtons",
          "members": [
            {
              "kind": "method",
              "name": "_changeOutcomeScore",
              "privacy": "private",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "computedContext",
              "type": {
                "text": "ComputedContext | undefined"
              },
              "privacy": "protected",
              "parsedType": {
                "text": "{ view: '' | 'author' | 'candidate' | 'proctor' | 'scorer' | 'testConstructor' | 'tutor', identifier: string, title: string, testParts: { active?: boolean; identifier: string; navigationMode: 'linear' | 'nonlinear'; submissionMode: 'individual' | 'simultaneous'; sections: { active?: boolean; identifier: string; title: string; completed?: boolean; items: ComputedItem[]; }[]; }[] } | undefined"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "myTemplate",
              "type": {
                "text": "TemplateFunction | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "view",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "view"
            }
          ],
          "events": [
            {
              "name": "test-update-outcome-variable",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "view",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "view"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "test-scoring-buttons",
          "customElement": true,
          "modulePath": "src/lib/qti-test/components/test-scoring-buttons.ts",
          "definitionPath": "src/lib/qti-test/components/test-scoring-buttons.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "test-scoring-buttons",
          "declaration": {
            "name": "TestScoringButtons",
            "module": "src/lib/qti-test/components/test-scoring-buttons.ts"
          }
        },
        {
          "kind": "js",
          "name": "TestScoringButtons",
          "declaration": {
            "name": "TestScoringButtons",
            "module": "src/lib/qti-test/components/test-scoring-buttons.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/components/test-scoring-feedback.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "TestScoringFeedback",
          "members": [
            {
              "kind": "field",
              "name": "computedContext",
              "type": {
                "text": "ComputedContext | undefined"
              },
              "privacy": "protected",
              "parsedType": {
                "text": "{ view: '' | 'author' | 'candidate' | 'proctor' | 'scorer' | 'testConstructor' | 'tutor', identifier: string, title: string, testParts: { active?: boolean; identifier: string; navigationMode: 'linear' | 'nonlinear'; submissionMode: 'individual' | 'simultaneous'; sections: { active?: boolean; identifier: string; title: string; completed?: boolean; items: ComputedItem[]; }[]; }[] } | undefined"
              }
            },
            {
              "kind": "field",
              "name": "view",
              "type": {
                "text": "View"
              },
              "privacy": "public",
              "default": "null",
              "attribute": "view",
              "parsedType": {
                "text": "'' | 'author' | 'candidate' | 'proctor' | 'scorer' | 'testConstructor' | 'tutor'"
              }
            }
          ],
          "attributes": [
            {
              "name": "view",
              "type": {
                "text": "View"
              },
              "default": "null",
              "fieldName": "view",
              "parsedType": {
                "text": "'' | 'author' | 'candidate' | 'proctor' | 'scorer' | 'testConstructor' | 'tutor'"
              }
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "test-scoring-feedback",
          "customElement": true,
          "modulePath": "src/lib/qti-test/components/test-scoring-feedback.ts",
          "definitionPath": "src/lib/qti-test/components/test-scoring-feedback.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "test-scoring-feedback",
          "declaration": {
            "name": "TestScoringFeedback",
            "module": "src/lib/qti-test/components/test-scoring-feedback.ts"
          }
        },
        {
          "kind": "js",
          "name": "TestScoringFeedback",
          "declaration": {
            "name": "TestScoringFeedback",
            "module": "src/lib/qti-test/components/test-scoring-feedback.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/components/test-section-buttons-stamp.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Default",
          "type": {
            "text": "Story"
          },
          "default": "{ render: args => html` <qti-test navigate=\"item\"> <!-- <template item-ref><div style=\"border:2px solid red\">{{ xmlDoc }}</div></template> --> <test-navigation> ${template( args, html`<template> <test-section-link section-id=\"{{ item.identifier }}\"> {{ item.identifier }} </test-section-link> </template>` )} <test-container test-url=\"/assets/qti-test-package-stimulus/assessment.xml\"></test-container> </test-navigation> </qti-test>`, play: async ({ canvasElement }) => { const canvas = within(canvasElement); const navInfoStart = await canvas.findByShadowText('info-start'); const navBasic = await canvas.findByShadowText('basic'); const navAdvanced = await canvas.findByShadowText('advanced'); const navInfoEnd = await canvas.findByShadowText('info-end'); const firstItem = await getAssessmentItemsFromTestContainer(canvasElement); expect(firstItem[0]).toBeInTheDocument(); // Spy on event listener const eventSpy = fn(); canvasElement.addEventListener('qti-assessment-stimulus-ref-connected', eventSpy); await fireEvent.click(navInfoStart); await fireEvent.click(navBasic); // Wait until the event has been triggered four times await new Promise<void>(resolve => { const checkEventCount = () => { if (eventSpy.mock.calls.length === 4) { fireEvent.click(navAdvanced); resolve(); } else { setTimeout(checkEventCount, 10); } }; checkEventCount(); }); await fireEvent.click(navInfoEnd); const lastItem = await getAssessmentItemFromTestContainerByDataTitle(canvasElement, 'Info End'); expect(lastItem).toBeInTheDocument(); } }"
        },
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta<TestSectionButtonsStamp>"
          },
          "default": "{ component: 'test-section-buttons-stamp', args, argTypes, parameters: { actions: { handles: events } } }"
        },
        {
          "kind": "variable",
          "name": "StimulusDeliveryPlatform",
          "type": {
            "text": "Story"
          },
          "default": "{ render: args => { const placeholderRef = createRef<HTMLElement>(); return html` <qti-test @qti-assessment-stimulus-ref-connected=${async (e: Event) => { e.preventDefault(); // this prevents the default behaviour of the item to set the stimulus content const stimulusRef = e.composedPath()[0] as QtiAssessmentStimulusRef; stimulusRef.updateStimulusRef(placeholderRef.value); }} > <test-navigation> ${template( args, html`<template> <test-section-link section-id=\"{{ item.identifier }}\"> {{ item.identifier }} </test-section-link> </template>` )} <div class=\"flex\"> <div class=\"qti-shared-stimulus\" ${ref(placeholderRef)}></div> <test-container test-url=\"/assets/qti-test-package-stimulus/assessment.xml\"></test-container> </div> </test-navigation> </qti-test>`; }, play: async ({ canvasElement }) => { const canvas = within(canvasElement); const navInfoStart = await canvas.findByShadowText('info-start'); const navBasic = await canvas.findByShadowText('basic'); const navAdvanced = await canvas.findByShadowText('advanced'); const navInfoEnd = await canvas.findByShadowText('info-end'); const testContainer = await getTestContainer(canvasElement); expect(testContainer).toBeInTheDocument(); await fireEvent.click(navInfoStart); await fireEvent.click(navBasic); await fireEvent.click(navAdvanced); await fireEvent.click(navInfoEnd); const lastItem = await getAssessmentItemFromTestContainerByDataTitle(canvasElement, 'Info End'); expect(lastItem).toBeInTheDocument(); } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/lib/qti-test/components/test-section-buttons-stamp.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Default",
          "declaration": {
            "name": "Default",
            "module": "src/lib/qti-test/components/test-section-buttons-stamp.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "StimulusDeliveryPlatform",
          "declaration": {
            "name": "StimulusDeliveryPlatform",
            "module": "src/lib/qti-test/components/test-section-buttons-stamp.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/components/test-section-buttons-stamp.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "TestSectionButtonsStamp",
          "members": [
            {
              "kind": "field",
              "name": "_internals",
              "type": {
                "text": "ElementInternals"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "ariaLabel",
              "type": {
                "text": "string"
              },
              "default": "'pagination'"
            },
            {
              "kind": "field",
              "name": "computedContext",
              "type": {
                "text": "ComputedContext"
              },
              "privacy": "private",
              "parsedType": {
                "text": "{ view: '' | 'author' | 'candidate' | 'proctor' | 'scorer' | 'testConstructor' | 'tutor', identifier: string, title: string, testParts: { active?: boolean; identifier: string; navigationMode: 'linear' | 'nonlinear'; submissionMode: 'individual' | 'simultaneous'; sections: { active?: boolean; identifier: string; title: string; completed?: boolean; items: ComputedItem[]; }[]; }[] }"
              }
            },
            {
              "kind": "field",
              "name": "myTemplate",
              "type": {
                "text": "TemplateFunction"
              }
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "deprecated": "test-section-buttons-stamp is deprecated and will be removed in the future.",
          "tagName": "test-section-buttons-stamp",
          "customElement": true,
          "modulePath": "src/lib/qti-test/components/test-section-buttons-stamp.ts",
          "definitionPath": "src/lib/qti-test/components/test-section-buttons-stamp.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "test-section-buttons-stamp",
          "declaration": {
            "name": "TestSectionButtonsStamp",
            "module": "src/lib/qti-test/components/test-section-buttons-stamp.ts"
          }
        },
        {
          "kind": "js",
          "name": "TestSectionButtonsStamp",
          "declaration": {
            "name": "TestSectionButtonsStamp",
            "module": "src/lib/qti-test/components/test-section-buttons-stamp.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/components/test-section-link.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Default",
          "type": {
            "text": "Story"
          },
          "default": "{ render: args => html` <qti-test navigate=\"item\"> <test-navigation> <test-container test-url=\"/assets/qti-test-package/assessment.xml\"></test-container> ${template(args, html`Link to section`)} </test-navigation> </qti-test>` }"
        },
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta<TestSectionLink & { 'section-id' }>"
          },
          "default": "{ component: 'test-section-link', args: { ...args, 'section-id': 'advanced' }, argTypes, parameters: { actions: { handles: events } } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/lib/qti-test/components/test-section-link.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Default",
          "declaration": {
            "name": "Default",
            "module": "src/lib/qti-test/components/test-section-link.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/components/test-section-link.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "TestSectionLink",
          "members": [
            {
              "kind": "method",
              "name": "_requestItem",
              "privacy": "private",
              "parameters": [
                {
                  "name": "identifier",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "sectionId",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "null",
              "attribute": "section-id"
            }
          ],
          "events": [
            {
              "name": "qti-request-navigation",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "section-id",
              "type": {
                "text": "string"
              },
              "default": "null",
              "fieldName": "sectionId"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "test-section-link",
          "customElement": true,
          "modulePath": "src/lib/qti-test/components/test-section-link.ts",
          "definitionPath": "src/lib/qti-test/components/test-section-link.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "test-section-link",
          "declaration": {
            "name": "TestSectionLink",
            "module": "src/lib/qti-test/components/test-section-link.ts"
          }
        },
        {
          "kind": "js",
          "name": "TestSectionLink",
          "declaration": {
            "name": "TestSectionLink",
            "module": "src/lib/qti-test/components/test-section-link.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/components/test-show-correct-response.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Default",
          "type": {
            "text": "Story"
          },
          "default": "{ render: args => html` <qti-test> <test-navigation> <test-container test-url=\"/assets/qti-test-package/assessment.xml\"> </test-container> ${template(args, html`Show Correct`)} <test-next>Volgende</test-next> </test-navigation> </qti-test>` }"
        },
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta<TestShowCorrectResponse>"
          },
          "default": "{ component: 'test-show-correct-response', args, argTypes, parameters: { actions: { handles: events } } }"
        },
        {
          "kind": "variable",
          "name": "Test",
          "type": {
            "text": "Story"
          },
          "default": "{ render: args => html` <qti-test navigate=\"item\"> <test-navigation> <!-- <test-print-item-variables></test-print-item-variables> --> <test-container test-url=\"/assets/qti-test-package/assessment.xml\"> </test-container> <test-show-correct-response ${spread(args)}>Show correct</test-show-correct-response> <test-next>Volgende</test-next> <test-item-link item-id=\"ITM-text_entry\">link</test-item-link> </test-navigation> </qti-test> `, play: async ({ canvasElement }) => { const canvas = within(canvasElement); const link = await canvas.findByShadowText('link'); await getAssessmentItemFromTestContainerByDataTitle(canvasElement, 'Info Start'); await fireEvent.click(link); const nextButton = await canvas.findByShadowText('Volgende'); await waitFor(() => expect(nextButton).toBeEnabled()); const firstItem = await getAssessmentItemFromTestContainerByDataTitle(canvasElement, 'Richard III (Take 3)'); expect(firstItem).toBeInTheDocument(); const showCorrectButton = await findByShadowText(canvasElement, 'Show correct response'); showCorrectButton.click(); const incorrect = await canvas.findByShadowText('York'); expect(incorrect).toBeInTheDocument(); } }"
        },
        {
          "kind": "variable",
          "name": "Test2",
          "type": {
            "text": "Story"
          },
          "default": "{ render: args => html` <qti-test navigate=\"item\"> <test-navigation> <test-container test-url=\"/assets/qti-test-package2/AssessmentTest.xml\"> </test-container> ${template(args, html`Show Correct`)} <test-prev>Vorige</test-prev> <test-next>Volgende</test-next> </test-navigation> </qti-test>`, play: async ({ canvasElement }) => { const canvas = within(canvasElement); const nextButton = await canvas.findByShadowText('Volgende'); await waitFor(() => expect(nextButton).toBeEnabled()); // check if show correct button is enabled const showCorrectButton = await findByShadowText(canvasElement, 'Show correct response'); await waitFor(() => expect(showCorrectButton).toBeEnabled()); // check the first alernative const firstAlternative = await findByShadowText(canvasElement, 'Richting het noorden'); await fireEvent.click(firstAlternative); // check if the item is added under the correct item-ref const itemRef = firstAlternative.closest('qti-assessment-item-ref'); expect(itemRef.getAttribute('identifier')).toBe('ODD-13122024-124755-RES1'); // navigate to the next item await fireEvent.click(nextButton); const secondAlternative = await findByShadowText(canvasElement, 'bipolaire staat'); await fireEvent.click(secondAlternative); await fireEvent.click(nextButton); // now the same item as item1 is show, check if no alternatives are selected const choiceA = await canvas.findByShadowText('Richting het noorden'); expect((choiceA.closest('qti-simple-choice') as QtiSimpleChoice).internals.states.has('--checked')).toBe(false); const choiceC = await canvas.findByShadowText('Richting het zuiden'); await fireEvent.click(choiceC); expect((choiceC.closest('qti-simple-choice') as QtiSimpleChoice).internals.states.has('--checked')).toBe(true); const prevButton = await canvas.findByShadowText('Vorige'); await fireEvent.click(prevButton); await await findByShadowText(canvasElement, 'bipolaire staat'); await fireEvent.click(prevButton); // check if A is selected again const choiceA2 = await canvas.findByShadowText('Richting het noorden'); expect((choiceA2.closest('qti-simple-choice') as QtiSimpleChoice).internals.states.has('--checked')).toBe(true); } }"
        },
        {
          "kind": "variable",
          "name": "TestFullCorrectResponse",
          "type": {
            "text": "Story"
          },
          "default": "{ render: args => html` <qti-test navigate=\"item\"> <test-navigation> <!-- <test-print-item-variables></test-print-item-variables> --> <test-container test-url=\"/assets/qti-test-package/assessment.xml\"> </test-container> <test-show-correct-response ${spread(args)}>Show correct</test-show-correct-response> <test-next>Volgende</test-next> <test-item-link item-id=\"ITM-text_entry\">link</test-item-link> </test-navigation> </qti-test> `, play: async ({ canvasElement }) => { const testNavigation = document.querySelector('test-navigation') as TestNavigation; testNavigation.configContext = { correctResponseMode: 'full' }; const canvas = within(canvasElement); const link = await canvas.findByShadowText('link'); await getAssessmentItemFromTestContainerByDataTitle(canvasElement, 'Info Start'); await fireEvent.click(link); const nextButton = await canvas.findByShadowText('Volgende'); await waitFor(() => expect(nextButton).toBeEnabled()); const firstItem = await getAssessmentItemFromTestContainerByDataTitle(canvasElement, 'Richard III (Take 3)'); expect(firstItem).toBeInTheDocument(); const showCorrectButton = await findByShadowText(canvasElement, 'Show correct response'); showCorrectButton.click(); const fullCorrectResponse = await canvas.findByShadowRole('full-correct-response'); expect(fullCorrectResponse).toBeInTheDocument(); } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/lib/qti-test/components/test-show-correct-response.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Default",
          "declaration": {
            "name": "Default",
            "module": "src/lib/qti-test/components/test-show-correct-response.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Test",
          "declaration": {
            "name": "Test",
            "module": "src/lib/qti-test/components/test-show-correct-response.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Test2",
          "declaration": {
            "name": "Test2",
            "module": "src/lib/qti-test/components/test-show-correct-response.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "TestFullCorrectResponse",
          "declaration": {
            "name": "TestFullCorrectResponse",
            "module": "src/lib/qti-test/components/test-show-correct-response.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/components/test-show-correct-response.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "TestShowCorrectResponse",
          "members": [
            {
              "kind": "method",
              "name": "_getDisplayedText",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string"
                }
              }
            },
            {
              "kind": "field",
              "name": "_previousActiveItem",
              "type": {
                "text": "unknown | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_toggleState",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "computedContext",
              "type": {
                "text": "ComputedContext | undefined"
              },
              "privacy": "public",
              "parsedType": {
                "text": "{ view: '' | 'author' | 'candidate' | 'proctor' | 'scorer' | 'testConstructor' | 'tutor', identifier: string, title: string, testParts: { active?: boolean; identifier: string; navigationMode: 'linear' | 'nonlinear'; submissionMode: 'individual' | 'simultaneous'; sections: { active?: boolean; identifier: string; title: string; completed?: boolean; items: ComputedItem[]; }[]; }[] } | undefined"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "hideCorrectText",
              "type": {
                "text": "string"
              },
              "default": "'Hide correct response'",
              "attribute": "hideCorrectText"
            },
            {
              "kind": "field",
              "name": "noCorrectResponseText",
              "type": {
                "text": "string"
              },
              "default": "'No correct response specified'",
              "attribute": "noCorrectResponseText"
            },
            {
              "kind": "field",
              "name": "showCorrectText",
              "type": {
                "text": "string"
              },
              "default": "'Show correct response'",
              "attribute": "showCorrectText"
            },
            {
              "kind": "field",
              "name": "shown",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "shown",
              "reflects": true
            }
          ],
          "events": [
            {
              "name": "test-show-correct-response",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            },
            {
              "name": "hideCorrectText",
              "type": {
                "text": "string"
              },
              "default": "'Hide correct response'",
              "fieldName": "hideCorrectText"
            },
            {
              "name": "noCorrectResponseText",
              "type": {
                "text": "string"
              },
              "default": "'No correct response specified'",
              "fieldName": "noCorrectResponseText"
            },
            {
              "name": "showCorrectText",
              "type": {
                "text": "string"
              },
              "default": "'Show correct response'",
              "fieldName": "showCorrectText"
            },
            {
              "name": "shown",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "shown"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "deprecated": "test-show-correct-response is deprecated and will be removed in the future.",
          "tagName": "test-show-correct-response",
          "customElement": true,
          "modulePath": "src/lib/qti-test/components/test-show-correct-response.ts",
          "definitionPath": "src/lib/qti-test/components/test-show-correct-response.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "test-show-correct-response",
          "declaration": {
            "name": "TestShowCorrectResponse",
            "module": "src/lib/qti-test/components/test-show-correct-response.ts"
          }
        },
        {
          "kind": "js",
          "name": "TestShowCorrectResponse",
          "declaration": {
            "name": "TestShowCorrectResponse",
            "module": "src/lib/qti-test/components/test-show-correct-response.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/components/test-stamp.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Default",
          "type": {
            "text": "Story"
          },
          "default": "{ render: args => html` <qti-test navigate=\"item\"> <test-navigation> <!-- <test-print-context></test-print-context> --> ${template(args, html`<template>{{ test.title }}</template>`)} ${template( args, html` <template> <ul> <li>{{ test.identifier }}</li> <li>{{ test.title }}</li> </ul> <ul> <li>{{ testpart.items }}</li> <li>{{ testpart.active }}</li> <li>{{ testpart.identifier }}</li> <li>{{ testpart.navigationMode }}</li> <li>{{ testpart.submissionMode }}</li> </ul> <ul> <li>{{ section.title }}</li> <li>{{ section.active }}</li> <li>{{ section.identifier }}</li> <li>{{required}}</li> <li>{{fixed}}</li> <li>{{visible}}</li> <li>{{keepTogether}}</li> <li>{{ section.items }}</li> </ul> <template type=\"if\" if=\"{{ testpart.items }}\"> <template type=\"repeat\" repeat=\"{{ testpart.items }}\"> <p>{{ item.identifier }}</p> </template> </template> </template> ` )} ${template( args, html` <template> <template type=\"if\" if=\"{{ section.items }}\"> <template type=\"repeat\" repeat=\"{{ section.items }}\"> <p>{{ item.identifier }}</p> </template> </template> </template> ` )} ${template(args, html`<template>{{ item.identifier }}</template>`)} <test-container test-url=\"/assets/api/kennisnet-1/AssessmentTest.xml\"></test-container> <test-next>Volgende</test-next> </test-navigation> </qti-test>` }"
        },
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta<TestStamp>"
          },
          "default": "{ component: 'test-stamp', args, argTypes, parameters: { actions: { handles: events } } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/lib/qti-test/components/test-stamp.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Default",
          "declaration": {
            "name": "Default",
            "module": "src/lib/qti-test/components/test-stamp.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/components/test-stamp.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "A custom web component that renders a test stamp using the Lit framework.\nThis component is deprecated and will be removed in the future.",
          "name": "TestStamp",
          "members": [
            {
              "kind": "field",
              "name": "computedContext",
              "type": {
                "text": "ComputedContext"
              },
              "privacy": "private",
              "parsedType": {
                "text": "{ view: '' | 'author' | 'candidate' | 'proctor' | 'scorer' | 'testConstructor' | 'tutor', identifier: string, title: string, testParts: { active?: boolean; identifier: string; navigationMode: 'linear' | 'nonlinear'; submissionMode: 'individual' | 'simultaneous'; sections: { active?: boolean; identifier: string; title: string; completed?: boolean; items: ComputedItem[]; }[]; }[] }"
              }
            },
            {
              "kind": "field",
              "name": "debug",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "description": "Indicates whether the component is in debug mode.\nWhen set to `true`, the available objects and properties (i.e.: stampContext) is displayed.",
              "attribute": "debug",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "myTemplate",
              "type": {
                "text": "TemplateFunction"
              }
            },
            {
              "kind": "field",
              "name": "stampContext",
              "type": {
                "text": "{\n    view?: View;\n    test?: unknown;\n    activeTestpart?: unknown;\n    activeSection?: unknown;\n    activeItem?: unknown;\n  }"
              },
              "privacy": "private",
              "default": "{ view: 'candidate', activeItem: {}, activeSection: { items: [] }, activeTestpart: { items: [], sections: [] }, test: {} }"
            }
          ],
          "events": [
            {
              "name": "qti-stamp-context-updated",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "debug",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Indicates whether the component is in debug mode.\nWhen set to `true`, the available objects and properties (i.e.: stampContext) is displayed.",
              "fieldName": "debug"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "test-stamp",
          "customElement": true,
          "modulePath": "src/lib/qti-test/components/test-stamp.ts",
          "definitionPath": "src/lib/qti-test/components/test-stamp.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "test-stamp",
          "declaration": {
            "name": "TestStamp",
            "module": "src/lib/qti-test/components/test-stamp.ts"
          }
        },
        {
          "kind": "js",
          "name": "TestStamp",
          "declaration": {
            "name": "TestStamp",
            "module": "src/lib/qti-test/components/test-stamp.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/components/test-view-toggle.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Default",
          "type": {
            "text": "Story"
          },
          "default": "{ render: args => html` <qti-test navigate=\"item\"> <test-navigation> <test-container test-url=\"/assets/qti-conformance/Basic/T4-T7/assessment.xml\"></test-container> ${template(args)} </test-navigation> </qti-test>` }"
        },
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta<TestViewToggle>"
          },
          "default": "{ component: 'test-view-toggle', args, argTypes, parameters: { actions: { handles: events } }, tags: ['no-tests'] }"
        },
        {
          "kind": "variable",
          "name": "Test",
          "type": {
            "text": "Story"
          },
          "default": "{ render: args => html` <qti-test navigate=\"item\"> <test-navigation> <test-container test-url=\"/assets/qti-conformance/Basic/T4-T7/assessment.xml\"> </test-container> <test-view-toggle ${spread(args)} role=\"switch\"> <template> {{ view === 'scorer' ? 'Scorer' : 'Candidate'}} </template> </test-view-toggle> </test-navigation> </qti-test> `, play: async ({ canvasElement }) => { const canvas = within(canvasElement); const switchElement = await canvas.findByShadowRole('switch'); // 1 Wait for the item to load const itemElement = await canvas.findByShadowTitle('T1 - Test Entry - Item 1'); expect(itemElement).toBeInTheDocument(); // 2 Assume the candidate rubric is not visible const rubricElement = await canvas.findByShadowText('candidate rubric block'); expect(rubricElement).toBeVisible(); // 3 Select the candidate view // 4 Wait for the candidate rubric to be visible expect(rubricElement).toBeVisible(); // 5 Assume correctResponse is not set const firstChoiceElement = await canvas.findByShadowText('Correct'); const afterStyle = getComputedStyle(firstChoiceElement, '::after'); expect(afterStyle.content).toBe('none'); // 6 Set the view to scorer await userEvent.click(switchElement); expect(afterStyle.content).not.toBe('none'); } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/lib/qti-test/components/test-view-toggle.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Default",
          "declaration": {
            "name": "Default",
            "module": "src/lib/qti-test/components/test-view-toggle.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Test",
          "declaration": {
            "name": "Test",
            "module": "src/lib/qti-test/components/test-view-toggle.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/components/test-view-toggle.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "TestViewToggle",
          "members": [
            {
              "kind": "method",
              "name": "_switchView",
              "parameters": [
                {
                  "name": "view",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "type": {
                "text": "_switchView(view: string) => void"
              }
            },
            {
              "kind": "field",
              "name": "myTemplate",
              "type": {
                "text": "any"
              }
            },
            {
              "kind": "field",
              "name": "sessionContext",
              "type": {
                "text": "SessionContext"
              },
              "privacy": "private"
            }
          ],
          "events": [
            {
              "name": "on-test-switch-view",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "test-view-toggle",
          "customElement": true,
          "modulePath": "src/lib/qti-test/components/test-view-toggle.ts",
          "definitionPath": "src/lib/qti-test/components/test-view-toggle.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "test-view-toggle",
          "declaration": {
            "name": "TestViewToggle",
            "module": "src/lib/qti-test/components/test-view-toggle.ts"
          }
        },
        {
          "kind": "js",
          "name": "TestViewToggle",
          "declaration": {
            "name": "TestViewToggle",
            "module": "src/lib/qti-test/components/test-view-toggle.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/components/test-view.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Default",
          "type": {
            "text": "Story"
          },
          "default": "{ render: args => html` <qti-test navigate=\"item\"> <test-navigation> <test-container test-url=\"/assets/qti-conformance/Basic/T4-T7/assessment.xml\"></test-container> ${template(args)} </test-navigation> </qti-test>` }"
        },
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta<TestViewClass>"
          },
          "default": "{ component: 'test-view', args, argTypes, parameters: { actions: { handles: events } }, tags: ['no-tests'] }"
        },
        {
          "kind": "variable",
          "name": "Test",
          "type": {
            "text": "Story"
          },
          "default": "{ render: args => html` <qti-test navigate=\"item\"> <test-navigation> <test-container test-url=\"/assets/qti-conformance/Basic/T4-T7/assessment.xml\"> </test-container> <test-view ${spread(args)}>vorige</test-view> </test-navigation> </qti-test> `, play: async ({ canvasElement }) => { const canvas = within(canvasElement); const selectElement = await canvas.findByShadowLabelText('view'); // 1 Wait for the item to load const itemElement = await canvas.findByShadowTitle('T1 - Test Entry - Item 1'); expect(itemElement).toBeInTheDocument(); // 2 Assume the candidate rubric is not visible const rubricElement = await canvas.findByShadowText('candidate rubric block'); expect(rubricElement).toBeVisible(); // 3 Select the candidate view await userEvent.selectOptions(selectElement, 'candidate'); // 4 Wait for the candidate rubric to be visible expect(rubricElement).toBeVisible(); // 5 Assume correctResponse is not set const firstChoiceElement = await canvas.findByShadowText('Correct'); const afterStyle = getComputedStyle(firstChoiceElement, '::after'); expect(afterStyle.content).toBe('none'); // 6 Set the view to scorer await userEvent.selectOptions(selectElement, 'scorer'); // Expect the correctResponse to be visible expect(afterStyle.content).not.toBe('none'); }, args: { 'view-options': 'candidate, scorer' } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/lib/qti-test/components/test-view.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Default",
          "declaration": {
            "name": "Default",
            "module": "src/lib/qti-test/components/test-view.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Test",
          "declaration": {
            "name": "Test",
            "module": "src/lib/qti-test/components/test-view.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/components/test-view.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "TestView",
          "members": [
            {
              "kind": "field",
              "name": "_handleViewOptionsChange",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_switchView",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "view",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "_viewOptions",
              "type": {
                "text": "string[]"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "DEFAULT_VIEW_OPTIONS",
              "type": {
                "text": "array"
              },
              "static": true,
              "default": "['author', 'candidate', 'proctor', 'scorer', 'testConstructor', 'tutor']"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "'view'",
              "description": "label accompanying the select view dropdown",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "sessionContext",
              "type": {
                "text": "SessionContext"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "updateViewOptions",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "viewOptions",
              "description": "The options to display in the dropdown, default: ['author', 'candidate', 'proctor', 'scorer', 'testConstructor', 'tutor']",
              "attribute": "view-options"
            }
          ],
          "events": [
            {
              "name": "on-test-switch-view",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "'view'",
              "description": "label accompanying the select view dropdown",
              "fieldName": "label"
            },
            {
              "name": "view-options",
              "description": "The options to display in the dropdown, default: ['author', 'candidate', 'proctor', 'scorer', 'testConstructor', 'tutor']",
              "fieldName": "viewOptions"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "test-view",
          "customElement": true,
          "modulePath": "src/lib/qti-test/components/test-view.ts",
          "definitionPath": "src/lib/qti-test/components/test-view.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "test-view",
          "declaration": {
            "name": "TestView",
            "module": "src/lib/qti-test/components/test-view.ts"
          }
        },
        {
          "kind": "js",
          "name": "TestView",
          "declaration": {
            "name": "TestView",
            "module": "src/lib/qti-test/components/test-view.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/core/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-test"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-assessment-test"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "../../exports/test.context"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/core/mixins/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./test-navigation.mixin"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./test-view.mixin"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts",
      "declarations": [
        {
          "kind": "mixin",
          "description": "Navigation mixin for QTI test components\n\nProvides comprehensive navigation functionality with:\n- Efficient item/section loading with AbortController support\n- Stimulus reference coordination and duplicate prevention\n- Proper event timing and state management\n- Error handling and edge case coverage",
          "name": "TestNavigationMixin",
          "members": [
            {
              "kind": "field",
              "name": "_activeController",
              "type": {
                "text": "AbortController | null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "method",
              "name": "_applyStimulusContent",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "stimulus",
                  "type": {
                    "text": "DocumentFragment | null"
                  }
                },
                {
                  "name": "element",
                  "type": {
                    "text": "{ identifier: string }"
                  }
                },
                {
                  "name": "item",
                  "type": {
                    "text": "{ identifier: string }"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_bindEventHandlers",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_cancelPreviousNavigation",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Cancel previous navigation and clean up all state"
            },
            {
              "kind": "method",
              "name": "_checkLoadingComplete",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Check if loading is complete and dispatch events accordingly"
            },
            {
              "kind": "method",
              "name": "_clearLoadedItems",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_clearNavigationState",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_clearStimulusRef",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "_createNavigationError",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "NavigationError"
                }
              },
              "parameters": [
                {
                  "name": "error",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "type",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_dispatchError",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "error",
                  "type": {
                    "text": "NavigationError"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_dispatchLoadingEnded",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_dispatchLoadingStarted",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_dispatchTestLoaded",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "results",
                  "type": {
                    "text": "any[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_executeNavigation",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "'item' | 'section'"
                  }
                },
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_findItemRef",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "QtiAssessmentItemRef"
                }
              },
              "parameters": [
                {
                  "name": "itemId",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_findSection",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "QtiAssessmentSection | null"
                }
              },
              "parameters": [
                {
                  "name": "sectionId",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getDefaultNavigationId",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string | undefined"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "'item' | 'section'"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_getSectionItemIds",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "sectionId",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleItemConnected",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<QtiAssessmentItemRef>"
                  }
                }
              ],
              "description": "Handle item connection events - track connected items and discover stimulus references"
            },
            {
              "kind": "method",
              "name": "_handleNavigationError",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "error",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "type",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_handleNavigationRequest",
              "privacy": "private",
              "parameters": [
                {
                  "name": "{ detail }",
                  "type": {
                    "text": "CustomEvent<{ type: 'item' | 'section'; id: string }>"
                  }
                }
              ],
              "description": "Main navigation request handler with proper lifecycle management"
            },
            {
              "kind": "method",
              "name": "_handleStimulusRefConnected",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "QtiAssessmentStimulusRefConnectedEvent"
                  }
                }
              ],
              "description": "Handle stimulus reference connection events with duplicate prevention"
            },
            {
              "kind": "method",
              "name": "_handleTestConnected",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<QtiAssessmentTest>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_initializeNavigation",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "_loadedStimulusHrefs",
              "privacy": "private",
              "default": "new Set<string>()"
            },
            {
              "kind": "field",
              "name": "_loadingState",
              "type": {
                "text": "object"
              },
              "privacy": "private",
              "default": "{ expectedItems: 0, connectedItems: 0, expectedStimulus: 0, loadedStimulus: 0, isComplete: false }"
            },
            {
              "kind": "field",
              "name": "_loadingStimulusHrefs",
              "privacy": "private",
              "default": "new Set<string>()"
            },
            {
              "kind": "method",
              "name": "_loadItems",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "itemIds",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "description": "Load items with simple tracking"
            },
            {
              "kind": "field",
              "name": "_loadResults",
              "type": {
                "text": "any[]"
              },
              "privacy": "private",
              "default": "[]"
            },
            {
              "kind": "method",
              "name": "_loadSingleItem",
              "privacy": "private",
              "parameters": [
                {
                  "name": "itemRef",
                  "type": {
                    "text": "QtiAssessmentItemRef"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_loadStimulus",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<DocumentFragment | null>"
                }
              },
              "parameters": [
                {
                  "name": "href",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_loadStimulusRef",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "element",
                  "type": {
                    "text": "{ identifier: string; href: string }"
                  }
                },
                {
                  "name": "item",
                  "type": {
                    "text": "{ identifier: string }"
                  }
                }
              ],
              "description": "Load stimulus reference with simple tracking"
            },
            {
              "kind": "method",
              "name": "_navigateToItem",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "itemId",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "description": "Navigate to specific item with simple state tracking"
            },
            {
              "kind": "method",
              "name": "_navigateToSection",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "sectionId",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "description": "Navigate to section with simple state tracking"
            },
            {
              "kind": "method",
              "name": "_resetLoadingState",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Reset loading state for new navigation"
            },
            {
              "kind": "field",
              "name": "_testElement",
              "type": {
                "text": "QtiAssessmentTest"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "_updateSessionContext",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "itemRef",
                  "type": {
                    "text": "QtiAssessmentItemRef"
                  }
                },
                {
                  "name": "itemId",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_waitForLoadingComplete",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "description": "Wait for loading to complete with simple polling"
            },
            {
              "kind": "field",
              "name": "cacheTransform",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "cache-transform"
            },
            {
              "kind": "method",
              "name": "getLoadingProgress",
              "privacy": "public",
              "description": "Get current loading progress for external consumption"
            },
            {
              "kind": "field",
              "name": "navigate",
              "type": {
                "text": "'item' | 'section' | null"
              },
              "default": "null",
              "attribute": "navigate"
            },
            {
              "kind": "method",
              "name": "navigateTo",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "'item' | 'section'"
                  },
                  "description": "Navigation type ('item' or 'section')"
                },
                {
                  "name": "id",
                  "optional": true,
                  "type": {
                    "text": "string"
                  },
                  "description": "Target identifier (optional, falls back to first available)"
                }
              ],
              "description": "Navigate to a specific item or section"
            },
            {
              "kind": "field",
              "name": "postLoadTestTransformCallback",
              "type": {
                "text": "PostLoadTestTransformCallback | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "postLoadTransformCallback",
              "type": {
                "text": "PostLoadTransformCallback | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "requestTimeout",
              "type": {
                "text": "number"
              },
              "default": "30000",
              "attribute": "requestTimeout"
            }
          ],
          "events": [
            {
              "name": "qti-navigation-error",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "qti-navigation-loading-ended",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "qti-navigation-loading-started",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "qti-request-navigation",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "qti-test-loaded",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "cache-transform",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "cacheTransform"
            },
            {
              "name": "navigate",
              "type": {
                "text": "'item' | 'section' | null"
              },
              "default": "null",
              "fieldName": "navigate"
            },
            {
              "name": "requestTimeout",
              "type": {
                "text": "number"
              },
              "default": "30000",
              "fieldName": "requestTimeout"
            }
          ],
          "parameters": [
            {
              "name": "superClass",
              "type": {
                "text": "T"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TestNavigationMixin",
          "declaration": {
            "name": "TestNavigationMixin",
            "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/core/mixins/test-processing.mixin.ts",
      "declarations": [
        {
          "kind": "mixin",
          "description": "",
          "name": "TestProcessingMixin",
          "members": [
            {
              "kind": "method",
              "name": "getOutcome",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Readonly<OutcomeVariable>"
                }
              },
              "parameters": [
                {
                  "name": "identifier",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getVariable",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Readonly<VariableDeclaration<string | string[] | null>>"
                }
              },
              "parameters": [
                {
                  "name": "identifier",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "outcomeProcessing",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "updateOutcomeVariable",
              "privacy": "public",
              "parameters": [
                {
                  "name": "identifier",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "value",
                  "type": {
                    "text": "string | string[] | undefined"
                  }
                }
              ]
            }
          ],
          "parameters": [
            {
              "name": "superClass",
              "type": {
                "text": "T"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TestProcessingMixin",
          "declaration": {
            "name": "TestProcessingMixin",
            "module": "src/lib/qti-test/core/mixins/test-processing.mixin.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/core/mixins/test-view.mixin.ts",
      "declarations": [
        {
          "kind": "mixin",
          "description": "",
          "name": "TestViewMixin",
          "members": [
            {
              "kind": "method",
              "name": "_setCorrectResponseVisibility",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "assessmentItem",
                  "type": {
                    "text": "QtiAssessmentItem"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_updateElementView",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "sessionContext",
              "type": {
                "text": "object"
              },
              "default": "{ ...this.sessionContext, view: 'candidate' }"
            }
          ],
          "parameters": [
            {
              "name": "superClass",
              "type": {
                "text": "T"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TestViewMixin",
          "declaration": {
            "name": "TestViewMixin",
            "module": "src/lib/qti-test/core/mixins/test-view.mixin.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/core/qti-assessment-test/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-assessment-item-ref"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-assessment-section"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-assessment-test"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-test-part"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./qti-test-feedback"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/core/qti-assessment-test/qti-assessment-item-ref.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiAssessmentItemRef",
          "members": [
            {
              "kind": "field",
              "name": "assessmentItem",
              "type": {
                "text": "QtiAssessmentItem | null"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "category",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "category"
            },
            {
              "kind": "field",
              "name": "fixed",
              "type": {
                "text": "boolean | undefined"
              },
              "attribute": "fixed"
            },
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "href"
            },
            {
              "kind": "field",
              "name": "identifier",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "identifier"
            },
            {
              "kind": "field",
              "name": "myTemplate",
              "type": {
                "text": "TemplateFunction"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean | undefined"
              },
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "weigths",
              "type": {
                "text": "Map<string, number>"
              },
              "default": "new Map()"
            },
            {
              "kind": "field",
              "name": "xmlDoc",
              "type": {
                "text": "DocumentFragment"
              }
            }
          ],
          "events": [
            {
              "name": "qti-assessment-item-ref-connected",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "category",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "category"
            },
            {
              "name": "fixed",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "fixed"
            },
            {
              "name": "href",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "href"
            },
            {
              "name": "identifier",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "identifier"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "required"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "qti-assessment-item-ref",
          "customElement": true,
          "modulePath": "src/lib/qti-test/core/qti-assessment-test/qti-assessment-item-ref.ts",
          "definitionPath": "src/lib/qti-test/core/qti-assessment-test/qti-assessment-item-ref.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-assessment-item-ref",
          "declaration": {
            "name": "QtiAssessmentItemRef",
            "module": "src/lib/qti-test/core/qti-assessment-test/qti-assessment-item-ref.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiAssessmentItemRef",
          "declaration": {
            "name": "QtiAssessmentItemRef",
            "module": "src/lib/qti-test/core/qti-assessment-test/qti-assessment-item-ref.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/core/qti-assessment-test/qti-assessment-section.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiAssessmentSection",
          "members": [
            {
              "kind": "field",
              "name": "_testContext",
              "type": {
                "text": "TestContext | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "_title",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "fixed",
              "type": {
                "text": "boolean"
              },
              "attribute": "fixed"
            },
            {
              "kind": "field",
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "attribute": "identifier"
            },
            {
              "kind": "field",
              "name": "keepTogether",
              "type": {
                "text": "boolean"
              },
              "attribute": "keep-together"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "string"
              },
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "title",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "visible",
              "type": {
                "text": "boolean"
              },
              "attribute": "visible"
            }
          ],
          "events": [
            {
              "name": "qti-assessment-section-connected",
              "type": {
                "text": "Event"
              }
            }
          ],
          "attributes": [
            {
              "name": "fixed",
              "type": {
                "text": "boolean"
              },
              "fieldName": "fixed"
            },
            {
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "fieldName": "identifier"
            },
            {
              "name": "keep-together",
              "type": {
                "text": "boolean"
              },
              "fieldName": "keepTogether"
            },
            {
              "name": "required",
              "type": {
                "text": "string"
              },
              "fieldName": "required"
            },
            {
              "name": "visible",
              "type": {
                "text": "boolean"
              },
              "fieldName": "visible"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "qti-assessment-section",
          "customElement": true,
          "modulePath": "src/lib/qti-test/core/qti-assessment-test/qti-assessment-section.ts",
          "definitionPath": "src/lib/qti-test/core/qti-assessment-test/qti-assessment-section.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-assessment-section",
          "declaration": {
            "name": "QtiAssessmentSection",
            "module": "src/lib/qti-test/core/qti-assessment-test/qti-assessment-section.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiAssessmentSection",
          "declaration": {
            "name": "QtiAssessmentSection",
            "module": "src/lib/qti-test/core/qti-assessment-test/qti-assessment-section.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/core/qti-assessment-test/qti-assessment-test.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiAssessmentTest",
          "members": [
            {
              "kind": "field",
              "name": "_testContext",
              "type": {
                "text": "TestContext | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "_title",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "attribute": "identifier"
            },
            {
              "kind": "field",
              "name": "title",
              "type": {
                "text": "string"
              },
              "attribute": "title"
            }
          ],
          "events": [
            {
              "name": "qti-assessment-test-connected",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "fieldName": "identifier"
            },
            {
              "name": "title",
              "type": {
                "text": "string"
              },
              "fieldName": "title"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "qti-assessment-test",
          "customElement": true,
          "modulePath": "src/lib/qti-test/core/qti-assessment-test/qti-assessment-test.ts",
          "definitionPath": "src/lib/qti-test/core/qti-assessment-test/qti-assessment-test.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-assessment-test",
          "declaration": {
            "name": "QtiAssessmentTest",
            "module": "src/lib/qti-test/core/qti-assessment-test/qti-assessment-test.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiAssessmentTest",
          "declaration": {
            "name": "QtiAssessmentTest",
            "module": "src/lib/qti-test/core/qti-assessment-test/qti-assessment-test.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/core/qti-assessment-test/qti-test-feedback.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiTestFeedback",
          "members": [
            {
              "kind": "field",
              "name": "_context",
              "type": {
                "text": "ItemContext | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              }
            },
            {
              "kind": "method",
              "name": "checkShowFeedback",
              "privacy": "public",
              "parameters": [
                {
                  "name": "outcomeIdentifier",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              },
              "type": {
                "text": "checkShowFeedback(outcomeIdentifier: string) => void"
              }
            },
            {
              "kind": "method",
              "name": "closeFeedback",
              "inheritedFrom": {
                "name": "QtiModalFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-modal-feedback/qti-modal-feedback.ts"
              },
              "type": {
                "text": "closeFeedback() => void"
              }
            },
            {
              "kind": "field",
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "attribute": "identifier",
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              }
            },
            {
              "kind": "method",
              "name": "openFeedback",
              "inheritedFrom": {
                "name": "QtiModalFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-modal-feedback/qti-modal-feedback.ts"
              },
              "type": {
                "text": "openFeedback() => void"
              }
            },
            {
              "kind": "field",
              "name": "outcomeIdentifier",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "outcome-identifier",
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              }
            },
            {
              "kind": "method",
              "name": "showFeedback",
              "privacy": "private",
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              }
            },
            {
              "kind": "field",
              "name": "showHide",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "attribute": "show-hide",
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              }
            },
            {
              "kind": "field",
              "name": "showStatus",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              }
            }
          ],
          "superclass": {
            "name": "QtiModalFeedback",
            "module": "/src/lib/qti-components/qti-feedback/qti-modal-feedback/qti-modal-feedback"
          },
          "tagName": "qti-test-feedback",
          "customElement": true,
          "attributes": [
            {
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "fieldName": "identifier",
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              }
            },
            {
              "name": "outcome-identifier",
              "type": {
                "text": "string"
              },
              "fieldName": "outcomeIdentifier",
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              }
            },
            {
              "name": "show-hide",
              "type": {
                "text": "string"
              },
              "fieldName": "showHide",
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              }
            }
          ],
          "events": [
            {
              "name": "qti-register-feedback",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "QtiFeedback",
                "module": "src/lib/qti-components/qti-feedback/qti-feedback.ts"
              }
            }
          ],
          "modulePath": "src/lib/qti-test/core/qti-assessment-test/qti-test-feedback.ts",
          "definitionPath": "src/lib/qti-test/core/qti-assessment-test/qti-test-feedback.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-test-feedback",
          "declaration": {
            "name": "QtiTestFeedback",
            "module": "src/lib/qti-test/core/qti-assessment-test/qti-test-feedback.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiTestFeedback",
          "declaration": {
            "name": "QtiTestFeedback",
            "module": "src/lib/qti-test/core/qti-assessment-test/qti-test-feedback.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/core/qti-assessment-test/qti-test-part.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiTestPart",
          "members": [
            {
              "kind": "field",
              "name": "_title",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "class",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "class"
            },
            {
              "kind": "field",
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "identifier"
            },
            {
              "kind": "field",
              "name": "navigationMode",
              "type": {
                "text": "'linear' | 'nonlinear'"
              },
              "default": "'nonlinear'",
              "attribute": "navigation-mode"
            },
            {
              "kind": "field",
              "name": "submissionMode",
              "type": {
                "text": "'individual' | 'simultaneous'"
              },
              "default": "'individual'",
              "attribute": "submission-mode"
            },
            {
              "kind": "field",
              "name": "title",
              "type": {
                "text": "string"
              }
            }
          ],
          "events": [
            {
              "name": "qti-test-part-connected",
              "type": {
                "text": "Event"
              }
            }
          ],
          "attributes": [
            {
              "name": "class",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "class"
            },
            {
              "name": "identifier",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "identifier"
            },
            {
              "name": "navigation-mode",
              "type": {
                "text": "'linear' | 'nonlinear'"
              },
              "default": "'nonlinear'",
              "fieldName": "navigationMode"
            },
            {
              "name": "submission-mode",
              "type": {
                "text": "'individual' | 'simultaneous'"
              },
              "default": "'individual'",
              "fieldName": "submissionMode"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "qti-test-part",
          "customElement": true,
          "modulePath": "src/lib/qti-test/core/qti-assessment-test/qti-test-part.ts",
          "definitionPath": "src/lib/qti-test/core/qti-assessment-test/qti-test-part.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-test-part",
          "declaration": {
            "name": "QtiTestPart",
            "module": "src/lib/qti-test/core/qti-assessment-test/qti-test-part.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "qti-test-part",
          "declaration": {
            "name": "QtiTestPart",
            "module": "src/lib/qti-test/core/qti-assessment-test/qti-test-part.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiTestPart",
          "declaration": {
            "name": "QtiTestPart",
            "module": "src/lib/qti-test/core/qti-assessment-test/qti-test-part.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/core/qti-assessment-test/qti-test-variables.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "QtiTestVariables",
          "members": [
            {
              "kind": "field",
              "name": "_testContext",
              "type": {
                "text": "TestContext | undefined"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "_testElement",
              "type": {
                "text": "QtiAssessmentTest"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "calculate",
              "privacy": "public",
              "type": {
                "text": "calculate() => void"
              }
            },
            {
              "kind": "method",
              "name": "getResult",
              "privacy": "public",
              "type": {
                "text": "getResult() => void"
              }
            }
          ],
          "superclass": {
            "name": "QtiExpression",
            "module": "/src/lib/exports/qti-expression"
          },
          "tagName": "qti-test-variables",
          "customElement": true,
          "modulePath": "src/lib/qti-test/core/qti-assessment-test/qti-test-variables.ts",
          "definitionPath": "src/lib/qti-test/core/qti-assessment-test/qti-test-variables.ts"
        },
        {
          "kind": "class",
          "description": "",
          "name": "QtiTestVariablesExpression",
          "members": [
            {
              "kind": "method",
              "name": "calculate",
              "return": {
                "type": {
                  "text": "number"
                }
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-test-variables",
          "declaration": {
            "name": "QtiTestVariables",
            "module": "src/lib/qti-test/core/qti-assessment-test/qti-test-variables.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiTestVariables",
          "declaration": {
            "name": "QtiTestVariables",
            "module": "src/lib/qti-test/core/qti-assessment-test/qti-test-variables.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiTestVariablesExpression",
          "declaration": {
            "name": "QtiTestVariablesExpression",
            "module": "src/lib/qti-test/core/qti-assessment-test/qti-test-variables.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/core/qti-test.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "`<qti-test>` is a custom element designed for rendering and interacting with QTI (Question and Test Interoperability) tests.\n\nThis component leverages several mixins to provide functionality for loading, navigating, processing, and displaying QTI test assessments.\n\n### Example Usage\n\nMinimal example including navigation:\n\n```html\n<qti-test>\n <test-navigation>\n   <test-container test-url=\"./path/to/assessment.xml\"></test-container>\n   <nav class=\"flex\">\n     <test-prev></test-prev>\n     <test-next></test-next>\n   </nav>\n </test-navigation>\n</qti-test>\n```\n\nUse the following file structure\nA qti-test loads a QTI3.0 assessmenttest.xml file from a package folder.\n\n```plaintext\nRoot/\n├── index.html\n└── /assets/api/examples/\n    ├── assessmenttest.xml\n    └── imsmanifest.xml\n\n```\n\n### Test components\n\nUse test components inside the qti-test component for added functionality.\n### Test next\n`<test-next> | TestNext`\n\n### Test prev\n\n`<test-prev> | TestPrev`\n### Test components\n\nYou can use normal class names to style the elements.\nAnd you can use the `test-prev` and `test-next` elements to navigate through the test.",
          "name": "QtiTest",
          "members": [
            {
              "kind": "field",
              "name": "_activeController",
              "type": {
                "text": "AbortController | null"
              },
              "privacy": "private",
              "default": "null",
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_applyStimulusContent",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "stimulus",
                  "type": {
                    "text": "DocumentFragment | null"
                  }
                },
                {
                  "name": "element",
                  "type": {
                    "text": "{ identifier: string }"
                  }
                },
                {
                  "name": "item",
                  "type": {
                    "text": "{ identifier: string }"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_bindEventHandlers",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_cancelPreviousNavigation",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Cancel previous navigation and clean up all state",
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_checkLoadingComplete",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Check if loading is complete and dispatch events accordingly",
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_clearLoadedItems",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_clearNavigationState",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_clearStimulusRef",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_createNavigationError",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "NavigationError"
                }
              },
              "parameters": [
                {
                  "name": "error",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "type",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_dispatchError",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "error",
                  "type": {
                    "text": "NavigationError"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_dispatchLoadingEnded",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_dispatchLoadingStarted",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_dispatchTestLoaded",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "results",
                  "type": {
                    "text": "any[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_executeNavigation",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "'item' | 'section'"
                  }
                },
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_findItemRef",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "QtiAssessmentItemRef"
                }
              },
              "parameters": [
                {
                  "name": "itemId",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_findSection",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "QtiAssessmentSection | null"
                }
              },
              "parameters": [
                {
                  "name": "sectionId",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_getDefaultNavigationId",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string | undefined"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "'item' | 'section'"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_getSectionItemIds",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "parameters": [
                {
                  "name": "sectionId",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_handleItemConnected",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<QtiAssessmentItemRef>"
                  }
                }
              ],
              "description": "Handle item connection events - track connected items and discover stimulus references",
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_handleNavigationError",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "error",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "type",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_handleNavigationRequest",
              "privacy": "private",
              "parameters": [
                {
                  "name": "{ detail }",
                  "type": {
                    "text": "CustomEvent<{ type: 'item' | 'section'; id: string }>"
                  }
                }
              ],
              "description": "Main navigation request handler with proper lifecycle management",
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_handleStimulusRefConnected",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "QtiAssessmentStimulusRefConnectedEvent"
                  }
                }
              ],
              "description": "Handle stimulus reference connection events with duplicate prevention",
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_handleTestConnected",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "CustomEvent<QtiAssessmentTest>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_initializeNavigation",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "_loadedStimulusHrefs",
              "privacy": "private",
              "default": "new Set<string>()",
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "_loadingState",
              "type": {
                "text": "object"
              },
              "privacy": "private",
              "default": "{ expectedItems: 0, connectedItems: 0, expectedStimulus: 0, loadedStimulus: 0, isComplete: false }",
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "_loadingStimulusHrefs",
              "privacy": "private",
              "default": "new Set<string>()",
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_loadItems",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "itemIds",
                  "type": {
                    "text": "string[]"
                  }
                }
              ],
              "description": "Load items with simple tracking",
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "_loadResults",
              "type": {
                "text": "any[]"
              },
              "privacy": "private",
              "default": "[]",
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_loadSingleItem",
              "privacy": "private",
              "parameters": [
                {
                  "name": "itemRef",
                  "type": {
                    "text": "QtiAssessmentItemRef"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_loadStimulus",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<DocumentFragment | null>"
                }
              },
              "parameters": [
                {
                  "name": "href",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_loadStimulusRef",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "element",
                  "type": {
                    "text": "{ identifier: string; href: string }"
                  }
                },
                {
                  "name": "item",
                  "type": {
                    "text": "{ identifier: string }"
                  }
                }
              ],
              "description": "Load stimulus reference with simple tracking",
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_navigateToItem",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "itemId",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "description": "Navigate to specific item with simple state tracking",
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_navigateToSection",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "sectionId",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "description": "Navigate to section with simple state tracking",
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_resetLoadingState",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Reset loading state for new navigation",
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_setCorrectResponseVisibility",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "assessmentItem",
                  "type": {
                    "text": "QtiAssessmentItem"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "TestViewMixin",
                "module": "src/lib/qti-test/core/mixins/test-view.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "_testElement",
              "type": {
                "text": "QtiAssessmentTest"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "TestBase",
                "module": "src/lib/qti-test/core/test-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "_updateElementView",
              "privacy": "private",
              "inheritedFrom": {
                "name": "TestViewMixin",
                "module": "src/lib/qti-test/core/mixins/test-view.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "_updateItemInTestContext",
              "privacy": "private",
              "description": "Updates the variables of an assessment item in the test context.\n- Matches the assessment item with the corresponding test context item.\n- If the item is not found, logs a warning.\n- Updates variables in the test context if exactly one variable exists.\n- Otherwise, syncs the assessment item's variables with the test context.",
              "parameters": [
                {
                  "description": "The assessment item to update.",
                  "name": "assessmentItem"
                }
              ],
              "inheritedFrom": {
                "name": "TestBase",
                "module": "src/lib/qti-test/core/test-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "_updateItemVariablesInTestContext",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "identifier",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "variables",
                  "type": {
                    "text": "readonly VariableDeclaration<string | string[] | null>[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "TestBase",
                "module": "src/lib/qti-test/core/test-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "_updateSessionContext",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "itemRef",
                  "type": {
                    "text": "QtiAssessmentItemRef"
                  }
                },
                {
                  "name": "itemId",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "_waitForLoadingComplete",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "description": "Wait for loading to complete with simple polling",
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "cacheTransform",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "cache-transform",
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLoadingProgress",
              "privacy": "public",
              "description": "Get current loading progress for external consumption",
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              },
              "type": {
                "text": "getLoadingProgress() => void"
              }
            },
            {
              "kind": "method",
              "name": "getOutcome",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Readonly<OutcomeVariable>"
                }
              },
              "parameters": [
                {
                  "name": "identifier",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "TestProcessingMixin",
                "module": "src/lib/qti-test/core/mixins/test-processing.mixin.ts"
              },
              "type": {
                "text": "getOutcome(identifier: string) => Readonly<OutcomeVariable>"
              }
            },
            {
              "kind": "method",
              "name": "getVariable",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Readonly<VariableDeclaration<string | string[] | null>>"
                }
              },
              "parameters": [
                {
                  "name": "identifier",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "TestProcessingMixin",
                "module": "src/lib/qti-test/core/mixins/test-processing.mixin.ts"
              },
              "type": {
                "text": "getVariable(identifier: string) => Readonly<VariableDeclaration<string | string[] | null>>"
              }
            },
            {
              "kind": "field",
              "name": "navigate",
              "type": {
                "text": "'item' | 'section' | null"
              },
              "default": "null",
              "attribute": "navigate",
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "kind": "method",
              "name": "navigateTo",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "'item' | 'section'"
                  },
                  "description": "Navigation type ('item' or 'section')"
                },
                {
                  "name": "id",
                  "optional": true,
                  "type": {
                    "text": "string"
                  },
                  "description": "Target identifier (optional, falls back to first available)"
                }
              ],
              "description": "Navigate to a specific item or section",
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              },
              "type": {
                "text": "navigateTo(type: 'item' | 'section', id?: string) => void"
              }
            },
            {
              "kind": "method",
              "name": "outcomeProcessing",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "TestProcessingMixin",
                "module": "src/lib/qti-test/core/mixins/test-processing.mixin.ts"
              },
              "type": {
                "text": "outcomeProcessing() => boolean"
              }
            },
            {
              "kind": "field",
              "name": "postLoadTestTransformCallback",
              "type": {
                "text": "PostLoadTestTransformCallback | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "postLoadTransformCallback",
              "type": {
                "text": "PostLoadTransformCallback | null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "requestTimeout",
              "type": {
                "text": "number"
              },
              "default": "30000",
              "attribute": "requestTimeout",
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "kind": "field",
              "name": "sessionContext",
              "type": {
                "text": "Readonly<SessionContext>"
              },
              "privacy": "public",
              "default": "{ ...this.sessionContext, view: 'candidate' }",
              "inheritedFrom": {
                "name": "TestBase",
                "module": "src/lib/qti-test/core/test-base.ts"
              }
            },
            {
              "kind": "field",
              "name": "testContext",
              "type": {
                "text": "Readonly<TestContext>"
              },
              "privacy": "public",
              "default": "INITIAL_TEST_CONTEXT",
              "inheritedFrom": {
                "name": "TestBase",
                "module": "src/lib/qti-test/core/test-base.ts"
              }
            },
            {
              "kind": "method",
              "name": "updateItemVariables",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "itemRefID",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "variables",
                  "type": {
                    "text": "VariableValue<string | string[] | null>[]"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "TestBase",
                "module": "src/lib/qti-test/core/test-base.ts"
              },
              "type": {
                "text": "updateItemVariables(itemRefID: string, variables: VariableValue<string | string[] | null>[]) => void"
              }
            },
            {
              "kind": "method",
              "name": "updateOutcomeVariable",
              "privacy": "public",
              "parameters": [
                {
                  "name": "identifier",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "value",
                  "type": {
                    "text": "string | string[] | undefined"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "TestProcessingMixin",
                "module": "src/lib/qti-test/core/mixins/test-processing.mixin.ts"
              },
              "type": {
                "text": "updateOutcomeVariable(identifier: string, value: string | string[] | undefined) => void"
              }
            }
          ],
          "events": [
            {
              "name": "qti-navigation-error",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "name": "qti-navigation-loading-ended",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "name": "qti-navigation-loading-started",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "name": "qti-request-navigation",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "name": "qti-test-connected",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "qti-test-context-updated",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "TestBase",
                "module": "src/lib/qti-test/core/test-base.ts"
              }
            },
            {
              "name": "qti-test-loaded",
              "type": {
                "text": "CustomEvent"
              },
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            }
          ],
          "mixins": [
            {
              "name": "TestNavigationMixin",
              "module": "/src/lib/qti-test/core/mixins"
            },
            {
              "name": "TestViewMixin",
              "module": "/src/lib/qti-test/core/mixins"
            },
            {
              "name": "TestProcessingMixin",
              "module": "/src/lib/qti-test/core/mixins/test-processing.mixin"
            }
          ],
          "superclass": {
            "name": "TestBase",
            "module": "/src/lib/qti-test/core/test-base"
          },
          "tagName": "qti-test",
          "customElement": true,
          "attributes": [
            {
              "name": "cache-transform",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "cacheTransform",
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "name": "navigate",
              "type": {
                "text": "'item' | 'section' | null"
              },
              "default": "null",
              "fieldName": "navigate",
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            },
            {
              "name": "requestTimeout",
              "type": {
                "text": "number"
              },
              "default": "30000",
              "fieldName": "requestTimeout",
              "inheritedFrom": {
                "name": "TestNavigationMixin",
                "module": "src/lib/qti-test/core/mixins/test-navigation.mixin.ts"
              }
            }
          ],
          "modulePath": "src/lib/qti-test/core/qti-test.ts",
          "definitionPath": "src/lib/qti-test/core/qti-test.ts"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "qti-test",
          "declaration": {
            "name": "QtiTest",
            "module": "src/lib/qti-test/core/qti-test.ts"
          }
        },
        {
          "kind": "js",
          "name": "QtiTest",
          "declaration": {
            "name": "QtiTest",
            "module": "src/lib/qti-test/core/qti-test.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/core/test-base.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "TestBase",
          "members": [
            {
              "kind": "field",
              "name": "_testElement",
              "type": {
                "text": "QtiAssessmentTest"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "_updateItemInTestContext",
              "privacy": "private",
              "description": "Updates the variables of an assessment item in the test context.\n- Matches the assessment item with the corresponding test context item.\n- If the item is not found, logs a warning.\n- Updates variables in the test context if exactly one variable exists.\n- Otherwise, syncs the assessment item's variables with the test context.",
              "parameters": [
                {
                  "description": "The assessment item to update.",
                  "name": "assessmentItem"
                }
              ]
            },
            {
              "kind": "method",
              "name": "_updateItemVariablesInTestContext",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "identifier",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "variables",
                  "type": {
                    "text": "readonly VariableDeclaration<string | string[] | null>[]"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "sessionContext",
              "type": {
                "text": "Readonly<SessionContext>"
              },
              "privacy": "public",
              "default": "INITIAL_SESSION_CONTEXT"
            },
            {
              "kind": "field",
              "name": "testContext",
              "type": {
                "text": "Readonly<TestContext>"
              },
              "privacy": "public",
              "default": "INITIAL_TEST_CONTEXT"
            },
            {
              "kind": "method",
              "name": "updateItemVariables",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "itemRefID",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "variables",
                  "type": {
                    "text": "VariableValue<string | string[] | null>[]"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "qti-test-context-updated",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true,
          "modulePath": "src/lib/qti-test/core/test-base.ts"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TestBase",
          "declaration": {
            "name": "TestBase",
            "module": "src/lib/qti-test/core/test-base.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/qti-test/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./core/index.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./components/index.js"
          }
        }
      ]
    }
  ]
}
